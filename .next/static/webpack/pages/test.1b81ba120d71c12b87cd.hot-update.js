webpackHotUpdate_N_E("pages/test",{

/***/ "./node_modules/convertkit-react/bin/convertkit-react.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/convertkit-react/bin/convertkit-react.esm.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/convertkit-react/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar b = \"function\" === typeof Symbol && Symbol[\"for\"],\n    c = b ? Symbol[\"for\"](\"react.element\") : 60103,\n    d = b ? Symbol[\"for\"](\"react.portal\") : 60106,\n    e = b ? Symbol[\"for\"](\"react.fragment\") : 60107,\n    f = b ? Symbol[\"for\"](\"react.strict_mode\") : 60108,\n    g = b ? Symbol[\"for\"](\"react.profiler\") : 60114,\n    h = b ? Symbol[\"for\"](\"react.provider\") : 60109,\n    k = b ? Symbol[\"for\"](\"react.context\") : 60110,\n    l = b ? Symbol[\"for\"](\"react.async_mode\") : 60111,\n    m = b ? Symbol[\"for\"](\"react.concurrent_mode\") : 60111,\n    n = b ? Symbol[\"for\"](\"react.forward_ref\") : 60112,\n    p = b ? Symbol[\"for\"](\"react.suspense\") : 60113,\n    q = b ? Symbol[\"for\"](\"react.suspense_list\") : 60120,\n    r = b ? Symbol[\"for\"](\"react.memo\") : 60115,\n    t = b ? Symbol[\"for\"](\"react.lazy\") : 60116,\n    v = b ? Symbol[\"for\"](\"react.block\") : 60121,\n    w = b ? Symbol[\"for\"](\"react.fundamental\") : 60117,\n    x = b ? Symbol[\"for\"](\"react.responder\") : 60118,\n    y = b ? Symbol[\"for\"](\"react.scope\") : 60119;\n\nfunction z(a) {\n  if (\"object\" === _typeof(a) && null !== a) {\n    var u = a.$$typeof;\n\n    switch (u) {\n      case c:\n        switch (a = a.type, a) {\n          case l:\n          case m:\n          case e:\n          case g:\n          case f:\n          case p:\n            return a;\n\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case n:\n              case t:\n              case r:\n              case h:\n                return a;\n\n              default:\n                return u;\n            }\n\n        }\n\n      case d:\n        return u;\n    }\n  }\n}\n\nfunction A(a) {\n  return z(a) === m;\n}\n\nvar AsyncMode = l;\nvar ConcurrentMode = m;\nvar ContextConsumer = k;\nvar ContextProvider = h;\nvar Element = c;\nvar ForwardRef = n;\nvar Fragment = e;\nvar Lazy = t;\nvar Memo = r;\nvar Portal = d;\nvar Profiler = g;\nvar StrictMode = f;\nvar Suspense = p;\n\nvar isAsyncMode = function isAsyncMode(a) {\n  return A(a) || z(a) === l;\n};\n\nvar isConcurrentMode = A;\n\nvar isContextConsumer = function isContextConsumer(a) {\n  return z(a) === k;\n};\n\nvar isContextProvider = function isContextProvider(a) {\n  return z(a) === h;\n};\n\nvar isElement = function isElement(a) {\n  return \"object\" === _typeof(a) && null !== a && a.$$typeof === c;\n};\n\nvar isForwardRef = function isForwardRef(a) {\n  return z(a) === n;\n};\n\nvar isFragment = function isFragment(a) {\n  return z(a) === e;\n};\n\nvar isLazy = function isLazy(a) {\n  return z(a) === t;\n};\n\nvar isMemo = function isMemo(a) {\n  return z(a) === r;\n};\n\nvar isPortal = function isPortal(a) {\n  return z(a) === d;\n};\n\nvar isProfiler = function isProfiler(a) {\n  return z(a) === g;\n};\n\nvar isStrictMode = function isStrictMode(a) {\n  return z(a) === f;\n};\n\nvar isSuspense = function isSuspense(a) {\n  return z(a) === p;\n};\n\nvar isValidElementType = function isValidElementType(a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || \"object\" === _typeof(a) && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);\n};\n\nvar typeOf = z;\nvar reactIs_production_min = {\n  AsyncMode: AsyncMode,\n  ConcurrentMode: ConcurrentMode,\n  ContextConsumer: ContextConsumer,\n  ContextProvider: ContextProvider,\n  Element: Element,\n  ForwardRef: ForwardRef,\n  Fragment: Fragment,\n  Lazy: Lazy,\n  Memo: Memo,\n  Portal: Portal,\n  Profiler: Profiler,\n  StrictMode: StrictMode,\n  Suspense: Suspense,\n  isAsyncMode: isAsyncMode,\n  isConcurrentMode: isConcurrentMode,\n  isContextConsumer: isContextConsumer,\n  isContextProvider: isContextProvider,\n  isElement: isElement,\n  isForwardRef: isForwardRef,\n  isFragment: isFragment,\n  isLazy: isLazy,\n  isMemo: isMemo,\n  isPortal: isPortal,\n  isProfiler: isProfiler,\n  isStrictMode: isStrictMode,\n  isSuspense: isSuspense,\n  isValidElementType: isValidElementType,\n  typeOf: typeOf\n};\n\nvar reactIs_development = createCommonjsModule(function (module, exports) {\n\n  if (true) {\n    (function () {\n      // nor polyfill, then a plain number is used for performance.\n\n      var hasSymbol = typeof Symbol === 'function' && Symbol[\"for\"];\n      var REACT_ELEMENT_TYPE = hasSymbol ? Symbol[\"for\"]('react.element') : 0xeac7;\n      var REACT_PORTAL_TYPE = hasSymbol ? Symbol[\"for\"]('react.portal') : 0xeaca;\n      var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol[\"for\"]('react.fragment') : 0xeacb;\n      var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol[\"for\"]('react.strict_mode') : 0xeacc;\n      var REACT_PROFILER_TYPE = hasSymbol ? Symbol[\"for\"]('react.profiler') : 0xead2;\n      var REACT_PROVIDER_TYPE = hasSymbol ? Symbol[\"for\"]('react.provider') : 0xeacd;\n      var REACT_CONTEXT_TYPE = hasSymbol ? Symbol[\"for\"]('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n      // (unstable) APIs that have been removed. Can we remove the symbols?\n\n      var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol[\"for\"]('react.async_mode') : 0xeacf;\n      var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol[\"for\"]('react.concurrent_mode') : 0xeacf;\n      var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol[\"for\"]('react.forward_ref') : 0xead0;\n      var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol[\"for\"]('react.suspense') : 0xead1;\n      var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol[\"for\"]('react.suspense_list') : 0xead8;\n      var REACT_MEMO_TYPE = hasSymbol ? Symbol[\"for\"]('react.memo') : 0xead3;\n      var REACT_LAZY_TYPE = hasSymbol ? Symbol[\"for\"]('react.lazy') : 0xead4;\n      var REACT_BLOCK_TYPE = hasSymbol ? Symbol[\"for\"]('react.block') : 0xead9;\n      var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol[\"for\"]('react.fundamental') : 0xead5;\n      var REACT_RESPONDER_TYPE = hasSymbol ? Symbol[\"for\"]('react.responder') : 0xead6;\n      var REACT_SCOPE_TYPE = hasSymbol ? Symbol[\"for\"]('react.scope') : 0xead7;\n\n      function isValidElementType(type) {\n        return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || _typeof(type) === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n      }\n\n      function typeOf(object) {\n        if (_typeof(object) === 'object' && object !== null) {\n          var $$typeof = object.$$typeof;\n\n          switch ($$typeof) {\n            case REACT_ELEMENT_TYPE:\n              var type = object.type;\n\n              switch (type) {\n                case REACT_ASYNC_MODE_TYPE:\n                case REACT_CONCURRENT_MODE_TYPE:\n                case REACT_FRAGMENT_TYPE:\n                case REACT_PROFILER_TYPE:\n                case REACT_STRICT_MODE_TYPE:\n                case REACT_SUSPENSE_TYPE:\n                  return type;\n\n                default:\n                  var $$typeofType = type && type.$$typeof;\n\n                  switch ($$typeofType) {\n                    case REACT_CONTEXT_TYPE:\n                    case REACT_FORWARD_REF_TYPE:\n                    case REACT_LAZY_TYPE:\n                    case REACT_MEMO_TYPE:\n                    case REACT_PROVIDER_TYPE:\n                      return $$typeofType;\n\n                    default:\n                      return $$typeof;\n                  }\n\n              }\n\n            case REACT_PORTAL_TYPE:\n              return $$typeof;\n          }\n        }\n\n        return undefined;\n      } // AsyncMode is deprecated along with isAsyncMode\n\n\n      var AsyncMode = REACT_ASYNC_MODE_TYPE;\n      var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n      var ContextConsumer = REACT_CONTEXT_TYPE;\n      var ContextProvider = REACT_PROVIDER_TYPE;\n      var Element = REACT_ELEMENT_TYPE;\n      var ForwardRef = REACT_FORWARD_REF_TYPE;\n      var Fragment = REACT_FRAGMENT_TYPE;\n      var Lazy = REACT_LAZY_TYPE;\n      var Memo = REACT_MEMO_TYPE;\n      var Portal = REACT_PORTAL_TYPE;\n      var Profiler = REACT_PROFILER_TYPE;\n      var StrictMode = REACT_STRICT_MODE_TYPE;\n      var Suspense = REACT_SUSPENSE_TYPE;\n      var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\n      function isAsyncMode(object) {\n        {\n          if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n            console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n          }\n        }\n        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n      }\n\n      function isConcurrentMode(object) {\n        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n      }\n\n      function isContextConsumer(object) {\n        return typeOf(object) === REACT_CONTEXT_TYPE;\n      }\n\n      function isContextProvider(object) {\n        return typeOf(object) === REACT_PROVIDER_TYPE;\n      }\n\n      function isElement(object) {\n        return _typeof(object) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n      }\n\n      function isForwardRef(object) {\n        return typeOf(object) === REACT_FORWARD_REF_TYPE;\n      }\n\n      function isFragment(object) {\n        return typeOf(object) === REACT_FRAGMENT_TYPE;\n      }\n\n      function isLazy(object) {\n        return typeOf(object) === REACT_LAZY_TYPE;\n      }\n\n      function isMemo(object) {\n        return typeOf(object) === REACT_MEMO_TYPE;\n      }\n\n      function isPortal(object) {\n        return typeOf(object) === REACT_PORTAL_TYPE;\n      }\n\n      function isProfiler(object) {\n        return typeOf(object) === REACT_PROFILER_TYPE;\n      }\n\n      function isStrictMode(object) {\n        return typeOf(object) === REACT_STRICT_MODE_TYPE;\n      }\n\n      function isSuspense(object) {\n        return typeOf(object) === REACT_SUSPENSE_TYPE;\n      }\n\n      exports.AsyncMode = AsyncMode;\n      exports.ConcurrentMode = ConcurrentMode;\n      exports.ContextConsumer = ContextConsumer;\n      exports.ContextProvider = ContextProvider;\n      exports.Element = Element;\n      exports.ForwardRef = ForwardRef;\n      exports.Fragment = Fragment;\n      exports.Lazy = Lazy;\n      exports.Memo = Memo;\n      exports.Portal = Portal;\n      exports.Profiler = Profiler;\n      exports.StrictMode = StrictMode;\n      exports.Suspense = Suspense;\n      exports.isAsyncMode = isAsyncMode;\n      exports.isConcurrentMode = isConcurrentMode;\n      exports.isContextConsumer = isContextConsumer;\n      exports.isContextProvider = isContextProvider;\n      exports.isElement = isElement;\n      exports.isForwardRef = isForwardRef;\n      exports.isFragment = isFragment;\n      exports.isLazy = isLazy;\n      exports.isMemo = isMemo;\n      exports.isPortal = isPortal;\n      exports.isProfiler = isProfiler;\n      exports.isStrictMode = isStrictMode;\n      exports.isSuspense = isSuspense;\n      exports.isValidElementType = isValidElementType;\n      exports.typeOf = typeOf;\n    })();\n  }\n});\nvar reactIs_development_1 = reactIs_development.AsyncMode;\nvar reactIs_development_2 = reactIs_development.ConcurrentMode;\nvar reactIs_development_3 = reactIs_development.ContextConsumer;\nvar reactIs_development_4 = reactIs_development.ContextProvider;\nvar reactIs_development_5 = reactIs_development.Element;\nvar reactIs_development_6 = reactIs_development.ForwardRef;\nvar reactIs_development_7 = reactIs_development.Fragment;\nvar reactIs_development_8 = reactIs_development.Lazy;\nvar reactIs_development_9 = reactIs_development.Memo;\nvar reactIs_development_10 = reactIs_development.Portal;\nvar reactIs_development_11 = reactIs_development.Profiler;\nvar reactIs_development_12 = reactIs_development.StrictMode;\nvar reactIs_development_13 = reactIs_development.Suspense;\nvar reactIs_development_14 = reactIs_development.isAsyncMode;\nvar reactIs_development_15 = reactIs_development.isConcurrentMode;\nvar reactIs_development_16 = reactIs_development.isContextConsumer;\nvar reactIs_development_17 = reactIs_development.isContextProvider;\nvar reactIs_development_18 = reactIs_development.isElement;\nvar reactIs_development_19 = reactIs_development.isForwardRef;\nvar reactIs_development_20 = reactIs_development.isFragment;\nvar reactIs_development_21 = reactIs_development.isLazy;\nvar reactIs_development_22 = reactIs_development.isMemo;\nvar reactIs_development_23 = reactIs_development.isPortal;\nvar reactIs_development_24 = reactIs_development.isProfiler;\nvar reactIs_development_25 = reactIs_development.isStrictMode;\nvar reactIs_development_26 = reactIs_development.isSuspense;\nvar reactIs_development_27 = reactIs_development.isValidElementType;\nvar reactIs_development_28 = reactIs_development.typeOf;\n\nvar reactIs = createCommonjsModule(function (module) {\n\n  if (false) {} else {\n    module.exports = reactIs_development;\n  }\n});\n\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nvar objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nvar ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\nvar printWarning = function printWarning() {};\n\nif (true) {\n  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function printWarning(text) {\n    var message = 'Warning: ' + text;\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\n\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + _typeof(typeSpecs[typeSpecName]) + '`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);\n        } catch (ex) {\n          error = ex;\n        }\n\n        if (error && !(error instanceof Error)) {\n          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + _typeof(error) + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');\n        }\n\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          var stack = getStack ? getStack() : '';\n          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));\n        }\n      }\n    }\n  }\n}\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\n\n\ncheckPropTypes.resetWarningCache = function () {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n};\n\nvar checkPropTypes_1 = checkPropTypes;\n\nvar has$1 = Function.call.bind(Object.prototype.hasOwnProperty);\n\nvar printWarning$1 = function printWarning() {};\n\nif (true) {\n  printWarning$1 = function printWarning(text) {\n    var message = 'Warning: ' + text;\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nvar factoryWithTypeCheckers = function factoryWithTypeCheckers(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n\n  var ANONYMOUS = '<<anonymous>>'; // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker\n  };\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n\n  /*eslint-disable no-self-compare*/\n\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n\n\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  } // Make `instanceof Error` still work for returned errors.\n\n\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret_1) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if ( true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n\n          if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n          manualPropTypeWarningCount < 3) {\n            printWarning$1('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n\n      var propValue = props[propName];\n\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);\n\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!reactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning$1('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');\n        } else {\n          printWarning$1('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n\n        if (type === 'symbol') {\n          return String(value);\n        }\n\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n\n      for (var key in propValue) {\n        if (has$1(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n\n      if (typeof checker !== 'function') {\n        printWarning$1('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n\n        if (!checker) {\n          continue;\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      } // We need to check all keys in case some are required but missing from\n      // props.\n\n\n      var allKeys = objectAssign({}, props[propName], shapeTypes);\n\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n\n        if (!checker) {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (_typeof(propValue)) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n\n      case 'boolean':\n        return !propValue;\n\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    } // falsy value can't be a Symbol\n\n\n    if (!propValue) {\n      return false;\n    } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n  function getPropType(propValue) {\n    var propType = _typeof(propValue);\n\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n\n    return propType;\n  } // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n\n\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n\n    var propType = getPropType(propValue);\n\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n\n    return propType;\n  } // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n\n\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n\n      default:\n        return type;\n    }\n  } // Returns class name of the object, if any.\n\n\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes_1;\n  ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};\n\nfunction emptyFunction() {}\n\nfunction emptyFunctionWithReset() {}\n\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nvar factoryWithThrowingShims = function factoryWithThrowingShims() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret_1) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};\n\nvar propTypes = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  if (true) {\n    var ReactIs = reactIs; // By explicitly using `prop-types` you are opting into new development behavior.\n    // http://fb.me/prop-types-in-prod\n\n    var throwOnDirectAccess = true;\n    module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);\n  } else {}\n});\n\nfunction Minimal(_ref) {\n  var className = _ref.className,\n      action = _ref.action,\n      submitText = _ref.submitText,\n      emailPlaceholder = _ref.emailPlaceholder,\n      namePlaceholder = _ref.namePlaceholder,\n      hideName = _ref.hideName,\n      showLabels = _ref.showLabels,\n      nameLabel = _ref.nameLabel,\n      emailLabel = _ref.emailLabel,\n      newTab = _ref.newTab,\n      formId = _ref.formId;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"form\", {\n    action: action,\n    method: \"post\",\n    target: newTab ? '_blank' : '_self',\n    \"data-sv-form\": formId,\n    className: className\n  }, !hideName && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-first-name\"\n  }, nameLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    type: \"text\",\n    name: \"fields[first_name]\",\n    placeholder: namePlaceholder,\n    \"aria-label\": nameLabel,\n    id: \"ck-first-name\"\n  })), showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-email\"\n  }, emailLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    type: \"email\",\n    name: \"email_address\",\n    placeholder: emailPlaceholder,\n    \"aria-label\": emailLabel,\n    id: \"ck-email\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    type: \"submit\"\n  }, submitText));\n}\n\nvar e$1 = [],\n    t$1 = [];\nfunction injector_bf1ba7e0 (n, r) {\n  if (n && \"undefined\" != typeof document) {\n    void 0 === r && (r = {});\n    var d,\n        a = !0 === r.prepend ? \"prepend\" : \"append\",\n        i = \"undefined\" != typeof r.singleTag && r.singleTag,\n        s = \"undefined\" != typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName(\"head\")[0];\n\n    if (i) {\n      var u = e$1.indexOf(s);\n      -1 === u && (u = e$1.push(s) - 1, t$1[u] = {}), d = t$1[u] && t$1[u][a] ? t$1[u][a] : t$1[u][a] = o();\n    } else d = o();\n\n    65279 === n.charCodeAt(0) && (n = n.substring(1)), d.styleSheet ? d.styleSheet.cssText += n : d.appendChild(document.createTextNode(n));\n  }\n\n  function o() {\n    var e = document.createElement(\"style\");\n    if (e.setAttribute(\"type\", \"text/css\"), r.attributes) for (var t = Object.keys(r.attributes), n = 0; n < t.length; n++) {\n      e.setAttribute(t[n], r.attributes[t[n]]);\n    }\n    var d = \"prepend\" === a ? \"afterbegin\" : \"beforeend\";\n    return s.insertAdjacentElement(d, e), e;\n  }\n}\n\nconst css_57658326 = \".formkit-form.clare * {\\n\\tbox-sizing: border-box;\\n}\\n\\n.formkit-form.clare {\\n\\t-webkit-font-smoothing: antialiased;\\n\\t-moz-osx-font-smoothing: grayscale;\\n}\\n\\n.formkit-form.clare legend {\\n\\tborder: none;\\n\\tfont-size: inherit;\\n\\tmargin-bottom: 10px;\\n\\tpadding: 0;\\n\\tposition: relative;\\n\\tdisplay: table;\\n}\\n\\n.formkit-form.clare fieldset {\\n\\tborder: 0;\\n\\tpadding: 0.01em 0 0 0;\\n\\tmargin: 0;\\n\\tmin-width: 0;\\n}\\n\\n.formkit-form.clare body:not(:-moz-handler-blocked) fieldset {\\n\\tdisplay: table-cell;\\n}\\n\\n.formkit-form.clare h1,\\n.formkit-form.clare h2,\\n.formkit-form.clare h3,\\n.formkit-form.clare h4,\\n.formkit-form.clare h5,\\n.formkit-form.clare h6 {\\n\\tcolor: inherit;\\n\\tfont-size: inherit;\\n\\tfont-weight: inherit;\\n}\\n\\n.formkit-form.clare p {\\n\\tcolor: inherit;\\n\\tfont-size: inherit;\\n\\tfont-weight: inherit;\\n}\\n\\n.formkit-form.clare ol:not([template-default]),\\n.formkit-form.clare ul:not([template-default]),\\n.formkit-form.clare blockquote:not([template-default]) {\\n\\ttext-align: left;\\n}\\n\\n.formkit-form.clare p:not([template-default]),\\n.formkit-form.clare hr:not([template-default]),\\n.formkit-form.clare blockquote:not([template-default]),\\n.formkit-form.clare ol:not([template-default]),\\n.formkit-form.clare ul:not([template-default]) {\\n\\tcolor: inherit;\\n\\tfont-style: initial;\\n}\\n\\n.formkit-form.clare[data-format=\\\"modal\\\"] {\\n\\tdisplay: none;\\n}\\n\\n.formkit-form.clare[data-format=\\\"slide in\\\"] {\\n\\tdisplay: none;\\n}\\n\\n.formkit-form.clare[data-format=\\\"sticky bar\\\"] {\\n\\tdisplay: none;\\n}\\n\\n.formkit-sticky-bar .formkit-form.clare[data-format=\\\"sticky bar\\\"] {\\n\\tdisplay: block;\\n}\\n\\n.formkit-form.clare .formkit-input,\\n.formkit-form.clare .formkit-select,\\n.formkit-form.clare .formkit-checkboxes {\\n\\twidth: 100%;\\n}\\n\\n.formkit-form.clare .formkit-button,\\n.formkit-form.clare .formkit-submit {\\n\\tborder: 0;\\n\\tborder-radius: 5px;\\n\\tcolor: #ffffff;\\n\\tcursor: pointer;\\n\\tdisplay: inline-block;\\n\\ttext-align: center;\\n\\tfont-size: 15px;\\n\\tfont-weight: 500;\\n\\tcursor: pointer;\\n\\tmargin-bottom: 15px;\\n\\toverflow: hidden;\\n\\tpadding: 0;\\n\\tposition: relative;\\n\\tvertical-align: middle;\\n}\\n\\n.formkit-form.clare .formkit-button:hover,\\n.formkit-form.clare .formkit-submit:hover,\\n.formkit-form.clare .formkit-button:focus,\\n.formkit-form.clare .formkit-submit:focus {\\n\\toutline: none;\\n}\\n\\n.formkit-form.clare .formkit-button:hover > span,\\n.formkit-form.clare .formkit-submit:hover > span,\\n.formkit-form.clare .formkit-button:focus > span,\\n.formkit-form.clare .formkit-submit:focus > span {\\n\\tbackground-color: rgba(0, 0, 0, 0.1);\\n}\\n\\n.formkit-form.clare .formkit-button > span,\\n.formkit-form.clare .formkit-submit > span {\\n\\tdisplay: block;\\n\\t-webkit-transition: all 300ms ease-in-out;\\n\\ttransition: all 300ms ease-in-out;\\n\\tpadding: 12px 24px;\\n}\\n\\n.formkit-form.clare .formkit-input {\\n\\tbackground: #ffffff;\\n\\tfont-size: 15px;\\n\\tpadding: 12px;\\n\\tborder: 1px solid #e3e3e3;\\n\\t-webkit-flex: 1 0 auto;\\n\\t-ms-flex: 1 0 auto;\\n\\tflex: 1 0 auto;\\n\\tline-height: 1.4;\\n\\tmargin: 0;\\n\\t-webkit-transition: border-color ease-out 300ms;\\n\\ttransition: border-color ease-out 300ms;\\n}\\n\\n.formkit-form.clare .formkit-input:focus {\\n\\toutline: none;\\n\\tborder-color: #1677be;\\n\\t-webkit-transition: border-color ease 300ms;\\n\\ttransition: border-color ease 300ms;\\n}\\n\\n.formkit-form.clare .formkit-input::-webkit-input-placeholder {\\n\\tcolor: inherit;\\n\\topacity: 0.8;\\n}\\n\\n.formkit-form.clare .formkit-input::-moz-placeholder {\\n\\tcolor: inherit;\\n\\topacity: 0.8;\\n}\\n\\n.formkit-form.clare .formkit-input:-ms-input-placeholder {\\n\\tcolor: inherit;\\n\\topacity: 0.8;\\n}\\n\\n.formkit-form.clare .formkit-input::placeholder {\\n\\tcolor: inherit;\\n\\topacity: 0.8;\\n}\\n\\n.formkit-form.clare[data-group=\\\"dropdown\\\"] {\\n\\tposition: relative;\\n\\tdisplay: inline-block;\\n\\twidth: 100%;\\n}\\n\\n.formkit-form.clare[data-group=\\\"dropdown\\\"]::before {\\n\\tcontent: \\\"\\\";\\n\\ttop: calc(50% - 2.5px);\\n\\tright: 10px;\\n\\tposition: absolute;\\n\\tpointer-events: none;\\n\\tborder-color: #4f4f4f transparent transparent transparent;\\n\\tborder-style: solid;\\n\\tborder-width: 6px 6px 0 6px;\\n\\theight: 0;\\n\\twidth: 0;\\n\\tz-index: 999;\\n}\\n\\n.formkit-form.clare[data-group=\\\"dropdown\\\"] select {\\n\\theight: auto;\\n\\twidth: 100%;\\n\\tcursor: pointer;\\n\\tcolor: #333333;\\n\\tline-height: 1.4;\\n\\tmargin-bottom: 0;\\n\\tpadding: 0 6px;\\n\\t-webkit-appearance: none;\\n\\t-moz-appearance: none;\\n\\tappearance: none;\\n\\tfont-size: 15px;\\n\\tpadding: 12px;\\n\\tpadding-right: 25px;\\n\\tborder: 1px solid #e3e3e3;\\n\\tbackground: #ffffff;\\n}\\n\\n.formkit-form.clare[data-group=\\\"dropdown\\\"] select:focus {\\n\\toutline: none;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"] {\\n\\ttext-align: left;\\n\\tmargin: 0;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] {\\n\\tmargin-bottom: 10px;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] * {\\n\\tcursor: pointer;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"]:last-of-type {\\n\\tmargin-bottom: 0;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"] {\\n\\tdisplay: none;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"] + label::after {\\n\\tcontent: none;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked + label::after {\\n\\tborder-color: #ffffff;\\n\\tcontent: \\\"\\\";\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked + label::before {\\n\\tbackground: #10bf7a;\\n\\tborder-color: #10bf7a;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] label {\\n\\tposition: relative;\\n\\tdisplay: inline-block;\\n\\tpadding-left: 28px;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] label::before,\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] label::after {\\n\\tposition: absolute;\\n\\tcontent: \\\"\\\";\\n\\tdisplay: inline-block;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] label::before {\\n\\theight: 16px;\\n\\twidth: 16px;\\n\\tborder: 1px solid #e3e3e3;\\n\\tbackground: #ffffff;\\n\\tleft: 0px;\\n\\ttop: 3px;\\n}\\n\\n.formkit-form.clare[data-group=\\\"checkboxes\\\"][data-group=\\\"checkbox\\\"] label::after {\\n\\theight: 4px;\\n\\twidth: 8px;\\n\\tborder-left: 2px solid #4d4d4d;\\n\\tborder-bottom: 2px solid #4d4d4d;\\n\\t-webkit-transform: rotate(-45deg);\\n\\t-ms-transform: rotate(-45deg);\\n\\ttransform: rotate(-45deg);\\n\\tleft: 4px;\\n\\ttop: 8px;\\n}\\n\\n.formkit-form.clare .formkit-alert {\\n\\tbackground: #f9fafb;\\n\\tborder: 1px solid #e3e3e3;\\n\\tborder-radius: 5px;\\n\\t-webkit-flex: 1 0 auto;\\n\\t-ms-flex: 1 0 auto;\\n\\tflex: 1 0 auto;\\n\\tlist-style: none;\\n\\tmargin: 25px auto;\\n\\tpadding: 12px;\\n\\ttext-align: center;\\n\\twidth: 100%;\\n}\\n\\n.formkit-form.clare .formkit-alert:empty {\\n\\tdisplay: none;\\n}\\n\\n.formkit-form.clare .formkit-alert-success {\\n\\tbackground: #d3fbeb;\\n\\tborder-color: #10bf7a;\\n\\tcolor: #0c905c;\\n}\\n\\n.formkit-form.clare .formkit-alert-error {\\n\\tbackground: #fde8e2;\\n\\tborder-color: #f2643b;\\n\\tcolor: #ea4110;\\n}\\n\\n.formkit-form.clare .formkit-spinner {\\n\\tdisplay: -webkit-box;\\n\\tdisplay: -webkit-flex;\\n\\tdisplay: -ms-flexbox;\\n\\tdisplay: flex;\\n\\theight: 0px;\\n\\twidth: 0px;\\n\\tmargin: 0 auto;\\n\\tposition: absolute;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\tright: 0;\\n\\twidth: 0px;\\n\\toverflow: hidden;\\n\\ttext-align: center;\\n\\t-webkit-transition: all 300ms ease-in-out;\\n\\ttransition: all 300ms ease-in-out;\\n}\\n\\n.formkit-form.clare .formkit-spinner > div {\\n\\tmargin: auto;\\n\\twidth: 12px;\\n\\theight: 12px;\\n\\tbackground-color: #fff;\\n\\topacity: 0.3;\\n\\tborder-radius: 100%;\\n\\tdisplay: inline-block;\\n\\t-webkit-animation: formkit-bouncedelay-formkit-form-data-uid-e8437783ad- 1.4s infinite ease-in-out both;\\n\\tanimation: formkit-bouncedelay-formkit-form-data-uid-e8437783ad- 1.4s infinite ease-in-out both;\\n}\\n\\n.formkit-form.clare .formkit-spinner > div:nth-child(1) {\\n\\t-webkit-animation-delay: -0.32s;\\n\\tanimation-delay: -0.32s;\\n}\\n\\n.formkit-form.clare .formkit-spinner > div:nth-child(2) {\\n\\t-webkit-animation-delay: -0.16s;\\n\\tanimation-delay: -0.16s;\\n}\\n\\n.formkit-form.clare .formkit-submit[data-active] .formkit-spinner {\\n\\topacity: 1;\\n\\theight: 100%;\\n\\twidth: 50px;\\n}\\n\\n.formkit-form.clare .formkit-submit[data-active] .formkit-spinner ~ span {\\n\\topacity: 0;\\n}\\n\\n.formkit-form.clare .formkit-powered-by[data-active=\\\"false\\\"] {\\n\\topacity: 0.35;\\n}\\n\\n@-webkit-keyframes formkit-bouncedelay-formkit-form-data-uid-e8437783ad- {\\n\\t0%, 80%, 100% {\\n\\t\\t-webkit-transform: scale(0);\\n\\t\\t-ms-transform: scale(0);\\n\\t\\ttransform: scale(0);\\n\\t}\\n\\t40% {\\n\\t\\t-webkit-transform: scale(1);\\n\\t\\t-ms-transform: scale(1);\\n\\t\\ttransform: scale(1);\\n\\t}\\n}\\n\\n@keyframes formkit-bouncedelay-formkit-form-data-uid-e8437783ad- {\\n\\t0%, 80%, 100% {\\n\\t\\t-webkit-transform: scale(0);\\n\\t\\t-ms-transform: scale(0);\\n\\t\\ttransform: scale(0);\\n\\t}\\n\\t40% {\\n\\t\\t-webkit-transform: scale(1);\\n\\t\\t-ms-transform: scale(1);\\n\\t\\ttransform: scale(1);\\n\\t}\\n}\\n\\n.formkit-form.clare blockquote {\\n\\tpadding: 10px 20px;\\n\\tmargin: 0 0 20px;\\n\\tborder-left: 5px solid #e1e1e1;\\n}\\n\\n.formkit-form.clare {\\n\\tmax-width: 700px;\\n}\\n\\n.formkit-form.clare[data-style=\\\"clean\\\"] {\\n\\twidth: 100%;\\n}\\n\\n.formkit-form.clare .formkit-fields[data-stacked=\\\"false\\\"] {\\n\\tdisplay: -webkit-box;\\n\\tdisplay: -webkit-flex;\\n\\tdisplay: -ms-flexbox;\\n\\tdisplay: flex;\\n\\t-webkit-flex-wrap: wrap;\\n\\t-ms-flex-wrap: wrap;\\n\\tflex-wrap: wrap;\\n\\tmargin: 0 auto;\\n}\\n\\n.formkit-form.clare .formkit-field,\\n.formkit-form.clare .formkit-submit {\\n\\tmargin: 0 0 15px 0;\\n\\t-webkit-flex: 1 0 100%;\\n\\t-ms-flex: 1 0 100%;\\n\\tflex: 1 0 100%;\\n}\\n\\n.formkit-form.clare .formkit-powered-by {\\n\\tcolor: #7d7d7d;\\n\\tdisplay: block;\\n\\tfont-size: 12px;\\n\\tmargin: 0;\\n\\ttext-align: center;\\n}\\n\\n.formkit-form.clare[min-width~=\\\"700\\\"][data-style=\\\"clean\\\"],\\n.formkit-form.clare[min-width~=\\\"800\\\"][data-style=\\\"clean\\\"] {\\n\\tpadding: 10px;\\n}\\n\\n.formkit-form.clare[min-width~=\\\"700\\\"] .formkit-fields[data-stacked=\\\"false\\\"],\\n.formkit-form.clare[min-width~=\\\"800\\\"] .formkit-fields[data-stacked=\\\"false\\\"] {\\n\\tmargin-left: -5px;\\n\\tmargin-right: -5px;\\n}\\n\\n.formkit-form.clare[min-width~=\\\"700\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-field,\\n.formkit-form.clare[min-width~=\\\"800\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-field,\\n.formkit-form.clare[min-width~=\\\"700\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-submit,\\n.formkit-form.clare[min-width~=\\\"800\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-submit {\\n\\tmargin: 0 5px 15px 5px;\\n}\\n\\n.formkit-form.clare[min-width~=\\\"700\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-field,\\n.formkit-form.clare[min-width~=\\\"800\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-field {\\n\\t-webkit-flex: 100 1 auto;\\n\\t-ms-flex: 100 1 auto;\\n\\tflex: 100 1 auto;\\n}\\n.formkit-form.clare[min-width~=\\\"700\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-submit,\\n.formkit-form.clare[min-width~=\\\"800\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-submit {\\n\\t-webkit-flex: 1 1 auto;\\n\\t-ms-flex: 1 1 auto;\\n\\tflex: 1 1 auto;\\n}\\n\";\ninjector_bf1ba7e0(css_57658326,{\"singleTag\":true});\n\nfunction Warning(_ref) {\n  var message = _ref.message;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    id: \"ck-warn\",\n    style: {\n      border: 'solid medium #ccc',\n      borderRadius: '4px',\n      background: '#ddd',\n      color: '#777',\n      fontWeight: 'bold',\n      padding: '10px'\n    }\n  }, message);\n}\n\nvar ALLOWED_FORMATS = ['inline', 'modal', 'slide in'];\n\nfunction Clare(_ref) {\n  var _React$createElement;\n\n  var options = _ref.options,\n      className = _ref.className,\n      action = _ref.action,\n      submitText = _ref.submitText,\n      emailPlaceholder = _ref.emailPlaceholder,\n      namePlaceholder = _ref.namePlaceholder,\n      hideName = _ref.hideName,\n      showLabels = _ref.showLabels,\n      nameLabel = _ref.nameLabel,\n      emailLabel = _ref.emailLabel,\n      newTab = _ref.newTab,\n      formId = _ref.formId,\n      format = _ref.format,\n      stacked = _ref.stacked,\n      hideWarnings = _ref.hideWarnings;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, !hideWarnings && !ALLOWED_FORMATS.includes(format) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Warning, {\n    message: \"This template is not available for the chosen format\"\n  }) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"form\", (_React$createElement = {\n    action: action,\n    method: \"post\",\n    target: newTab ? '_blank' : '_self',\n    className: \"seva-form formkit-form clare \".concat(className)\n  }, _defineProperty(_React$createElement, \"method\", \"post\"), _defineProperty(_React$createElement, \"data-sv-form\", formId), _defineProperty(_React$createElement, \"data-format\", format), _defineProperty(_React$createElement, \"data-version\", options.version), _defineProperty(_React$createElement, \"data-uid\", options.uid), _defineProperty(_React$createElement, \"data-options\", JSON.stringify(options)), _defineProperty(_React$createElement, \"min-width\", \"400 500 600 700 800\"), _React$createElement), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-style\": \"clean\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"ul\", {\n    className: \"formkit-alert formkit-alert-error\",\n    \"data-element\": \"errors\",\n    \"data-group\": \"alert\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"fields\",\n    \"data-stacked\": stacked,\n    className: \"seva-fields formkit-fields\"\n  }, !hideName && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-first-form\"\n  }, nameLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": nameLabel,\n    name: \"fields[first_name]\",\n    placeholder: namePlaceholder,\n    type: \"text\",\n    style: {\n      color: 'rgb(0, 0, 0)',\n      borderColor: 'rgb(227, 227, 227)',\n      borderRadius: '4px',\n      fontWeight: 400\n    },\n    id: \"ck-first-name\"\n  }))), showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-email\"\n  }, emailLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": emailLabel,\n    name: \"email_address\",\n    placeholder: emailPlaceholder,\n    required: true,\n    type: \"email\",\n    style: {\n      color: 'rgb(0, 0, 0)',\n      borderColor: 'rgb(227, 227, 227)',\n      borderRadius: '4px',\n      fontWeight: 400\n    },\n    id: \"ck-email\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    \"data-element\": \"submit\",\n    className: \"formkit-submit formkit-submit\",\n    style: {\n      color: 'rgb(255, 255, 255)',\n      backgroundColor: 'rgb(22, 119, 190)',\n      borderRadius: '4px',\n      fontWeight: 400\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-spinner\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, submitText))), options.settings.powered_by.show ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", {\n    href: options.settings.powered_by.url,\n    className: \"formkit-powered-by\",\n    \"data-element\": \"powered-by\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"Powered By ConvertKit\") : null)));\n}\n\nconst css_7c18d6d6 = \".formkit-form.mills * {\\n  box-sizing: border-box;\\n}\\n\\n.formkit-form.mills {\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.formkit-form.mills legend {\\n  border: none;\\n  font-size: inherit;\\n  margin-bottom: 10px;\\n  padding: 0;\\n  position: relative;\\n  display: table;\\n}\\n\\n.formkit-form.mills fieldset {\\n  border: 0;\\n  padding: 0.01em 0 0 0;\\n  margin: 0;\\n  min-width: 0;\\n}\\n\\n.formkit-form.mills body:not(:-moz-handler-blocked) fieldset {\\n  display: table-cell;\\n}\\n\\n.formkit-form.mills h1,\\n.formkit-form.mills h2,\\n.formkit-form.mills h3,\\n.formkit-form.mills h4,\\n.formkit-form.mills h5,\\n.formkit-form.mills h6 {\\n  color: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.formkit-form.mills p {\\n  color: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.formkit-form.mills ol:not([template-default]),\\n.formkit-form.mills ul:not([template-default]),\\n.formkit-form.mills blockquote:not([template-default]) {\\n  text-align: left;\\n}\\n\\n.formkit-form.mills p:not([template-default]),\\n.formkit-form.mills hr:not([template-default]),\\n.formkit-form.mills blockquote:not([template-default]),\\n.formkit-form.mills ol:not([template-default]),\\n.formkit-form.mills ul:not([template-default]) {\\n  color: inherit;\\n  font-style: initial;\\n}\\n\\n.formkit-form.mills[data-format=\\\"modal\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.mills[data-format=\\\"slide in\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.mills[data-format=\\\"sticky bar\\\"] {\\n  display: none;\\n}\\n\\n.formkit-sticky-bar .formkit-form.mills[data-format=\\\"sticky bar\\\"] {\\n  display: block;\\n}\\n\\n.formkit-form.mills .formkit-input,\\n.formkit-form.mills .formkit-select,\\n.formkit-form.mills .formkit-checkboxes {\\n  width: 100%;\\n}\\n\\n.formkit-form.mills .formkit-button,\\n.formkit-form.mills .formkit-submit {\\n  border: 0;\\n  border-radius: 5px;\\n  color: #ffffff;\\n  cursor: pointer;\\n  display: inline-block;\\n  text-align: center;\\n  font-size: 15px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  margin-bottom: 15px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: relative;\\n  vertical-align: middle;\\n}\\n\\n.formkit-form.mills .formkit-button:hover,\\n.formkit-form.mills .formkit-submit:hover,\\n.formkit-form.mills .formkit-button:focus,\\n.formkit-form.mills .formkit-submit:focus {\\n  outline: none;\\n}\\n\\n.formkit-form.mills .formkit-button:hover>span,\\n.formkit-form.mills .formkit-submit:hover>span,\\n.formkit-form.mills .formkit-button:focus>span,\\n.formkit-form.mills .formkit-submit:focus>span {\\n  background-color: rgba(0, 0, 0, 0.1);\\n}\\n\\n.formkit-form.mills .formkit-button>span,\\n.formkit-form.mills .formkit-submit>span {\\n  display: block;\\n  -webkit-transition: all 300ms ease-in-out;\\n  transition: all 300ms ease-in-out;\\n  padding: 12px 24px;\\n}\\n\\n.formkit-form.mills .formkit-input {\\n  background: #ffffff;\\n  font-size: 15px;\\n  padding: 12px;\\n  border: 1px solid #e3e3e3;\\n  -webkit-flex: 1 0 auto;\\n  -ms-flex: 1 0 auto;\\n  flex: 1 0 auto;\\n  line-height: 1.4;\\n  margin: 0;\\n  -webkit-transition: border-color ease-out 300ms;\\n  transition: border-color ease-out 300ms;\\n}\\n\\n.formkit-form.mills .formkit-input:focus {\\n  outline: none;\\n  border-color: #1677be;\\n  -webkit-transition: border-color ease 300ms;\\n  transition: border-color ease 300ms;\\n}\\n\\n.formkit-form.mills .formkit-input::-webkit-input-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.mills .formkit-input::-moz-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.mills .formkit-input:-ms-input-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.mills .formkit-input::placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.mills [data-group=\\\"dropdown\\\"] {\\n  position: relative;\\n  display: inline-block;\\n  width: 100%;\\n}\\n\\n.formkit-form.mills [data-group=\\\"dropdown\\\"]::before {\\n  content: \\\"\\\";\\n  top: calc(50% - 2.5px);\\n  right: 10px;\\n  position: absolute;\\n  pointer-events: none;\\n  border-color: #4f4f4f transparent transparent transparent;\\n  border-style: solid;\\n  border-width: 6px 6px 0 6px;\\n  height: 0;\\n  width: 0;\\n  z-index: 999;\\n}\\n\\n.formkit-form.mills [data-group=\\\"dropdown\\\"] select {\\n  height: auto;\\n  width: 100%;\\n  cursor: pointer;\\n  color: #333333;\\n  line-height: 1.4;\\n  margin-bottom: 0;\\n  padding: 0 6px;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n  font-size: 15px;\\n  padding: 12px;\\n  padding-right: 25px;\\n  border: 1px solid #e3e3e3;\\n  background: #ffffff;\\n}\\n\\n.formkit-form.mills [data-group=\\\"dropdown\\\"] select:focus {\\n  outline: none;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] {\\n  text-align: left;\\n  margin: 0;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] {\\n  margin-bottom: 10px;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] * {\\n  cursor: pointer;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"]:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]+label::after {\\n  content: none;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked+label::after {\\n  border-color: #ffffff;\\n  content: \\\"\\\";\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked+label::before {\\n  background: #10bf7a;\\n  border-color: #10bf7a;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label {\\n  position: relative;\\n  display: inline-block;\\n  padding-left: 28px;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::before,\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::after {\\n  position: absolute;\\n  content: \\\"\\\";\\n  display: inline-block;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::before {\\n  height: 16px;\\n  width: 16px;\\n  border: 1px solid #e3e3e3;\\n  background: #ffffff;\\n  left: 0px;\\n  top: 3px;\\n}\\n\\n.formkit-form.mills [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::after {\\n  height: 4px;\\n  width: 8px;\\n  border-left: 2px solid #4d4d4d;\\n  border-bottom: 2px solid #4d4d4d;\\n  -webkit-transform: rotate(-45deg);\\n  -ms-transform: rotate(-45deg);\\n  transform: rotate(-45deg);\\n  left: 4px;\\n  top: 8px;\\n}\\n\\n.formkit-form.mills .formkit-alert {\\n  background: #f9fafb;\\n  border: 1px solid #e3e3e3;\\n  border-radius: 5px;\\n  -webkit-flex: 1 0 auto;\\n  -ms-flex: 1 0 auto;\\n  flex: 1 0 auto;\\n  list-style: none;\\n  margin: 25px auto;\\n  padding: 12px;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.formkit-form.mills .formkit-alert:empty {\\n  display: none;\\n}\\n\\n.formkit-form.mills .formkit-alert-success {\\n  background: #d3fbeb;\\n  border-color: #10bf7a;\\n  color: #0c905c;\\n}\\n\\n.formkit-form.mills .formkit-alert-error {\\n  background: #fde8e2;\\n  border-color: #f2643b;\\n  color: #ea4110;\\n}\\n\\n.formkit-form.mills .formkit-spinner {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 0px;\\n  width: 0px;\\n  margin: 0 auto;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: 0px;\\n  overflow: hidden;\\n  text-align: center;\\n  -webkit-transition: all 300ms ease-in-out;\\n  transition: all 300ms ease-in-out;\\n}\\n\\n.formkit-form.mills .formkit-spinner>div {\\n  margin: auto;\\n  width: 12px;\\n  height: 12px;\\n  background-color: #fff;\\n  opacity: 0.3;\\n  border-radius: 100%;\\n  display: inline-block;\\n  -webkit-animation: formkit-bouncedelay-formkit-form-data-uid-5c3a33ee02- 1.4s infinite ease-in-out both;\\n  animation: formkit-bouncedelay-formkit-form-data-uid-5c3a33ee02- 1.4s infinite ease-in-out both;\\n}\\n\\n.formkit-form.mills .formkit-spinner>div:nth-child(1) {\\n  -webkit-animation-delay: -0.32s;\\n  animation-delay: -0.32s;\\n}\\n\\n.formkit-form.mills .formkit-spinner>div:nth-child(2) {\\n  -webkit-animation-delay: -0.16s;\\n  animation-delay: -0.16s;\\n}\\n\\n.formkit-form.mills .formkit-submit[data-active] .formkit-spinner {\\n  opacity: 1;\\n  height: 100%;\\n  width: 50px;\\n}\\n\\n.formkit-form.mills .formkit-submit[data-active] .formkit-spinner~span {\\n  opacity: 0;\\n}\\n\\n.formkit-form.mills .formkit-powered-by[data-active=\\\"false\\\"] {\\n  opacity: 0.35;\\n}\\n\\n.formkit-form.mills .formkit-powered-by-convertkit-container {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  width: 100%;\\n  z-index: 5;\\n  margin: 10px 0;\\n  position: relative;\\n}\\n\\n.formkit-form.mills .formkit-powered-by-convertkit-container[data-active=\\\"false\\\"] {\\n  opacity: 0.35;\\n}\\n\\n.formkit-form.mills .formkit-powered-by-convertkit {\\n  -webkit-align-items: center;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n  background-color: #ffffff;\\n  border: 1px solid #dce1e5;\\n  border-radius: 4px;\\n  color: #373f45;\\n  cursor: pointer;\\n  display: block;\\n  height: 36px;\\n  margin: 0 auto;\\n  opacity: 0.95;\\n  -webkit-text-decoration: none;\\n  text-decoration: none;\\n  text-indent: 100%;\\n  -webkit-transition: ease-in-out all 200ms;\\n  transition: ease-in-out all 200ms;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  width: 190px;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg width='162' height='20' viewBox='0 0 162 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M83.0561 15.2457C86.675 15.2457 89.4722 12.5154 89.4722 9.14749C89.4722 5.99211 86.8443 4.06563 85.1038 4.06563C82.6801 4.06563 80.7373 5.76407 80.4605 8.28551C80.4092 8.75244 80.0387 9.14403 79.5686 9.14069C78.7871 9.13509 77.6507 9.12841 76.9314 9.13092C76.6217 9.13199 76.3658 8.88106 76.381 8.57196C76.4895 6.38513 77.2218 4.3404 78.618 2.76974C80.1695 1.02445 82.4289 0 85.1038 0C89.5979 0 93.8406 4.07791 93.8406 9.14749C93.8406 14.7608 89.1832 19.3113 83.1517 19.3113C78.8502 19.3113 74.5179 16.5041 73.0053 12.5795C72.9999 12.565 72.9986 12.5492 73.0015 12.534C73.0218 12.4179 73.0617 12.3118 73.1011 12.2074C73.1583 12.0555 73.2143 11.907 73.2062 11.7359L73.18 11.1892C73.174 11.0569 73.2075 10.9258 73.2764 10.8127C73.3452 10.6995 73.4463 10.6094 73.5666 10.554L73.7852 10.4523C73.9077 10.3957 74.0148 10.3105 74.0976 10.204C74.1803 10.0974 74.2363 9.97252 74.2608 9.83983C74.3341 9.43894 74.6865 9.14749 75.0979 9.14749C75.7404 9.14749 76.299 9.57412 76.5088 10.1806C77.5188 13.1 79.1245 15.2457 83.0561 15.2457Z' fill='%23373F45'/%3E%3Cpath d='M155.758 6.91365C155.028 6.91365 154.804 6.47916 154.804 5.98857C154.804 5.46997 154.986 5.06348 155.758 5.06348C156.53 5.06348 156.712 5.46997 156.712 5.98857C156.712 6.47905 156.516 6.91365 155.758 6.91365ZM142.441 12.9304V9.32833L141.415 9.32323V8.90392C141.415 8.44719 141.786 8.07758 142.244 8.07986L142.441 8.08095V6.55306L144.082 6.09057V8.08073H145.569V8.50416C145.569 8.61242 145.548 8.71961 145.506 8.81961C145.465 8.91961 145.404 9.01047 145.328 9.08699C145.251 9.16351 145.16 9.2242 145.06 9.26559C144.96 9.30698 144.853 9.32826 144.745 9.32822H144.082V12.7201C144.082 13.2423 144.378 13.4256 144.76 13.4887C145.209 13.5629 145.583 13.888 145.583 14.343V14.9626C144.029 14.9626 142.441 14.8942 142.441 12.9304Z' fill='%23373F45'/%3E%3Cpath d='M110.058 7.92554C108.417 7.88344 106.396 8.92062 106.396 11.5137C106.396 14.0646 108.417 15.0738 110.058 15.0318C111.742 15.0738 113.748 14.0646 113.748 11.5137C113.748 8.92062 111.742 7.88344 110.058 7.92554ZM110.07 13.7586C108.878 13.7586 108.032 12.8905 108.032 11.461C108.032 10.1013 108.878 9.20569 110.071 9.20569C111.263 9.20569 112.101 10.0995 112.101 11.459C112.101 12.8887 111.263 13.7586 110.07 13.7586Z' fill='%23373F45'/%3E%3Cpath d='M118.06 7.94098C119.491 7.94098 120.978 8.33337 120.978 11.1366V14.893H120.063C119.608 14.893 119.238 14.524 119.238 14.0689V10.9965C119.238 9.66506 118.747 9.16047 117.891 9.16047C117.414 9.16047 116.797 9.52486 116.502 9.81915V14.069C116.502 14.1773 116.481 14.2845 116.44 14.3845C116.398 14.4845 116.337 14.5753 116.261 14.6519C116.184 14.7284 116.093 14.7891 115.993 14.8305C115.893 14.8719 115.786 14.8931 115.678 14.8931H114.847V8.10918H115.773C115.932 8.10914 116.087 8.16315 116.212 8.26242C116.337 8.36168 116.424 8.50033 116.46 8.65577C116.881 8.19328 117.428 7.94098 118.06 7.94098ZM122.854 8.09713C123.024 8.09708 123.19 8.1496 123.329 8.2475C123.468 8.34541 123.574 8.48391 123.631 8.64405L125.133 12.8486L126.635 8.64415C126.692 8.48402 126.798 8.34551 126.937 8.2476C127.076 8.1497 127.242 8.09718 127.412 8.09724H128.598L126.152 14.3567C126.091 14.5112 125.986 14.6439 125.849 14.7374C125.711 14.831 125.549 14.881 125.383 14.8809H124.333L121.668 8.09713H122.854Z' fill='%23373F45'/%3E%3Cpath d='M135.085 14.5514C134.566 14.7616 133.513 15.0416 132.418 15.0416C130.496 15.0416 129.024 13.9345 129.024 11.4396C129.024 9.19701 130.451 7.99792 132.191 7.99792C134.338 7.99792 135.254 9.4378 135.158 11.3979C135.139 11.8029 134.786 12.0983 134.38 12.0983H130.679C130.763 13.1916 131.562 13.7662 132.615 13.7662C133.028 13.7662 133.462 13.7452 133.983 13.6481C134.535 13.545 135.085 13.9375 135.085 14.4985V14.5514ZM133.673 10.949C133.785 9.87621 133.061 9.28752 132.191 9.28752C131.321 9.28752 130.734 9.93979 130.679 10.9489L133.673 10.949Z' fill='%23373F45'/%3E%3Cpath d='M137.345 8.11122C137.497 8.11118 137.645 8.16229 137.765 8.25635C137.884 8.35041 137.969 8.48197 138.005 8.62993C138.566 8.20932 139.268 7.94303 139.759 7.94303C139.801 7.94303 140.068 7.94303 140.489 7.99913V8.7265C140.489 9.11748 140.15 9.4147 139.759 9.4147C139.31 9.4147 138.651 9.5829 138.131 9.8773V14.8951H136.462V8.11112L137.345 8.11122ZM156.6 14.0508V8.09104H155.769C155.314 8.09104 154.944 8.45999 154.944 8.9151V14.8748H155.775C156.23 14.8748 156.6 14.5058 156.6 14.0508ZM158.857 12.9447V9.34254H157.749V8.91912C157.749 8.46401 158.118 8.09506 158.574 8.09506H158.857V6.56739L160.499 6.10479V8.09506H161.986V8.51848C161.986 8.97359 161.617 9.34254 161.161 9.34254H160.499V12.7345C160.499 13.2566 160.795 13.44 161.177 13.503C161.626 13.5774 162 13.9024 162 14.3574V14.977C160.446 14.977 158.857 14.9086 158.857 12.9447ZM98.1929 10.1124C98.2033 6.94046 100.598 5.16809 102.895 5.16809C104.171 5.16809 105.342 5.44285 106.304 6.12953L105.914 6.6631C105.654 7.02011 105.16 7.16194 104.749 6.99949C104.169 6.7702 103.622 6.7218 103.215 6.7218C101.335 6.7218 99.9169 7.92849 99.9068 10.1123C99.9169 12.2959 101.335 13.5201 103.215 13.5201C103.622 13.5201 104.169 13.4717 104.749 13.2424C105.16 13.0799 105.654 13.2046 105.914 13.5615L106.304 14.0952C105.342 14.7819 104.171 15.0566 102.895 15.0566C100.598 15.0566 98.2033 13.2842 98.1929 10.1124ZM147.619 5.21768C148.074 5.21768 148.444 5.58663 148.444 6.04174V9.81968L151.82 5.58131C151.897 5.47733 151.997 5.39282 152.112 5.3346C152.227 5.27638 152.355 5.24607 152.484 5.24611H153.984L150.166 10.0615L153.984 14.8749H152.484C152.355 14.8749 152.227 14.8446 152.112 14.7864C151.997 14.7281 151.897 14.6436 151.82 14.5397L148.444 10.3025V14.0508C148.444 14.5059 148.074 14.8749 147.619 14.8749H146.746V5.21768H147.619Z' fill='%23373F45'/%3E%3Cpath d='M0.773438 6.5752H2.68066C3.56543 6.5752 4.2041 6.7041 4.59668 6.96191C4.99219 7.21973 5.18994 7.62695 5.18994 8.18359C5.18994 8.55859 5.09326 8.87061 4.8999 9.11963C4.70654 9.36865 4.42822 9.52539 4.06494 9.58984V9.63379C4.51611 9.71875 4.84717 9.88721 5.05811 10.1392C5.27197 10.3882 5.37891 10.7266 5.37891 11.1543C5.37891 11.7314 5.17676 12.1841 4.77246 12.5122C4.37109 12.8374 3.81152 13 3.09375 13H0.773438V6.5752ZM1.82373 9.22949H2.83447C3.27393 9.22949 3.59473 9.16064 3.79688 9.02295C3.99902 8.88232 4.1001 8.64502 4.1001 8.31104C4.1001 8.00928 3.99023 7.79102 3.77051 7.65625C3.55371 7.52148 3.20801 7.4541 2.7334 7.4541H1.82373V9.22949ZM1.82373 10.082V12.1167H2.93994C3.37939 12.1167 3.71045 12.0332 3.93311 11.8662C4.15869 11.6963 4.27148 11.4297 4.27148 11.0664C4.27148 10.7324 4.15723 10.4849 3.92871 10.3237C3.7002 10.1626 3.35303 10.082 2.88721 10.082H1.82373Z' fill='%23373F45'/%3E%3Cpath d='M13.011 6.5752V10.7324C13.011 11.207 12.9084 11.623 12.7034 11.9805C12.5012 12.335 12.2068 12.6089 11.8201 12.8022C11.4363 12.9927 10.9763 13.0879 10.4402 13.0879C9.6433 13.0879 9.02368 12.877 8.5813 12.4551C8.13892 12.0332 7.91772 11.4531 7.91772 10.7148V6.5752H8.9724V10.6401C8.9724 11.1704 9.09546 11.5615 9.34155 11.8135C9.58765 12.0654 9.96557 12.1914 10.4753 12.1914C11.4656 12.1914 11.9607 11.6714 11.9607 10.6313V6.5752H13.011Z' fill='%23373F45'/%3E%3Cpath d='M15.9146 13V6.5752H16.9649V13H15.9146Z' fill='%23373F45'/%3E%3Cpath d='M19.9255 13V6.5752H20.9758V12.0991H23.696V13H19.9255Z' fill='%23373F45'/%3E%3Cpath d='M28.2828 13H27.2325V7.47607H25.3428V6.5752H30.1724V7.47607H28.2828V13Z' fill='%23373F45'/%3E%3Cpath d='M41.9472 13H40.8046L39.7148 9.16796C39.6679 9.00097 39.6093 8.76074 39.539 8.44727C39.4687 8.13086 39.4262 7.91113 39.4116 7.78809C39.3823 7.97559 39.3339 8.21875 39.2665 8.51758C39.2021 8.81641 39.1479 9.03905 39.1039 9.18554L38.0405 13H36.8979L36.0673 9.7832L35.2236 6.5752H36.2958L37.2143 10.3193C37.3578 10.9199 37.4604 11.4502 37.5219 11.9102C37.5541 11.6611 37.6025 11.3828 37.6669 11.0752C37.7314 10.7676 37.79 10.5186 37.8427 10.3281L38.8886 6.5752H39.9301L41.0024 10.3457C41.1049 10.6943 41.2133 11.2158 41.3276 11.9102C41.3715 11.4912 41.477 10.958 41.644 10.3105L42.558 6.5752H43.6215L41.9472 13Z' fill='%23373F45'/%3E%3Cpath d='M45.7957 13V6.5752H46.846V13H45.7957Z' fill='%23373F45'/%3E%3Cpath d='M52.0258 13H50.9755V7.47607H49.0859V6.5752H53.9155V7.47607H52.0258V13Z' fill='%23373F45'/%3E%3Cpath d='M61.2312 13H60.1765V10.104H57.2146V13H56.1643V6.5752H57.2146V9.20312H60.1765V6.5752H61.2312V13Z' fill='%23373F45'/%3E%3C/svg%3E\\\");\\n}\\n\\n.formkit-form.mills .formkit-powered-by-convertkit:hover,\\n.formkit-form.mills .formkit-powered-by-convertkit:focus {\\n  -webkit-transform: scale(1.025) perspective(1px);\\n  -ms-transform: scale(1.025) perspective(1px);\\n  transform: scale(1.025) perspective(1px);\\n  opacity: 1;\\n}\\n\\n@-webkit-keyframes formkit-bouncedelay-formkit-form-data-uid-5c3a33ee02- {\\n\\n  0%,\\n  80%,\\n  100% {\\n    -webkit-transform: scale(0);\\n    -ms-transform: scale(0);\\n    transform: scale(0);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@keyframes formkit-bouncedelay-formkit-form-data-uid-5c3a33ee02- {\\n\\n  0%,\\n  80%,\\n  100% {\\n    -webkit-transform: scale(0);\\n    -ms-transform: scale(0);\\n    transform: scale(0);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n.formkit-form.mills blockquote {\\n  padding: 10px 20px;\\n  margin: 0 0 20px;\\n  border-left: 5px solid #e1e1e1;\\n}\\n\\n.formkit-form.mills {\\n  border: 1px solid #e3e3e3;\\n  max-width: 700px;\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.formkit-form.mills .formkit-background {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  background-size: cover;\\n  background-position: center;\\n  opacity: 0.3;\\n}\\n\\n.formkit-form.mills [data-style=\\\"minimal\\\"] {\\n  padding: 20px;\\n  width: 100%;\\n  position: relative;\\n}\\n\\n.formkit-form.mills .formkit-header {\\n  margin: 0 0 27px 0;\\n}\\n\\n.formkit-form.mills .formkit-subheader {\\n  margin: 18px 0;\\n  text-align: center;\\n}\\n\\n.formkit-form.mills .formkit-guarantee {\\n  font-size: 13px;\\n  margin: 10px 0 15px 0;\\n  text-align: center;\\n}\\n\\n.formkit-form.mills .formkit-guarantee>p {\\n  margin: 0;\\n}\\n\\n.formkit-form.mills .formkit-powered-by {\\n  color: #7d7d7d;\\n  display: block;\\n  font-size: 12px;\\n  margin: 10px 0 0 0;\\n  text-align: center;\\n}\\n\\n.formkit-form.mills .formkit-fields[data-stacked=\\\"false\\\"] {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-flex-wrap: wrap;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n  margin: 25px auto 0 auto;\\n}\\n\\n.formkit-form.mills .formkit-field,\\n.formkit-form.mills .formkit-submit {\\n  margin: 0 0 15px 0;\\n  -webkit-flex: 1 0 100%;\\n  -ms-flex: 1 0 100%;\\n  flex: 1 0 100%;\\n}\\n\\n.formkit-form.mills[min-width~=\\\"600\\\"] [data-style=\\\"minimal\\\"] {\\n  padding: 40px;\\n}\\n\\n.formkit-form.mills[min-width~=\\\"600\\\"] .formkit-fields[data-stacked=\\\"false\\\"] {\\n  margin-left: -5px;\\n  margin-right: -5px;\\n}\\n\\n.formkit-form.mills[min-width~=\\\"600\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-field,\\n.formkit-form.mills[min-width~=\\\"600\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-submit {\\n  margin: 0 5px 15px 5px;\\n}\\n\\n.formkit-form.mills[min-width~=\\\"600\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-field {\\n  -webkit-flex: 100 1 auto;\\n  -ms-flex: 100 1 auto;\\n  flex: 100 1 auto;\\n}\\n\\n.formkit-form.mills[min-width~=\\\"600\\\"] .formkit-fields[data-stacked=\\\"false\\\"] .formkit-submit {\\n  -webkit-flex: 1 1 auto;\\n  -ms-flex: 1 1 auto;\\n  flex: 1 1 auto;\\n}\\n\";\ninjector_bf1ba7e0(css_7c18d6d6,{\"singleTag\":true});\n\nvar ALLOWED_FORMATS$1 = ['inline', 'modal', 'slide in'];\n\nfunction Mills(_ref) {\n  var options = _ref.options,\n      className = _ref.className,\n      action = _ref.action,\n      submitText = _ref.submitText,\n      emailPlaceholder = _ref.emailPlaceholder,\n      namePlaceholder = _ref.namePlaceholder,\n      hideName = _ref.hideName,\n      showLabels = _ref.showLabels,\n      nameLabel = _ref.nameLabel,\n      emailLabel = _ref.emailLabel,\n      newTab = _ref.newTab,\n      formId = _ref.formId,\n      format = _ref.format,\n      stacked = _ref.stacked,\n      hideWarnings = _ref.hideWarnings;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, !hideWarnings && !ALLOWED_FORMATS$1.includes(format) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Warning, {\n    message: \"This template is not available for the chosen format\"\n  }) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"form\", {\n    action: action,\n    className: \"seva-form formkit-form mills \".concat(className),\n    method: \"post\",\n    target: newTab ? '_blank' : '_self',\n    \"data-sv-form\": formId,\n    \"data-uid\": options.uid,\n    \"data-format\": format,\n    \"data-version\": options.version,\n    \"data-options\": JSON.stringify(options),\n    \"min-width\": \"400 500 600 700 800\",\n    style: {\n      backgroundColor: 'rgb(249, 250, 251)',\n      borderRadius: '4px'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-background\",\n    style: {\n      opacity: 0.2\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-style\": \"minimal\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-header\",\n    \"data-element\": \"header\",\n    style: {\n      color: 'rgb(77, 77, 77)',\n      fontSize: '27px',\n      fontWeight: 700,\n      textAlign: 'center'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h1\", null, \"Join the Newsletter\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-subheader\",\n    \"data-element\": \"subheader\",\n    style: {\n      color: 'rgb(104, 104, 104)',\n      fontsize: '18px'\n    }\n  }, \"Subscribe to get our latest content by email.\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"ul\", {\n    className: \"formkit-alert formkit-alert-error\",\n    \"data-element\": \"errors\",\n    \"data-group\": \"alert\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"fields\",\n    \"data-stacked\": stacked,\n    className: \"seva-fields formkit-fields\"\n  }, !hideName && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-first-name\"\n  }, nameLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": nameLabel,\n    name: \"fields[first_name]\",\n    placeholder: namePlaceholder,\n    type: \"text\",\n    style: {\n      color: 'rgb(0, 0, 0)',\n      borderColor: 'rgb(227, 227, 227)',\n      borderRadius: '4px',\n      fontWeight: 400\n    },\n    id: \"ck-first-name\"\n  }))), showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-email\"\n  }, emailLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": emailLabel,\n    name: \"email_address\",\n    placeholder: emailPlaceholder,\n    required: \"\",\n    type: \"email\",\n    style: {\n      color: 'rgb(0, 0, 0)',\n      borderColor: 'rgb(227, 227, 227)',\n      borderRadius: '4px',\n      fontWeight: 400\n    },\n    id: \"ck-email\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    \"data-element\": \"submit\",\n    className: \"formkit-submit formkit-submit\",\n    style: {\n      color: 'rgb(255, 255, 255)',\n      backgroundColor: 'rgb(22, 119, 190)',\n      borderRadius: '4px',\n      fontWeight: 400\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-spinner\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, submitText))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-guarantee\",\n    \"data-element\": \"guarantee\",\n    style: {\n      color: 'rgb(77, 77, 77)',\n      fontSize: '13px',\n      fontWeight: 400\n    }\n  }, \"We won't send you spam. Unsubscribe at any time.\"), options.settings.powered_by.show ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", {\n    href: options.settings.powered_by.url,\n    className: \"formkit-powered-by\",\n    \"data-element\": \"powered-by\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"Powered By ConvertKit\") : null)));\n}\n\nconst css_a6c1ef06 = \".formkit-form.rainier * {\\n  box-sizing: border-box;\\n}\\n\\n.formkit-form.rainier {\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  color: #000;\\n}\\n\\n.formkit-form.rainier legend {\\n  border: none;\\n  font-size: inherit;\\n  margin-bottom: 10px;\\n  padding: 0;\\n  position: relative;\\n  display: table;\\n}\\n\\n.formkit-form.rainier fieldset {\\n  border: 0;\\n  padding: 0.01em 0 0 0;\\n  margin: 0;\\n  min-width: 0;\\n}\\n\\n.formkit-form.rainier body:not(:-moz-handler-blocked) fieldset {\\n  display: table-cell;\\n}\\n\\n.formkit-form.rainier h1,\\n.formkit-form.rainier h2,\\n.formkit-form.rainier h3,\\n.formkit-form.rainier h4,\\n.formkit-form.rainier h5,\\n.formkit-form.rainier h6 {\\n  color: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.formkit-form.rainier p {\\n  color: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.formkit-form.rainier ol:not([template-default]),\\n.formkit-form.rainier ul:not([template-default]),\\n.formkit-form.rainier blockquote:not([template-default]) {\\n  text-align: left;\\n}\\n\\n.formkit-form.rainier p:not([template-default]),\\n.formkit-form.rainier hr:not([template-default]),\\n.formkit-form.rainier blockquote:not([template-default]),\\n.formkit-form.rainier ol:not([template-default]),\\n.formkit-form.rainier ul:not([template-default]) {\\n  color: inherit;\\n  font-style: initial;\\n}\\n\\n.formkit-form.rainier[data-format=\\\"modal\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.rainier[data-format=\\\"slide in\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.rainier[data-format=\\\"sticky bar\\\"] {\\n  display: none;\\n}\\n\\n.formkit-sticky-bar .formkit-form.rainier[data-format=\\\"sticky bar\\\"] {\\n  display: block;\\n}\\n\\n.formkit-form.rainier .formkit-input,\\n.formkit-form.rainier .formkit-select,\\n.formkit-form.rainier .formkit-checkboxes {\\n  width: 100%;\\n}\\n\\n.formkit-form.rainier .formkit-button,\\n.formkit-form.rainier .formkit-submit {\\n  border: 0;\\n  border-radius: 5px;\\n  color: #ffffff;\\n  cursor: pointer;\\n  display: inline-block;\\n  text-align: center;\\n  font-size: 15px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  margin-bottom: 15px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: relative;\\n  vertical-align: middle;\\n}\\n\\n.formkit-form.rainier .formkit-button:hover,\\n.formkit-form.rainier .formkit-submit:hover,\\n.formkit-form.rainier .formkit-button:focus,\\n.formkit-form.rainier .formkit-submit:focus {\\n  outline: none;\\n}\\n\\n.formkit-form.rainier .formkit-button:hover>span,\\n.formkit-form.rainier .formkit-submit:hover>span,\\n.formkit-form.rainier .formkit-button:focus>span,\\n.formkit-form.rainier .formkit-submit:focus>span {\\n  background-color: rgba(0, 0, 0, 0.1);\\n}\\n\\n.formkit-form.rainier .formkit-button>span,\\n.formkit-form.rainier .formkit-submit>span {\\n  display: block;\\n  -webkit-transition: all 300ms ease-in-out;\\n  transition: all 300ms ease-in-out;\\n  padding: 12px 24px;\\n}\\n\\n.formkit-form.rainier .formkit-input {\\n  background: #ffffff;\\n  font-size: 15px;\\n  padding: 12px;\\n  border: 1px solid #e3e3e3;\\n  -webkit-flex: 1 0 auto;\\n  -ms-flex: 1 0 auto;\\n  flex: 1 0 auto;\\n  line-height: 1.4;\\n  margin: 0;\\n  -webkit-transition: border-color ease-out 300ms;\\n  transition: border-color ease-out 300ms;\\n}\\n\\n.formkit-form.rainier .formkit-input:focus {\\n  outline: none;\\n  border-color: #1677be;\\n  -webkit-transition: border-color ease 300ms;\\n  transition: border-color ease 300ms;\\n}\\n\\n.formkit-form.rainier .formkit-input::-webkit-input-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.rainier .formkit-input::-moz-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.rainier .formkit-input:-ms-input-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.rainier .formkit-input::placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"dropdown\\\"] {\\n  position: relative;\\n  display: inline-block;\\n  width: 100%;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"dropdown\\\"]::before {\\n  content: \\\"\\\";\\n  top: calc(50% - 2.5px);\\n  right: 10px;\\n  position: absolute;\\n  pointer-events: none;\\n  border-color: #4f4f4f transparent transparent transparent;\\n  border-style: solid;\\n  border-width: 6px 6px 0 6px;\\n  height: 0;\\n  width: 0;\\n  z-index: 999;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"dropdown\\\"] select {\\n  height: auto;\\n  width: 100%;\\n  cursor: pointer;\\n  color: #333333;\\n  line-height: 1.4;\\n  margin-bottom: 0;\\n  padding: 0 6px;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n  font-size: 15px;\\n  padding: 12px;\\n  padding-right: 25px;\\n  border: 1px solid #e3e3e3;\\n  background: #ffffff;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"dropdown\\\"] select:focus {\\n  outline: none;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] {\\n  text-align: left;\\n  margin: 0;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] {\\n  margin-bottom: 10px;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] * {\\n  cursor: pointer;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"]:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]+label::after {\\n  content: none;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked+label::after {\\n  border-color: #ffffff;\\n  content: \\\"\\\";\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked+label::before {\\n  background: #10bf7a;\\n  border-color: #10bf7a;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label {\\n  position: relative;\\n  display: inline-block;\\n  padding-left: 28px;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::before,\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::after {\\n  position: absolute;\\n  content: \\\"\\\";\\n  display: inline-block;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::before {\\n  height: 16px;\\n  width: 16px;\\n  border: 1px solid #e3e3e3;\\n  background: #ffffff;\\n  left: 0px;\\n  top: 3px;\\n}\\n\\n.formkit-form.rainier [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::after {\\n  height: 4px;\\n  width: 8px;\\n  border-left: 2px solid #4d4d4d;\\n  border-bottom: 2px solid #4d4d4d;\\n  -webkit-transform: rotate(-45deg);\\n  -ms-transform: rotate(-45deg);\\n  transform: rotate(-45deg);\\n  left: 4px;\\n  top: 8px;\\n}\\n\\n.formkit-form.rainier .formkit-alert {\\n  background: #f9fafb;\\n  border: 1px solid #e3e3e3;\\n  border-radius: 5px;\\n  -webkit-flex: 1 0 auto;\\n  -ms-flex: 1 0 auto;\\n  flex: 1 0 auto;\\n  list-style: none;\\n  margin: 25px auto;\\n  padding: 12px;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.formkit-form.rainier .formkit-alert:empty {\\n  display: none;\\n}\\n\\n.formkit-form.rainier .formkit-alert-success {\\n  background: #d3fbeb;\\n  border-color: #10bf7a;\\n  color: #0c905c;\\n}\\n\\n.formkit-form.rainier .formkit-alert-error {\\n  background: #fde8e2;\\n  border-color: #f2643b;\\n  color: #ea4110;\\n}\\n\\n.formkit-form.rainier .formkit-spinner {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 0px;\\n  width: 0px;\\n  margin: 0 auto;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: 0px;\\n  overflow: hidden;\\n  text-align: center;\\n  -webkit-transition: all 300ms ease-in-out;\\n  transition: all 300ms ease-in-out;\\n}\\n\\n.formkit-form.rainier .formkit-spinner>div {\\n  margin: auto;\\n  width: 12px;\\n  height: 12px;\\n  background-color: #fff;\\n  opacity: 0.3;\\n  border-radius: 100%;\\n  display: inline-block;\\n  -webkit-animation: formkit-bouncedelay-formkit-form-data-uid-5c3a33ee02- 1.4s infinite ease-in-out both;\\n  animation: formkit-bouncedelay-formkit-form-data-uid-5c3a33ee02- 1.4s infinite ease-in-out both;\\n}\\n\\n.formkit-form.rainier .formkit-spinner>div:nth-child(1) {\\n  -webkit-animation-delay: -0.32s;\\n  animation-delay: -0.32s;\\n}\\n\\n.formkit-form.rainier .formkit-spinner>div:nth-child(2) {\\n  -webkit-animation-delay: -0.16s;\\n  animation-delay: -0.16s;\\n}\\n\\n.formkit-form.rainier .formkit-submit[data-active] .formkit-spinner {\\n  opacity: 1;\\n  height: 100%;\\n  width: 50px;\\n}\\n\\n.formkit-form.rainier .formkit-submit[data-active] .formkit-spinner~span {\\n  opacity: 0;\\n}\\n\\n.formkit-form.rainier .formkit-powered-by[data-active=\\\"false\\\"] {\\n  opacity: 0.35;\\n}\\n\\n.formkit-form.rainier .formkit-powered-by-convertkit-container {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  width: 100%;\\n  z-index: 5;\\n  margin: 10px 0;\\n  position: relative;\\n}\\n\\n.formkit-form.rainier .formkit-powered-by-convertkit-container[data-active=\\\"false\\\"] {\\n  opacity: 0.35;\\n}\\n\\n.formkit-form.rainier .formkit-powered-by-convertkit {\\n  -webkit-align-items: center;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n  background-color: #ffffff;\\n  border: 1px solid #dce1e5;\\n  border-radius: 4px;\\n  color: #373f45;\\n  cursor: pointer;\\n  display: block;\\n  height: 36px;\\n  margin: 0 auto;\\n  opacity: 0.95;\\n  -webkit-text-decoration: none;\\n  text-decoration: none;\\n  text-indent: 100%;\\n  -webkit-transition: ease-in-out all 200ms;\\n  transition: ease-in-out all 200ms;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  width: 190px;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg width='162' height='20' viewBox='0 0 162 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M83.0561 15.2457C86.675 15.2457 89.4722 12.5154 89.4722 9.14749C89.4722 5.99211 86.8443 4.06563 85.1038 4.06563C82.6801 4.06563 80.7373 5.76407 80.4605 8.28551C80.4092 8.75244 80.0387 9.14403 79.5686 9.14069C78.7871 9.13509 77.6507 9.12841 76.9314 9.13092C76.6217 9.13199 76.3658 8.88106 76.381 8.57196C76.4895 6.38513 77.2218 4.3404 78.618 2.76974C80.1695 1.02445 82.4289 0 85.1038 0C89.5979 0 93.8406 4.07791 93.8406 9.14749C93.8406 14.7608 89.1832 19.3113 83.1517 19.3113C78.8502 19.3113 74.5179 16.5041 73.0053 12.5795C72.9999 12.565 72.9986 12.5492 73.0015 12.534C73.0218 12.4179 73.0617 12.3118 73.1011 12.2074C73.1583 12.0555 73.2143 11.907 73.2062 11.7359L73.18 11.1892C73.174 11.0569 73.2075 10.9258 73.2764 10.8127C73.3452 10.6995 73.4463 10.6094 73.5666 10.554L73.7852 10.4523C73.9077 10.3957 74.0148 10.3105 74.0976 10.204C74.1803 10.0974 74.2363 9.97252 74.2608 9.83983C74.3341 9.43894 74.6865 9.14749 75.0979 9.14749C75.7404 9.14749 76.299 9.57412 76.5088 10.1806C77.5188 13.1 79.1245 15.2457 83.0561 15.2457Z' fill='%23373F45'/%3E%3Cpath d='M155.758 6.91365C155.028 6.91365 154.804 6.47916 154.804 5.98857C154.804 5.46997 154.986 5.06348 155.758 5.06348C156.53 5.06348 156.712 5.46997 156.712 5.98857C156.712 6.47905 156.516 6.91365 155.758 6.91365ZM142.441 12.9304V9.32833L141.415 9.32323V8.90392C141.415 8.44719 141.786 8.07758 142.244 8.07986L142.441 8.08095V6.55306L144.082 6.09057V8.08073H145.569V8.50416C145.569 8.61242 145.548 8.71961 145.506 8.81961C145.465 8.91961 145.404 9.01047 145.328 9.08699C145.251 9.16351 145.16 9.2242 145.06 9.26559C144.96 9.30698 144.853 9.32826 144.745 9.32822H144.082V12.7201C144.082 13.2423 144.378 13.4256 144.76 13.4887C145.209 13.5629 145.583 13.888 145.583 14.343V14.9626C144.029 14.9626 142.441 14.8942 142.441 12.9304Z' fill='%23373F45'/%3E%3Cpath d='M110.058 7.92554C108.417 7.88344 106.396 8.92062 106.396 11.5137C106.396 14.0646 108.417 15.0738 110.058 15.0318C111.742 15.0738 113.748 14.0646 113.748 11.5137C113.748 8.92062 111.742 7.88344 110.058 7.92554ZM110.07 13.7586C108.878 13.7586 108.032 12.8905 108.032 11.461C108.032 10.1013 108.878 9.20569 110.071 9.20569C111.263 9.20569 112.101 10.0995 112.101 11.459C112.101 12.8887 111.263 13.7586 110.07 13.7586Z' fill='%23373F45'/%3E%3Cpath d='M118.06 7.94098C119.491 7.94098 120.978 8.33337 120.978 11.1366V14.893H120.063C119.608 14.893 119.238 14.524 119.238 14.0689V10.9965C119.238 9.66506 118.747 9.16047 117.891 9.16047C117.414 9.16047 116.797 9.52486 116.502 9.81915V14.069C116.502 14.1773 116.481 14.2845 116.44 14.3845C116.398 14.4845 116.337 14.5753 116.261 14.6519C116.184 14.7284 116.093 14.7891 115.993 14.8305C115.893 14.8719 115.786 14.8931 115.678 14.8931H114.847V8.10918H115.773C115.932 8.10914 116.087 8.16315 116.212 8.26242C116.337 8.36168 116.424 8.50033 116.46 8.65577C116.881 8.19328 117.428 7.94098 118.06 7.94098ZM122.854 8.09713C123.024 8.09708 123.19 8.1496 123.329 8.2475C123.468 8.34541 123.574 8.48391 123.631 8.64405L125.133 12.8486L126.635 8.64415C126.692 8.48402 126.798 8.34551 126.937 8.2476C127.076 8.1497 127.242 8.09718 127.412 8.09724H128.598L126.152 14.3567C126.091 14.5112 125.986 14.6439 125.849 14.7374C125.711 14.831 125.549 14.881 125.383 14.8809H124.333L121.668 8.09713H122.854Z' fill='%23373F45'/%3E%3Cpath d='M135.085 14.5514C134.566 14.7616 133.513 15.0416 132.418 15.0416C130.496 15.0416 129.024 13.9345 129.024 11.4396C129.024 9.19701 130.451 7.99792 132.191 7.99792C134.338 7.99792 135.254 9.4378 135.158 11.3979C135.139 11.8029 134.786 12.0983 134.38 12.0983H130.679C130.763 13.1916 131.562 13.7662 132.615 13.7662C133.028 13.7662 133.462 13.7452 133.983 13.6481C134.535 13.545 135.085 13.9375 135.085 14.4985V14.5514ZM133.673 10.949C133.785 9.87621 133.061 9.28752 132.191 9.28752C131.321 9.28752 130.734 9.93979 130.679 10.9489L133.673 10.949Z' fill='%23373F45'/%3E%3Cpath d='M137.345 8.11122C137.497 8.11118 137.645 8.16229 137.765 8.25635C137.884 8.35041 137.969 8.48197 138.005 8.62993C138.566 8.20932 139.268 7.94303 139.759 7.94303C139.801 7.94303 140.068 7.94303 140.489 7.99913V8.7265C140.489 9.11748 140.15 9.4147 139.759 9.4147C139.31 9.4147 138.651 9.5829 138.131 9.8773V14.8951H136.462V8.11112L137.345 8.11122ZM156.6 14.0508V8.09104H155.769C155.314 8.09104 154.944 8.45999 154.944 8.9151V14.8748H155.775C156.23 14.8748 156.6 14.5058 156.6 14.0508ZM158.857 12.9447V9.34254H157.749V8.91912C157.749 8.46401 158.118 8.09506 158.574 8.09506H158.857V6.56739L160.499 6.10479V8.09506H161.986V8.51848C161.986 8.97359 161.617 9.34254 161.161 9.34254H160.499V12.7345C160.499 13.2566 160.795 13.44 161.177 13.503C161.626 13.5774 162 13.9024 162 14.3574V14.977C160.446 14.977 158.857 14.9086 158.857 12.9447ZM98.1929 10.1124C98.2033 6.94046 100.598 5.16809 102.895 5.16809C104.171 5.16809 105.342 5.44285 106.304 6.12953L105.914 6.6631C105.654 7.02011 105.16 7.16194 104.749 6.99949C104.169 6.7702 103.622 6.7218 103.215 6.7218C101.335 6.7218 99.9169 7.92849 99.9068 10.1123C99.9169 12.2959 101.335 13.5201 103.215 13.5201C103.622 13.5201 104.169 13.4717 104.749 13.2424C105.16 13.0799 105.654 13.2046 105.914 13.5615L106.304 14.0952C105.342 14.7819 104.171 15.0566 102.895 15.0566C100.598 15.0566 98.2033 13.2842 98.1929 10.1124ZM147.619 5.21768C148.074 5.21768 148.444 5.58663 148.444 6.04174V9.81968L151.82 5.58131C151.897 5.47733 151.997 5.39282 152.112 5.3346C152.227 5.27638 152.355 5.24607 152.484 5.24611H153.984L150.166 10.0615L153.984 14.8749H152.484C152.355 14.8749 152.227 14.8446 152.112 14.7864C151.997 14.7281 151.897 14.6436 151.82 14.5397L148.444 10.3025V14.0508C148.444 14.5059 148.074 14.8749 147.619 14.8749H146.746V5.21768H147.619Z' fill='%23373F45'/%3E%3Cpath d='M0.773438 6.5752H2.68066C3.56543 6.5752 4.2041 6.7041 4.59668 6.96191C4.99219 7.21973 5.18994 7.62695 5.18994 8.18359C5.18994 8.55859 5.09326 8.87061 4.8999 9.11963C4.70654 9.36865 4.42822 9.52539 4.06494 9.58984V9.63379C4.51611 9.71875 4.84717 9.88721 5.05811 10.1392C5.27197 10.3882 5.37891 10.7266 5.37891 11.1543C5.37891 11.7314 5.17676 12.1841 4.77246 12.5122C4.37109 12.8374 3.81152 13 3.09375 13H0.773438V6.5752ZM1.82373 9.22949H2.83447C3.27393 9.22949 3.59473 9.16064 3.79688 9.02295C3.99902 8.88232 4.1001 8.64502 4.1001 8.31104C4.1001 8.00928 3.99023 7.79102 3.77051 7.65625C3.55371 7.52148 3.20801 7.4541 2.7334 7.4541H1.82373V9.22949ZM1.82373 10.082V12.1167H2.93994C3.37939 12.1167 3.71045 12.0332 3.93311 11.8662C4.15869 11.6963 4.27148 11.4297 4.27148 11.0664C4.27148 10.7324 4.15723 10.4849 3.92871 10.3237C3.7002 10.1626 3.35303 10.082 2.88721 10.082H1.82373Z' fill='%23373F45'/%3E%3Cpath d='M13.011 6.5752V10.7324C13.011 11.207 12.9084 11.623 12.7034 11.9805C12.5012 12.335 12.2068 12.6089 11.8201 12.8022C11.4363 12.9927 10.9763 13.0879 10.4402 13.0879C9.6433 13.0879 9.02368 12.877 8.5813 12.4551C8.13892 12.0332 7.91772 11.4531 7.91772 10.7148V6.5752H8.9724V10.6401C8.9724 11.1704 9.09546 11.5615 9.34155 11.8135C9.58765 12.0654 9.96557 12.1914 10.4753 12.1914C11.4656 12.1914 11.9607 11.6714 11.9607 10.6313V6.5752H13.011Z' fill='%23373F45'/%3E%3Cpath d='M15.9146 13V6.5752H16.9649V13H15.9146Z' fill='%23373F45'/%3E%3Cpath d='M19.9255 13V6.5752H20.9758V12.0991H23.696V13H19.9255Z' fill='%23373F45'/%3E%3Cpath d='M28.2828 13H27.2325V7.47607H25.3428V6.5752H30.1724V7.47607H28.2828V13Z' fill='%23373F45'/%3E%3Cpath d='M41.9472 13H40.8046L39.7148 9.16796C39.6679 9.00097 39.6093 8.76074 39.539 8.44727C39.4687 8.13086 39.4262 7.91113 39.4116 7.78809C39.3823 7.97559 39.3339 8.21875 39.2665 8.51758C39.2021 8.81641 39.1479 9.03905 39.1039 9.18554L38.0405 13H36.8979L36.0673 9.7832L35.2236 6.5752H36.2958L37.2143 10.3193C37.3578 10.9199 37.4604 11.4502 37.5219 11.9102C37.5541 11.6611 37.6025 11.3828 37.6669 11.0752C37.7314 10.7676 37.79 10.5186 37.8427 10.3281L38.8886 6.5752H39.9301L41.0024 10.3457C41.1049 10.6943 41.2133 11.2158 41.3276 11.9102C41.3715 11.4912 41.477 10.958 41.644 10.3105L42.558 6.5752H43.6215L41.9472 13Z' fill='%23373F45'/%3E%3Cpath d='M45.7957 13V6.5752H46.846V13H45.7957Z' fill='%23373F45'/%3E%3Cpath d='M52.0258 13H50.9755V7.47607H49.0859V6.5752H53.9155V7.47607H52.0258V13Z' fill='%23373F45'/%3E%3Cpath d='M61.2312 13H60.1765V10.104H57.2146V13H56.1643V6.5752H57.2146V9.20312H60.1765V6.5752H61.2312V13Z' fill='%23373F45'/%3E%3C/svg%3E\\\");\\n}\\n\\n.formkit-form.rainier .formkit-powered-by-convertkit:hover,\\n.formkit-form.rainier .formkit-powered-by-convertkit:focus {\\n  -webkit-transform: scale(1.025) perspective(1px);\\n  -ms-transform: scale(1.025) perspective(1px);\\n  transform: scale(1.025) perspective(1px);\\n  opacity: 1;\\n}\\n\\n@-webkit-keyframes formkit-bouncedelay-formkit-form-data-uid-5c3a33ee02- {\\n\\n  0%,\\n  80%,\\n  100% {\\n    -webkit-transform: scale(0);\\n    -ms-transform: scale(0);\\n    transform: scale(0);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@keyframes formkit-bouncedelay-formkit-form-data-uid-5c3a33ee02- {\\n\\n  0%,\\n  80%,\\n  100% {\\n    -webkit-transform: scale(0);\\n    -ms-transform: scale(0);\\n    transform: scale(0);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n.formkit-form.rainier blockquote {\\n  padding: 10px 20px;\\n  margin: 0 0 20px;\\n  border-left: 5px solid #e1e1e1;\\n}\\n\\n.formkit-form.rainier {\\n  box-shadow: 0 0px 2px rgba(0, 0, 0, 0.15);\\n  max-width: 700px;\\n  overflow: hidden;\\n}\\n\\n.forms-preview__form .formkit-hero-bg-color,\\n.forms-preview__form .formkit-hero-bg-img,\\n.forms-preview__form .formkit-header,\\n.forms-preview__form .formkit-content {\\n  z-index: unset !important;\\n}\\n\\n.formkit-form.rainier [data-style=\\\"full\\\"] {\\n  width: 100%;\\n  display: block;\\n}\\n\\n.formkit-form.rainier .formkit-container {\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\\n  padding: 20px;\\n}\\n\\n.formkit-form.rainier .formkit-hero {\\n  margin-bottom: 20px;\\n  padding: 30px 5%;\\n  position: relative;\\n  text-align: center;\\n}\\n\\n.formkit-form.rainier .formkit-hero-bg-color,\\n.formkit-form.rainier .formkit-hero-bg-img {\\n  height: 100%;\\n  left: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 1000;\\n}\\n\\n.formkit-form.rainier .formkit-hero-bg-img {\\n  background-position: center center;\\n  background-size: cover;\\n}\\n\\n.formkit-form.rainier .formkit-header,\\n.formkit-form.rainier .formkit-content {\\n  position: relative;\\n  z-index: 1001;\\n}\\n\\n.formkit-form.rainier .formkit-header {\\n  margin-bottom: 20px;\\n}\\n\\n.formkit-form.rainier .formkit-fields[data-stacked=\\\"false\\\"] {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-flex-wrap: wrap;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n  margin: 0 auto;\\n}\\n\\n.formkit-form.rainier .formkit-fields input,\\n.formkit-form.rainier .formkit-fields select {\\n  -webkit-appearance: none;\\n}\\n\\n.formkit-form.rainier .formkit-field,\\n.formkit-form.rainier .formkit-submit {\\n  -webkit-flex: 1 0 100%;\\n  -ms-flex: 1 0 100%;\\n  flex: 1 0 100%;\\n  margin: 0 0 15px 0;\\n}\\n\\n.formkit-form.rainier .formkit-fields[data-stacked=\\\"false\\\"] .formkit-field,\\n.formkit-form.rainier .formkit-fields[data-stacked=\\\"false\\\"] .formkit-submit {\\n  margin: 0 0 0 !important;\\n}\\n\\n.formkit-form.rainier .formkit-fields[data-stacked=\\\"false\\\"] .formkit-field {\\n  -webkit-flex: 100 1 auto;\\n  -ms-flex: 100 1 auto;\\n  flex: 100 1 auto;\\n  margin-bottom: 0;\\n}\\n\\n.formkit-form.rainier .formkit-fields[data-stacked=\\\"false\\\"] .formkit-field input {\\n  border-right: none;\\n  border-top-right-radius: 0 !important;\\n  border-bottom-right-radius: 0 !important;\\n}\\n\\n.formkit-form.rainier .formkit-fields[data-stacked=\\\"false\\\"] .formkit-submit {\\n  -webkit-flex: 1 1 auto;\\n  -ms-flex: 1 1 auto;\\n  flex: 1 1 auto;\\n  border-top-left-radius: 0 !important;\\n  border-bottom-left-radius: 0 !important;\\n}\\n\\n.formkit-form.rainier .formkit-submit {\\n  line-height: 1.4;\\n}\\n\\n.formkit-form.rainier .formkit-submit>span {\\n  padding: 13px 24px;\\n}\\n\\n.formkit-form.rainier .formkit-powered-by {\\n  color: #7d7d7d;\\n  display: block;\\n  font-size: 12px;\\n  margin: 15px 0 0;\\n  text-align: center;\\n}\\n\\n.formkit-form.rainier[min-width~=\\\"700\\\"] [data-style=\\\"clean\\\"],\\n.formkit-form.rainier[min-width~=\\\"800\\\"] [data-style=\\\"clean\\\"] {\\n  padding: 10px;\\n}\\n\\n.formkit-form.rainier[min-width~=\\\"700\\\"] .formkit-hero,\\n.formkit-form.rainier[min-width~=\\\"800\\\"] .formkit-hero {\\n  padding: 80px 10%;\\n}\\n\";\ninjector_bf1ba7e0(css_a6c1ef06,{\"singleTag\":true});\n\nvar ALLOWED_FORMATS$2 = ['inline', 'modal', 'slide in'];\nvar bgImage = '//pages.convertkit.com/assets/rainier/bg.jpg';\n\nfunction Rainier(_ref) {\n  var options = _ref.options,\n      className = _ref.className,\n      action = _ref.action,\n      submitText = _ref.submitText,\n      emailPlaceholder = _ref.emailPlaceholder,\n      namePlaceholder = _ref.namePlaceholder,\n      hideName = _ref.hideName,\n      showLabels = _ref.showLabels,\n      nameLabel = _ref.nameLabel,\n      emailLabel = _ref.emailLabel,\n      newTab = _ref.newTab,\n      formId = _ref.formId,\n      format = _ref.format,\n      stacked = _ref.stacked,\n      hideWarnings = _ref.hideWarnings;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, !hideWarnings && !ALLOWED_FORMATS$2.includes(format) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Warning, {\n    message: \"This template is not available for the chosen format\"\n  }) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"form\", {\n    action: action,\n    className: \"seva-form formkit-form rainier \".concat(className),\n    method: \"post\",\n    target: newTab ? '_blank' : '_self',\n    \"data-sv-form\": formId,\n    \"data-uid\": options.uid,\n    \"data-format\": format,\n    \"data-version\": options.version,\n    \"data-options\": JSON.stringify(options),\n    \"min-width\": \"400 500 600 700 800\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-container\",\n    \"data-style\": \"full\",\n    style: {\n      backgroundColor: 'rgb(255, 255, 255)'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-hero\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-hero-bg-color\",\n    style: {\n      background: \"linear-gradient(rgba(16, 16, 16, .8), rgba(16, 16, 16, .8)), url(\".concat(bgImage, \")\"),\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-header\",\n    \"data-element\": \"header\",\n    style: {\n      fontSize: '27px',\n      fontWeight: 700,\n      marginBottom: '20px',\n      color: 'rgb(255,255,255)'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h1\", null, \"Join the Newsletter\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", null, \"\\u200B\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-content\",\n    \"data-element\": \"content\",\n    style: {\n      color: 'rgb(255, 255, 255)',\n      fontSize: '18px',\n      fontWeight: 400\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", null, \"Receive tips and tricks on how to travel the world\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"ul\", {\n    className: \"formkit-alert formkit-alert-error\",\n    \"data-element\": \"errors\",\n    \"data-group\": \"alert\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"fields\",\n    \"data-stacked\": stacked,\n    className: \"seva-fields formkit-fields\"\n  }, !hideName && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-first-form\"\n  }, nameLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": nameLabel,\n    name: \"fields[first_name]\",\n    placeholder: namePlaceholder,\n    type: \"text\",\n    style: {\n      color: 'rgb(146, 146, 146)',\n      borderColor: 'rgb(228, 231, 234)',\n      borderRadius: 0,\n      fontWeight: 400\n    },\n    id: \"ck-first-name\"\n  }))), showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-email\"\n  }, emailLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": emailLabel,\n    name: \"email_address\",\n    placeholder: emailPlaceholder,\n    required: true,\n    type: \"email\",\n    style: {\n      color: 'rgb(146, 146, 146)',\n      borderColor: 'rgb(228, 231, 234)',\n      borderRadius: 0,\n      fontWeight: 400\n    },\n    id: \"ck-email\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    \"data-element\": \"submit\",\n    className: \"formkit-submit formkit-submit\",\n    style: {\n      color: 'rgb(255, 255, 255)',\n      backgroundColor: 'rgb(199, 92, 86)',\n      borderRadius: 0,\n      fontWeight: 700\n    },\n    type: \"submit\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-spinner\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, submitText))), options.settings.powered_by.show ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", {\n    href: options.settings.powered_by.url,\n    className: \"formkit-powered-by\",\n    \"data-element\": \"powered-by\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"Powered By ConvertKit\") : null))));\n}\n\nconst css_39407bb2 = \".formkit-form.powell * {\\n  box-sizing: border-box;\\n}\\n\\n.formkit-form.powell {\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.formkit-form.powell legend {\\n  border: none;\\n  font-size: inherit;\\n  margin-bottom: 10px;\\n  padding: 0;\\n  position: relative;\\n  display: table;\\n}\\n\\n.formkit-form.powell fieldset {\\n  border: 0;\\n  padding: 0.01em 0 0 0;\\n  margin: 0;\\n  min-width: 0;\\n}\\n\\n.formkit-form.powell body:not(:-moz-handler-blocked) fieldset {\\n  display: table-cell;\\n}\\n\\n.formkit-form.powell h1,\\n.formkit-form.powell h2,\\n.formkit-form.powell h3,\\n.formkit-form.powell h4,\\n.formkit-form.powell h5,\\n.formkit-form.powell h6 {\\n  color: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.formkit-form.powell p {\\n  color: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.formkit-form.powell ol:not([template-default]),\\n.formkit-form.powell ul:not([template-default]),\\n.formkit-form.powell blockquote:not([template-default]) {\\n  text-align: left;\\n}\\n\\n.formkit-form.powell p:not([template-default]),\\n.formkit-form.powell hr:not([template-default]),\\n.formkit-form.powell blockquote:not([template-default]),\\n.formkit-form.powell ol:not([template-default]),\\n.formkit-form.powell ul:not([template-default]) {\\n  color: inherit;\\n  font-style: initial;\\n}\\n\\n.formkit-form.powell[data-format=\\\"modal\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.powell[data-format=\\\"slide in\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.powell[data-format=\\\"sticky bar\\\"] {\\n  display: none;\\n}\\n\\n.formkit-sticky-bar .formkit-form.powell[data-format=\\\"sticky bar\\\"] {\\n  display: block;\\n}\\n\\n.formkit-form.powell .formkit-input,\\n.formkit-form.powell .formkit-select,\\n.formkit-form.powell .formkit-checkboxes {\\n  width: 100%;\\n}\\n\\n.formkit-form.powell .formkit-button,\\n.formkit-form.powell .formkit-submit {\\n  border: 0;\\n  border-radius: 5px;\\n  color: #ffffff;\\n  cursor: pointer;\\n  display: inline-block;\\n  text-align: center;\\n  font-size: 15px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  margin-bottom: 15px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: relative;\\n  vertical-align: middle;\\n}\\n\\n.formkit-form.powell .formkit-button:hover,\\n.formkit-form.powell .formkit-submit:hover,\\n.formkit-form.powell .formkit-button:focus,\\n.formkit-form.powell .formkit-submit:focus {\\n  outline: none;\\n}\\n\\n.formkit-form.powell .formkit-button:hover>span,\\n.formkit-form.powell .formkit-submit:hover>span,\\n.formkit-form.powell .formkit-button:focus>span,\\n.formkit-form.powell .formkit-submit:focus>span {\\n  background-color: rgba(0, 0, 0, 0.1);\\n}\\n\\n.formkit-form.powell .formkit-button>span,\\n.formkit-form.powell .formkit-submit>span {\\n  display: block;\\n  -webkit-transition: all 300ms ease-in-out;\\n  transition: all 300ms ease-in-out;\\n  padding: 12px 24px;\\n}\\n\\n.formkit-form.powell .formkit-input {\\n  background: #ffffff;\\n  font-size: 15px;\\n  padding: 12px;\\n  border: 1px solid #e3e3e3;\\n  -webkit-flex: 1 0 auto;\\n  -ms-flex: 1 0 auto;\\n  flex: 1 0 auto;\\n  line-height: 1.4;\\n  margin: 0;\\n  -webkit-transition: border-color ease-out 300ms;\\n  transition: border-color ease-out 300ms;\\n}\\n\\n.formkit-form.powell .formkit-input:focus {\\n  outline: none;\\n  border-color: #1677be;\\n  -webkit-transition: border-color ease 300ms;\\n  transition: border-color ease 300ms;\\n}\\n\\n.formkit-form.powell .formkit-input::-webkit-input-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.powell .formkit-input::-moz-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.powell .formkit-input:-ms-input-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.powell .formkit-input::placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.powell [data-group=\\\"dropdown\\\"] {\\n  position: relative;\\n  display: inline-block;\\n  width: 100%;\\n}\\n\\n.formkit-form.powell [data-group=\\\"dropdown\\\"]::before {\\n  content: \\\"\\\";\\n  top: calc(50% - 2.5px);\\n  right: 10px;\\n  position: absolute;\\n  pointer-events: none;\\n  border-color: #4f4f4f transparent transparent transparent;\\n  border-style: solid;\\n  border-width: 6px 6px 0 6px;\\n  height: 0;\\n  width: 0;\\n  z-index: 999;\\n}\\n\\n.formkit-form.powell [data-group=\\\"dropdown\\\"] select {\\n  height: auto;\\n  width: 100%;\\n  cursor: pointer;\\n  color: #333333;\\n  line-height: 1.4;\\n  margin-bottom: 0;\\n  padding: 0 6px;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n  font-size: 15px;\\n  padding: 12px;\\n  padding-right: 25px;\\n  border: 1px solid #e3e3e3;\\n  background: #ffffff;\\n}\\n\\n.formkit-form.powell [data-group=\\\"dropdown\\\"] select:focus {\\n  outline: none;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] {\\n  text-align: left;\\n  margin: 0;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] {\\n  margin-bottom: 10px;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] * {\\n  cursor: pointer;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"]:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]+label::after {\\n  content: none;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked+label::after {\\n  border-color: #ffffff;\\n  content: \\\"\\\";\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked+label::before {\\n  background: #10bf7a;\\n  border-color: #10bf7a;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label {\\n  position: relative;\\n  display: inline-block;\\n  padding-left: 28px;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::before,\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::after {\\n  position: absolute;\\n  content: \\\"\\\";\\n  display: inline-block;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::before {\\n  height: 16px;\\n  width: 16px;\\n  border: 1px solid #e3e3e3;\\n  background: #ffffff;\\n  left: 0px;\\n  top: 3px;\\n}\\n\\n.formkit-form.powell [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::after {\\n  height: 4px;\\n  width: 8px;\\n  border-left: 2px solid #4d4d4d;\\n  border-bottom: 2px solid #4d4d4d;\\n  -webkit-transform: rotate(-45deg);\\n  -ms-transform: rotate(-45deg);\\n  transform: rotate(-45deg);\\n  left: 4px;\\n  top: 8px;\\n}\\n\\n.formkit-form.powell .formkit-alert {\\n  background: #f9fafb;\\n  border: 1px solid #e3e3e3;\\n  border-radius: 5px;\\n  -webkit-flex: 1 0 auto;\\n  -ms-flex: 1 0 auto;\\n  flex: 1 0 auto;\\n  list-style: none;\\n  margin: 25px auto;\\n  padding: 12px;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.formkit-form.powell .formkit-alert:empty {\\n  display: none;\\n}\\n\\n.formkit-form.powell .formkit-alert-success {\\n  background: #d3fbeb;\\n  border-color: #10bf7a;\\n  color: #0c905c;\\n}\\n\\n.formkit-form.powell .formkit-alert-error {\\n  background: #fde8e2;\\n  border-color: #f2643b;\\n  color: #ea4110;\\n}\\n\\n.formkit-form.powell .formkit-spinner {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 0px;\\n  width: 0px;\\n  margin: 0 auto;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: 0px;\\n  overflow: hidden;\\n  text-align: center;\\n  -webkit-transition: all 300ms ease-in-out;\\n  transition: all 300ms ease-in-out;\\n}\\n\\n.formkit-form.powell .formkit-spinner>div {\\n  margin: auto;\\n  width: 12px;\\n  height: 12px;\\n  background-color: #fff;\\n  opacity: 0.3;\\n  border-radius: 100%;\\n  display: inline-block;\\n  -webkit-animation: formkit-bouncedelay-formkit-form-data-uid-4e9ad49dba- 1.4s infinite ease-in-out both;\\n  animation: formkit-bouncedelay-formkit-form-data-uid-4e9ad49dba- 1.4s infinite ease-in-out both;\\n}\\n\\n.formkit-form.powell .formkit-spinner>div:nth-child(1) {\\n  -webkit-animation-delay: -0.32s;\\n  animation-delay: -0.32s;\\n}\\n\\n.formkit-form.powell .formkit-spinner>div:nth-child(2) {\\n  -webkit-animation-delay: -0.16s;\\n  animation-delay: -0.16s;\\n}\\n\\n.formkit-form.powell .formkit-submit[data-active] .formkit-spinner {\\n  opacity: 1;\\n  height: 100%;\\n  width: 50px;\\n}\\n\\n.formkit-form.powell .formkit-submit[data-active] .formkit-spinner~span {\\n  opacity: 0;\\n}\\n\\n.formkit-form.powell .formkit-powered-by[data-active=\\\"false\\\"] {\\n  opacity: 0.35;\\n}\\n\\n.formkit-form.powell .formkit-powered-by-convertkit-container {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  width: 100%;\\n  z-index: 5;\\n  margin: 10px 0;\\n  position: relative;\\n}\\n\\n.formkit-form.powell .formkit-powered-by-convertkit-container[data-active=\\\"false\\\"] {\\n  opacity: 0.35;\\n}\\n\\n.formkit-form.powell .formkit-powered-by-convertkit {\\n  -webkit-align-items: center;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n  background-color: #ffffff;\\n  border: 1px solid #dce1e5;\\n  border-radius: 4px;\\n  color: #373f45;\\n  cursor: pointer;\\n  display: block;\\n  height: 36px;\\n  margin: 0 auto;\\n  opacity: 0.95;\\n  -webkit-text-decoration: none;\\n  text-decoration: none;\\n  text-indent: 100%;\\n  -webkit-transition: ease-in-out all 200ms;\\n  transition: ease-in-out all 200ms;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  width: 190px;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg width='162' height='20' viewBox='0 0 162 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M83.0561 15.2457C86.675 15.2457 89.4722 12.5154 89.4722 9.14749C89.4722 5.99211 86.8443 4.06563 85.1038 4.06563C82.6801 4.06563 80.7373 5.76407 80.4605 8.28551C80.4092 8.75244 80.0387 9.14403 79.5686 9.14069C78.7871 9.13509 77.6507 9.12841 76.9314 9.13092C76.6217 9.13199 76.3658 8.88106 76.381 8.57196C76.4895 6.38513 77.2218 4.3404 78.618 2.76974C80.1695 1.02445 82.4289 0 85.1038 0C89.5979 0 93.8406 4.07791 93.8406 9.14749C93.8406 14.7608 89.1832 19.3113 83.1517 19.3113C78.8502 19.3113 74.5179 16.5041 73.0053 12.5795C72.9999 12.565 72.9986 12.5492 73.0015 12.534C73.0218 12.4179 73.0617 12.3118 73.1011 12.2074C73.1583 12.0555 73.2143 11.907 73.2062 11.7359L73.18 11.1892C73.174 11.0569 73.2075 10.9258 73.2764 10.8127C73.3452 10.6995 73.4463 10.6094 73.5666 10.554L73.7852 10.4523C73.9077 10.3957 74.0148 10.3105 74.0976 10.204C74.1803 10.0974 74.2363 9.97252 74.2608 9.83983C74.3341 9.43894 74.6865 9.14749 75.0979 9.14749C75.7404 9.14749 76.299 9.57412 76.5088 10.1806C77.5188 13.1 79.1245 15.2457 83.0561 15.2457Z' fill='%23373F45'/%3E%3Cpath d='M155.758 6.91365C155.028 6.91365 154.804 6.47916 154.804 5.98857C154.804 5.46997 154.986 5.06348 155.758 5.06348C156.53 5.06348 156.712 5.46997 156.712 5.98857C156.712 6.47905 156.516 6.91365 155.758 6.91365ZM142.441 12.9304V9.32833L141.415 9.32323V8.90392C141.415 8.44719 141.786 8.07758 142.244 8.07986L142.441 8.08095V6.55306L144.082 6.09057V8.08073H145.569V8.50416C145.569 8.61242 145.548 8.71961 145.506 8.81961C145.465 8.91961 145.404 9.01047 145.328 9.08699C145.251 9.16351 145.16 9.2242 145.06 9.26559C144.96 9.30698 144.853 9.32826 144.745 9.32822H144.082V12.7201C144.082 13.2423 144.378 13.4256 144.76 13.4887C145.209 13.5629 145.583 13.888 145.583 14.343V14.9626C144.029 14.9626 142.441 14.8942 142.441 12.9304Z' fill='%23373F45'/%3E%3Cpath d='M110.058 7.92554C108.417 7.88344 106.396 8.92062 106.396 11.5137C106.396 14.0646 108.417 15.0738 110.058 15.0318C111.742 15.0738 113.748 14.0646 113.748 11.5137C113.748 8.92062 111.742 7.88344 110.058 7.92554ZM110.07 13.7586C108.878 13.7586 108.032 12.8905 108.032 11.461C108.032 10.1013 108.878 9.20569 110.071 9.20569C111.263 9.20569 112.101 10.0995 112.101 11.459C112.101 12.8887 111.263 13.7586 110.07 13.7586Z' fill='%23373F45'/%3E%3Cpath d='M118.06 7.94098C119.491 7.94098 120.978 8.33337 120.978 11.1366V14.893H120.063C119.608 14.893 119.238 14.524 119.238 14.0689V10.9965C119.238 9.66506 118.747 9.16047 117.891 9.16047C117.414 9.16047 116.797 9.52486 116.502 9.81915V14.069C116.502 14.1773 116.481 14.2845 116.44 14.3845C116.398 14.4845 116.337 14.5753 116.261 14.6519C116.184 14.7284 116.093 14.7891 115.993 14.8305C115.893 14.8719 115.786 14.8931 115.678 14.8931H114.847V8.10918H115.773C115.932 8.10914 116.087 8.16315 116.212 8.26242C116.337 8.36168 116.424 8.50033 116.46 8.65577C116.881 8.19328 117.428 7.94098 118.06 7.94098ZM122.854 8.09713C123.024 8.09708 123.19 8.1496 123.329 8.2475C123.468 8.34541 123.574 8.48391 123.631 8.64405L125.133 12.8486L126.635 8.64415C126.692 8.48402 126.798 8.34551 126.937 8.2476C127.076 8.1497 127.242 8.09718 127.412 8.09724H128.598L126.152 14.3567C126.091 14.5112 125.986 14.6439 125.849 14.7374C125.711 14.831 125.549 14.881 125.383 14.8809H124.333L121.668 8.09713H122.854Z' fill='%23373F45'/%3E%3Cpath d='M135.085 14.5514C134.566 14.7616 133.513 15.0416 132.418 15.0416C130.496 15.0416 129.024 13.9345 129.024 11.4396C129.024 9.19701 130.451 7.99792 132.191 7.99792C134.338 7.99792 135.254 9.4378 135.158 11.3979C135.139 11.8029 134.786 12.0983 134.38 12.0983H130.679C130.763 13.1916 131.562 13.7662 132.615 13.7662C133.028 13.7662 133.462 13.7452 133.983 13.6481C134.535 13.545 135.085 13.9375 135.085 14.4985V14.5514ZM133.673 10.949C133.785 9.87621 133.061 9.28752 132.191 9.28752C131.321 9.28752 130.734 9.93979 130.679 10.9489L133.673 10.949Z' fill='%23373F45'/%3E%3Cpath d='M137.345 8.11122C137.497 8.11118 137.645 8.16229 137.765 8.25635C137.884 8.35041 137.969 8.48197 138.005 8.62993C138.566 8.20932 139.268 7.94303 139.759 7.94303C139.801 7.94303 140.068 7.94303 140.489 7.99913V8.7265C140.489 9.11748 140.15 9.4147 139.759 9.4147C139.31 9.4147 138.651 9.5829 138.131 9.8773V14.8951H136.462V8.11112L137.345 8.11122ZM156.6 14.0508V8.09104H155.769C155.314 8.09104 154.944 8.45999 154.944 8.9151V14.8748H155.775C156.23 14.8748 156.6 14.5058 156.6 14.0508ZM158.857 12.9447V9.34254H157.749V8.91912C157.749 8.46401 158.118 8.09506 158.574 8.09506H158.857V6.56739L160.499 6.10479V8.09506H161.986V8.51848C161.986 8.97359 161.617 9.34254 161.161 9.34254H160.499V12.7345C160.499 13.2566 160.795 13.44 161.177 13.503C161.626 13.5774 162 13.9024 162 14.3574V14.977C160.446 14.977 158.857 14.9086 158.857 12.9447ZM98.1929 10.1124C98.2033 6.94046 100.598 5.16809 102.895 5.16809C104.171 5.16809 105.342 5.44285 106.304 6.12953L105.914 6.6631C105.654 7.02011 105.16 7.16194 104.749 6.99949C104.169 6.7702 103.622 6.7218 103.215 6.7218C101.335 6.7218 99.9169 7.92849 99.9068 10.1123C99.9169 12.2959 101.335 13.5201 103.215 13.5201C103.622 13.5201 104.169 13.4717 104.749 13.2424C105.16 13.0799 105.654 13.2046 105.914 13.5615L106.304 14.0952C105.342 14.7819 104.171 15.0566 102.895 15.0566C100.598 15.0566 98.2033 13.2842 98.1929 10.1124ZM147.619 5.21768C148.074 5.21768 148.444 5.58663 148.444 6.04174V9.81968L151.82 5.58131C151.897 5.47733 151.997 5.39282 152.112 5.3346C152.227 5.27638 152.355 5.24607 152.484 5.24611H153.984L150.166 10.0615L153.984 14.8749H152.484C152.355 14.8749 152.227 14.8446 152.112 14.7864C151.997 14.7281 151.897 14.6436 151.82 14.5397L148.444 10.3025V14.0508C148.444 14.5059 148.074 14.8749 147.619 14.8749H146.746V5.21768H147.619Z' fill='%23373F45'/%3E%3Cpath d='M0.773438 6.5752H2.68066C3.56543 6.5752 4.2041 6.7041 4.59668 6.96191C4.99219 7.21973 5.18994 7.62695 5.18994 8.18359C5.18994 8.55859 5.09326 8.87061 4.8999 9.11963C4.70654 9.36865 4.42822 9.52539 4.06494 9.58984V9.63379C4.51611 9.71875 4.84717 9.88721 5.05811 10.1392C5.27197 10.3882 5.37891 10.7266 5.37891 11.1543C5.37891 11.7314 5.17676 12.1841 4.77246 12.5122C4.37109 12.8374 3.81152 13 3.09375 13H0.773438V6.5752ZM1.82373 9.22949H2.83447C3.27393 9.22949 3.59473 9.16064 3.79688 9.02295C3.99902 8.88232 4.1001 8.64502 4.1001 8.31104C4.1001 8.00928 3.99023 7.79102 3.77051 7.65625C3.55371 7.52148 3.20801 7.4541 2.7334 7.4541H1.82373V9.22949ZM1.82373 10.082V12.1167H2.93994C3.37939 12.1167 3.71045 12.0332 3.93311 11.8662C4.15869 11.6963 4.27148 11.4297 4.27148 11.0664C4.27148 10.7324 4.15723 10.4849 3.92871 10.3237C3.7002 10.1626 3.35303 10.082 2.88721 10.082H1.82373Z' fill='%23373F45'/%3E%3Cpath d='M13.011 6.5752V10.7324C13.011 11.207 12.9084 11.623 12.7034 11.9805C12.5012 12.335 12.2068 12.6089 11.8201 12.8022C11.4363 12.9927 10.9763 13.0879 10.4402 13.0879C9.6433 13.0879 9.02368 12.877 8.5813 12.4551C8.13892 12.0332 7.91772 11.4531 7.91772 10.7148V6.5752H8.9724V10.6401C8.9724 11.1704 9.09546 11.5615 9.34155 11.8135C9.58765 12.0654 9.96557 12.1914 10.4753 12.1914C11.4656 12.1914 11.9607 11.6714 11.9607 10.6313V6.5752H13.011Z' fill='%23373F45'/%3E%3Cpath d='M15.9146 13V6.5752H16.9649V13H15.9146Z' fill='%23373F45'/%3E%3Cpath d='M19.9255 13V6.5752H20.9758V12.0991H23.696V13H19.9255Z' fill='%23373F45'/%3E%3Cpath d='M28.2828 13H27.2325V7.47607H25.3428V6.5752H30.1724V7.47607H28.2828V13Z' fill='%23373F45'/%3E%3Cpath d='M41.9472 13H40.8046L39.7148 9.16796C39.6679 9.00097 39.6093 8.76074 39.539 8.44727C39.4687 8.13086 39.4262 7.91113 39.4116 7.78809C39.3823 7.97559 39.3339 8.21875 39.2665 8.51758C39.2021 8.81641 39.1479 9.03905 39.1039 9.18554L38.0405 13H36.8979L36.0673 9.7832L35.2236 6.5752H36.2958L37.2143 10.3193C37.3578 10.9199 37.4604 11.4502 37.5219 11.9102C37.5541 11.6611 37.6025 11.3828 37.6669 11.0752C37.7314 10.7676 37.79 10.5186 37.8427 10.3281L38.8886 6.5752H39.9301L41.0024 10.3457C41.1049 10.6943 41.2133 11.2158 41.3276 11.9102C41.3715 11.4912 41.477 10.958 41.644 10.3105L42.558 6.5752H43.6215L41.9472 13Z' fill='%23373F45'/%3E%3Cpath d='M45.7957 13V6.5752H46.846V13H45.7957Z' fill='%23373F45'/%3E%3Cpath d='M52.0258 13H50.9755V7.47607H49.0859V6.5752H53.9155V7.47607H52.0258V13Z' fill='%23373F45'/%3E%3Cpath d='M61.2312 13H60.1765V10.104H57.2146V13H56.1643V6.5752H57.2146V9.20312H60.1765V6.5752H61.2312V13Z' fill='%23373F45'/%3E%3C/svg%3E\\\");\\n}\\n\\n.formkit-form.powell .formkit-powered-by-convertkit:hover,\\n.formkit-form.powell .formkit-powered-by-convertkit:focus {\\n  -webkit-transform: scale(1.025) perspective(1px);\\n  -ms-transform: scale(1.025) perspective(1px);\\n  transform: scale(1.025) perspective(1px);\\n  opacity: 1;\\n}\\n\\n@-webkit-keyframes formkit-bouncedelay-formkit-form-data-uid-4e9ad49dba- {\\n\\n  0%,\\n  80%,\\n  100% {\\n    -webkit-transform: scale(0);\\n    -ms-transform: scale(0);\\n    transform: scale(0);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@keyframes formkit-bouncedelay-formkit-form-data-uid-4e9ad49dba- {\\n\\n  0%,\\n  80%,\\n  100% {\\n    -webkit-transform: scale(0);\\n    -ms-transform: scale(0);\\n    transform: scale(0);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n.formkit-form.powell blockquote {\\n  padding: 10px 20px;\\n  margin: 0 0 20px;\\n  border-left: 5px solid #e1e1e1;\\n}\\n\\n.formkit-form.powell {\\n  box-shadow: 0 2px 15px 0 rgba(51, 51, 51, 0.1);\\n  overflow: hidden;\\n}\\n\\n.formkit-form.powell,\\n.formkit-modal,\\n.formkit-slide-in {\\n  max-width: 460px !important;\\n}\\n\\n.formkit-form.powell [data-style=\\\"card\\\"] {\\n  width: 100%;\\n  display: block;\\n}\\n\\n.formkit-form.powell .formkit-header {\\n  margin-top: 40px;\\n  margin-bottom: 0;\\n}\\n\\n.formkit-form.powell .formkit-header p {\\n  margin-bottom: 0;\\n}\\n\\n.formkit-form.powell .formkit-subheader {\\n  margin-bottom: 25px;\\n}\\n\\n.formkit-form.powell .formkit-column {\\n  padding: 30px;\\n  position: relative;\\n}\\n\\n.formkit-form.powell .formkit-field {\\n  margin: 0 0 15px 0;\\n}\\n\\n.formkit-form.powell .formkit-field:last-of-type input {\\n  padding-right: 110px;\\n}\\n\\n.formkit-form.powell .formkit-input,\\n.formkit-form.powell .formkit-submit {\\n  font-size: 14px;\\n}\\n\\n.formkit-form.powell .formkit-input {\\n  width: 100%;\\n  padding: 15px 12px;\\n}\\n\\n.formkit-form.powell .formkit-submit {\\n  margin-top: 5px;\\n  margin-bottom: 0;\\n}\\n\\n.formkit-form.powell .formkit-guarantee {\\n  font-size: 13px;\\n  text-align: center;\\n  margin: 25px 0 0 0;\\n}\\n\\n.formkit-form.powell .formkit-guarantee>p {\\n  margin: 0;\\n}\\n\\n.formkit-form.powell .formkit-powered-by {\\n  color: #7d7d7d;\\n  display: block;\\n  font-size: 12px;\\n  margin-top: 15px;\\n  margin-bottom: 0;\\n  text-align: center;\\n}\\n\";\ninjector_bf1ba7e0(css_39407bb2,{\"singleTag\":true});\n\nvar ALLOWED_FORMATS$3 = ['inline', 'modal', 'slide in'];\nvar bgImage$1 = '//pages.convertkit.com/assets/powell/bg.jpg';\n\nfunction Powell(_ref) {\n  var options = _ref.options,\n      className = _ref.className,\n      action = _ref.action,\n      submitText = _ref.submitText,\n      emailPlaceholder = _ref.emailPlaceholder,\n      namePlaceholder = _ref.namePlaceholder,\n      hideName = _ref.hideName,\n      showLabels = _ref.showLabels,\n      nameLabel = _ref.nameLabel,\n      emailLabel = _ref.emailLabel,\n      newTab = _ref.newTab,\n      formId = _ref.formId,\n      format = _ref.format,\n      hideWarnings = _ref.hideWarnings;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, !hideWarnings && !ALLOWED_FORMATS$3.includes(format) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Warning, {\n    message: \"This template is not available for the chosen format\"\n  }) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"form\", {\n    action: action,\n    className: \"seva-form formkit-form powell \".concat(className),\n    method: \"post\",\n    target: newTab ? '_blank' : '_self',\n    \"data-sv-form\": formId,\n    \"data-uid\": options.uid,\n    \"data-format\": format,\n    \"data-version\": options.version,\n    \"data-options\": JSON.stringify(options),\n    \"min-width\": \"400 500 600 700 800\",\n    style: {\n      backgroundColor: 'rgb(255, 255, 255)',\n      borderRadius: '8px'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-style\": \"card\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"column\",\n    className: \"formkit-column\",\n    style: {\n      background: \"linear-gradient(rgba(251, 105, 112, .8), rgba(251, 105, 112, .8)), url(\".concat(bgImage$1, \")\"),\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      color: 'rgb(255, 255, 255)',\n      fontSize: '22px',\n      fontWeight: 700\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-header\",\n    \"data-element\": \"header\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h1\", null, \"Join the newsletter\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"column\",\n    className: \"formkit-column\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-subheader\",\n    \"data-element\": \"subheader\",\n    style: {\n      color: 'rgb(125, 125, 125)',\n      fontSize: '16px'\n    }\n  }, \"Subscribe to get our latest content by email.\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"ul\", {\n    className: \"formkit-alert formkit-alert-error\",\n    \"data-element\": \"errors\",\n    \"data-group\": \"alert\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"fields\",\n    className: \"seva-fields formkit-fields\"\n  }, !hideName && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-first-name\"\n  }, nameLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": nameLabel,\n    name: \"fields[first_name]\",\n    placeholder: namePlaceholder,\n    type: \"text\",\n    style: {\n      color: 'rgb(77, 77, 77)',\n      borderColor: 'rgb(227, 227, 227)',\n      borderRadius: '4px',\n      fontWeight: 400\n    },\n    id: \"ck-first-name\"\n  }))), showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-email\"\n  }, emailLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": emailLabel,\n    name: \"email_address\",\n    placeholder: emailPlaceholder,\n    required: true,\n    type: \"email\",\n    style: {\n      color: 'rgb(77, 77, 77)',\n      borderColor: 'rgb(227, 227, 227)',\n      borderRadius: '4px',\n      fontWeight: 400\n    },\n    id: \"ck-email\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    \"data-element\": \"submit\",\n    className: \"formkit-submit formkit-submit\",\n    style: {\n      color: 'rgb(255, 255, 255)',\n      backgroundColor: 'rgb(251, 105, 112)',\n      borderRadius: '24px',\n      fontWeight: 700\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-spinner\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, submitText))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-guarantee\",\n    \"data-element\": \"guarantee\",\n    style: {\n      color: 'rgb(125, 125, 125)',\n      fontSize: '13px',\n      fontWeight: 400\n    }\n  }, \"We won't send you spam. Unsubscribe at any time.\"), options.settings.powered_by.show ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", {\n    href: options.settings.powered_by.url,\n    className: \"formkit-powered-by\",\n    \"data-element\": \"powered-by\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"Powered By ConvertKit\") : null))));\n}\n\nconst css_605ec973 = \".formkit-form.charlotte * {\\n  box-sizing: border-box;\\n}\\n\\n.formkit-form.charlotte {\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.formkit-form.charlotte legend {\\n  border: none;\\n  font-size: inherit;\\n  margin-bottom: 10px;\\n  padding: 0;\\n  position: relative;\\n  display: table;\\n}\\n\\n.formkit-form.charlotte fieldset {\\n  border: 0;\\n  padding: 0.01em 0 0 0;\\n  margin: 0;\\n  min-width: 0;\\n}\\n\\n.formkit-form.charlotte body:not(:-moz-handler-blocked) fieldset {\\n  display: table-cell;\\n}\\n\\n.formkit-form.charlotte h1,\\n.formkit-form.charlotte h2,\\n.formkit-form.charlotte h3,\\n.formkit-form.charlotte h4,\\n.formkit-form.charlotte h5,\\n.formkit-form.charlotte h6 {\\n  color: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.formkit-form.charlotte p {\\n  color: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.formkit-form.charlotte ol:not([template-default]),\\n.formkit-form.charlotte ul:not([template-default]),\\n.formkit-form.charlotte blockquote:not([template-default]) {\\n  text-align: left;\\n}\\n\\n.formkit-form.charlotte p:not([template-default]),\\n.formkit-form.charlotte hr:not([template-default]),\\n.formkit-form.charlotte blockquote:not([template-default]),\\n.formkit-form.charlotte ol:not([template-default]),\\n.formkit-form.charlotte ul:not([template-default]) {\\n  color: inherit;\\n  font-style: initial;\\n}\\n\\n.formkit-form.charlotte[data-format=\\\"modal\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.charlotte[data-format=\\\"slide in\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.charlotte[data-format=\\\"sticky bar\\\"] {\\n  display: none;\\n}\\n\\n.formkit-sticky-bar .formkit-form.charlotte[data-format=\\\"sticky bar\\\"] {\\n  display: block;\\n}\\n\\n.formkit-form.charlotte .formkit-input,\\n.formkit-form.charlotte .formkit-select,\\n.formkit-form.charlotte .formkit-checkboxes {\\n  width: 100%;\\n}\\n\\n.formkit-form.charlotte .formkit-button,\\n.formkit-form.charlotte .formkit-submit {\\n  border: 0;\\n  border-radius: 5px;\\n  color: #ffffff;\\n  cursor: pointer;\\n  display: inline-block;\\n  text-align: center;\\n  font-size: 15px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  margin-bottom: 15px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: relative;\\n  vertical-align: middle;\\n}\\n\\n.formkit-form.charlotte .formkit-button:hover,\\n.formkit-form.charlotte .formkit-submit:hover,\\n.formkit-form.charlotte .formkit-button:focus,\\n.formkit-form.charlotte .formkit-submit:focus {\\n  outline: none;\\n}\\n\\n.formkit-form.charlotte .formkit-button:hover>span,\\n.formkit-form.charlotte .formkit-submit:hover>span,\\n.formkit-form.charlotte .formkit-button:focus>span,\\n.formkit-form.charlotte .formkit-submit:focus>span {\\n  background-color: rgba(0, 0, 0, 0.1);\\n}\\n\\n.formkit-form.charlotte .formkit-button>span,\\n.formkit-form.charlotte .formkit-submit>span {\\n  display: block;\\n  -webkit-transition: all 300ms ease-in-out;\\n  transition: all 300ms ease-in-out;\\n  padding: 12px 24px;\\n}\\n\\n.formkit-form.charlotte .formkit-input {\\n  background: #ffffff;\\n  font-size: 15px;\\n  padding: 12px;\\n  border: 1px solid #e3e3e3;\\n  -webkit-flex: 1 0 auto;\\n  -ms-flex: 1 0 auto;\\n  flex: 1 0 auto;\\n  line-height: 1.4;\\n  margin: 0;\\n  -webkit-transition: border-color ease-out 300ms;\\n  transition: border-color ease-out 300ms;\\n}\\n\\n.formkit-form.charlotte .formkit-input:focus {\\n  outline: none;\\n  border-color: #1677be;\\n  -webkit-transition: border-color ease 300ms;\\n  transition: border-color ease 300ms;\\n}\\n\\n.formkit-form.charlotte .formkit-input::-webkit-input-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.charlotte .formkit-input::-moz-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.charlotte .formkit-input:-ms-input-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.charlotte .formkit-input::placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"dropdown\\\"] {\\n  position: relative;\\n  display: inline-block;\\n  width: 100%;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"dropdown\\\"]::before {\\n  content: \\\"\\\";\\n  top: calc(50% - 2.5px);\\n  right: 10px;\\n  position: absolute;\\n  pointer-events: none;\\n  border-color: #4f4f4f transparent transparent transparent;\\n  border-style: solid;\\n  border-width: 6px 6px 0 6px;\\n  height: 0;\\n  width: 0;\\n  z-index: 999;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"dropdown\\\"] select {\\n  height: auto;\\n  width: 100%;\\n  cursor: pointer;\\n  color: #333333;\\n  line-height: 1.4;\\n  margin-bottom: 0;\\n  padding: 0 6px;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n  font-size: 15px;\\n  padding: 12px;\\n  padding-right: 25px;\\n  border: 1px solid #e3e3e3;\\n  background: #ffffff;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"dropdown\\\"] select:focus {\\n  outline: none;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] {\\n  text-align: left;\\n  margin: 0;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] {\\n  margin-bottom: 10px;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] * {\\n  cursor: pointer;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"]:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]+label::after {\\n  content: none;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked+label::after {\\n  border-color: #ffffff;\\n  content: \\\"\\\";\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked+label::before {\\n  background: #10bf7a;\\n  border-color: #10bf7a;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label {\\n  position: relative;\\n  display: inline-block;\\n  padding-left: 28px;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::before,\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::after {\\n  position: absolute;\\n  content: \\\"\\\";\\n  display: inline-block;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::before {\\n  height: 16px;\\n  width: 16px;\\n  border: 1px solid #e3e3e3;\\n  background: #ffffff;\\n  left: 0px;\\n  top: 3px;\\n}\\n\\n.formkit-form.charlotte [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::after {\\n  height: 4px;\\n  width: 8px;\\n  border-left: 2px solid #4d4d4d;\\n  border-bottom: 2px solid #4d4d4d;\\n  -webkit-transform: rotate(-45deg);\\n  -ms-transform: rotate(-45deg);\\n  transform: rotate(-45deg);\\n  left: 4px;\\n  top: 8px;\\n}\\n\\n.formkit-form.charlotte .formkit-alert {\\n  background: #f9fafb;\\n  border: 1px solid #e3e3e3;\\n  border-radius: 5px;\\n  -webkit-flex: 1 0 auto;\\n  -ms-flex: 1 0 auto;\\n  flex: 1 0 auto;\\n  list-style: none;\\n  margin: 25px auto;\\n  padding: 12px;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.formkit-form.charlotte .formkit-alert:empty {\\n  display: none;\\n}\\n\\n.formkit-form.charlotte .formkit-alert-success {\\n  background: #d3fbeb;\\n  border-color: #10bf7a;\\n  color: #0c905c;\\n}\\n\\n.formkit-form.charlotte .formkit-alert-error {\\n  background: #fde8e2;\\n  border-color: #f2643b;\\n  color: #ea4110;\\n}\\n\\n.formkit-form.charlotte .formkit-spinner {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 0px;\\n  width: 0px;\\n  margin: 0 auto;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: 0px;\\n  overflow: hidden;\\n  text-align: center;\\n  -webkit-transition: all 300ms ease-in-out;\\n  transition: all 300ms ease-in-out;\\n}\\n\\n.formkit-form.charlotte .formkit-spinner>div {\\n  margin: auto;\\n  width: 12px;\\n  height: 12px;\\n  background-color: #fff;\\n  opacity: 0.3;\\n  border-radius: 100%;\\n  display: inline-block;\\n  -webkit-animation: formkit-bouncedelay-formkit-form-data-uid-bad0d82b83- 1.4s infinite ease-in-out both;\\n  animation: formkit-bouncedelay-formkit-form-data-uid-bad0d82b83- 1.4s infinite ease-in-out both;\\n}\\n\\n.formkit-form.charlotte .formkit-spinner>div:nth-child(1) {\\n  -webkit-animation-delay: -0.32s;\\n  animation-delay: -0.32s;\\n}\\n\\n.formkit-form.charlotte .formkit-spinner>div:nth-child(2) {\\n  -webkit-animation-delay: -0.16s;\\n  animation-delay: -0.16s;\\n}\\n\\n.formkit-form.charlotte .formkit-submit[data-active] .formkit-spinner {\\n  opacity: 1;\\n  height: 100%;\\n  width: 50px;\\n}\\n\\n.formkit-form.charlotte .formkit-submit[data-active] .formkit-spinner~span {\\n  opacity: 0;\\n}\\n\\n.formkit-form.charlotte .formkit-powered-by[data-active=\\\"false\\\"] {\\n  opacity: 0.35;\\n}\\n\\n.formkit-form.charlotte .formkit-powered-by-convertkit-container {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  width: 100%;\\n  z-index: 5;\\n  margin: 10px 0;\\n  position: relative;\\n}\\n\\n.formkit-form.charlotte .formkit-powered-by-convertkit-container[data-active=\\\"false\\\"] {\\n  opacity: 0.35;\\n}\\n\\n.formkit-form.charlotte .formkit-powered-by-convertkit {\\n  -webkit-align-items: center;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n  background-color: #ffffff;\\n  border: 1px solid #dce1e5;\\n  border-radius: 4px;\\n  color: #373f45;\\n  cursor: pointer;\\n  display: block;\\n  height: 36px;\\n  margin: 0 auto;\\n  opacity: 0.95;\\n  -webkit-text-decoration: none;\\n  text-decoration: none;\\n  text-indent: 100%;\\n  -webkit-transition: ease-in-out all 200ms;\\n  transition: ease-in-out all 200ms;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  width: 190px;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg width='162' height='20' viewBox='0 0 162 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M83.0561 15.2457C86.675 15.2457 89.4722 12.5154 89.4722 9.14749C89.4722 5.99211 86.8443 4.06563 85.1038 4.06563C82.6801 4.06563 80.7373 5.76407 80.4605 8.28551C80.4092 8.75244 80.0387 9.14403 79.5686 9.14069C78.7871 9.13509 77.6507 9.12841 76.9314 9.13092C76.6217 9.13199 76.3658 8.88106 76.381 8.57196C76.4895 6.38513 77.2218 4.3404 78.618 2.76974C80.1695 1.02445 82.4289 0 85.1038 0C89.5979 0 93.8406 4.07791 93.8406 9.14749C93.8406 14.7608 89.1832 19.3113 83.1517 19.3113C78.8502 19.3113 74.5179 16.5041 73.0053 12.5795C72.9999 12.565 72.9986 12.5492 73.0015 12.534C73.0218 12.4179 73.0617 12.3118 73.1011 12.2074C73.1583 12.0555 73.2143 11.907 73.2062 11.7359L73.18 11.1892C73.174 11.0569 73.2075 10.9258 73.2764 10.8127C73.3452 10.6995 73.4463 10.6094 73.5666 10.554L73.7852 10.4523C73.9077 10.3957 74.0148 10.3105 74.0976 10.204C74.1803 10.0974 74.2363 9.97252 74.2608 9.83983C74.3341 9.43894 74.6865 9.14749 75.0979 9.14749C75.7404 9.14749 76.299 9.57412 76.5088 10.1806C77.5188 13.1 79.1245 15.2457 83.0561 15.2457Z' fill='%23373F45'/%3E%3Cpath d='M155.758 6.91365C155.028 6.91365 154.804 6.47916 154.804 5.98857C154.804 5.46997 154.986 5.06348 155.758 5.06348C156.53 5.06348 156.712 5.46997 156.712 5.98857C156.712 6.47905 156.516 6.91365 155.758 6.91365ZM142.441 12.9304V9.32833L141.415 9.32323V8.90392C141.415 8.44719 141.786 8.07758 142.244 8.07986L142.441 8.08095V6.55306L144.082 6.09057V8.08073H145.569V8.50416C145.569 8.61242 145.548 8.71961 145.506 8.81961C145.465 8.91961 145.404 9.01047 145.328 9.08699C145.251 9.16351 145.16 9.2242 145.06 9.26559C144.96 9.30698 144.853 9.32826 144.745 9.32822H144.082V12.7201C144.082 13.2423 144.378 13.4256 144.76 13.4887C145.209 13.5629 145.583 13.888 145.583 14.343V14.9626C144.029 14.9626 142.441 14.8942 142.441 12.9304Z' fill='%23373F45'/%3E%3Cpath d='M110.058 7.92554C108.417 7.88344 106.396 8.92062 106.396 11.5137C106.396 14.0646 108.417 15.0738 110.058 15.0318C111.742 15.0738 113.748 14.0646 113.748 11.5137C113.748 8.92062 111.742 7.88344 110.058 7.92554ZM110.07 13.7586C108.878 13.7586 108.032 12.8905 108.032 11.461C108.032 10.1013 108.878 9.20569 110.071 9.20569C111.263 9.20569 112.101 10.0995 112.101 11.459C112.101 12.8887 111.263 13.7586 110.07 13.7586Z' fill='%23373F45'/%3E%3Cpath d='M118.06 7.94098C119.491 7.94098 120.978 8.33337 120.978 11.1366V14.893H120.063C119.608 14.893 119.238 14.524 119.238 14.0689V10.9965C119.238 9.66506 118.747 9.16047 117.891 9.16047C117.414 9.16047 116.797 9.52486 116.502 9.81915V14.069C116.502 14.1773 116.481 14.2845 116.44 14.3845C116.398 14.4845 116.337 14.5753 116.261 14.6519C116.184 14.7284 116.093 14.7891 115.993 14.8305C115.893 14.8719 115.786 14.8931 115.678 14.8931H114.847V8.10918H115.773C115.932 8.10914 116.087 8.16315 116.212 8.26242C116.337 8.36168 116.424 8.50033 116.46 8.65577C116.881 8.19328 117.428 7.94098 118.06 7.94098ZM122.854 8.09713C123.024 8.09708 123.19 8.1496 123.329 8.2475C123.468 8.34541 123.574 8.48391 123.631 8.64405L125.133 12.8486L126.635 8.64415C126.692 8.48402 126.798 8.34551 126.937 8.2476C127.076 8.1497 127.242 8.09718 127.412 8.09724H128.598L126.152 14.3567C126.091 14.5112 125.986 14.6439 125.849 14.7374C125.711 14.831 125.549 14.881 125.383 14.8809H124.333L121.668 8.09713H122.854Z' fill='%23373F45'/%3E%3Cpath d='M135.085 14.5514C134.566 14.7616 133.513 15.0416 132.418 15.0416C130.496 15.0416 129.024 13.9345 129.024 11.4396C129.024 9.19701 130.451 7.99792 132.191 7.99792C134.338 7.99792 135.254 9.4378 135.158 11.3979C135.139 11.8029 134.786 12.0983 134.38 12.0983H130.679C130.763 13.1916 131.562 13.7662 132.615 13.7662C133.028 13.7662 133.462 13.7452 133.983 13.6481C134.535 13.545 135.085 13.9375 135.085 14.4985V14.5514ZM133.673 10.949C133.785 9.87621 133.061 9.28752 132.191 9.28752C131.321 9.28752 130.734 9.93979 130.679 10.9489L133.673 10.949Z' fill='%23373F45'/%3E%3Cpath d='M137.345 8.11122C137.497 8.11118 137.645 8.16229 137.765 8.25635C137.884 8.35041 137.969 8.48197 138.005 8.62993C138.566 8.20932 139.268 7.94303 139.759 7.94303C139.801 7.94303 140.068 7.94303 140.489 7.99913V8.7265C140.489 9.11748 140.15 9.4147 139.759 9.4147C139.31 9.4147 138.651 9.5829 138.131 9.8773V14.8951H136.462V8.11112L137.345 8.11122ZM156.6 14.0508V8.09104H155.769C155.314 8.09104 154.944 8.45999 154.944 8.9151V14.8748H155.775C156.23 14.8748 156.6 14.5058 156.6 14.0508ZM158.857 12.9447V9.34254H157.749V8.91912C157.749 8.46401 158.118 8.09506 158.574 8.09506H158.857V6.56739L160.499 6.10479V8.09506H161.986V8.51848C161.986 8.97359 161.617 9.34254 161.161 9.34254H160.499V12.7345C160.499 13.2566 160.795 13.44 161.177 13.503C161.626 13.5774 162 13.9024 162 14.3574V14.977C160.446 14.977 158.857 14.9086 158.857 12.9447ZM98.1929 10.1124C98.2033 6.94046 100.598 5.16809 102.895 5.16809C104.171 5.16809 105.342 5.44285 106.304 6.12953L105.914 6.6631C105.654 7.02011 105.16 7.16194 104.749 6.99949C104.169 6.7702 103.622 6.7218 103.215 6.7218C101.335 6.7218 99.9169 7.92849 99.9068 10.1123C99.9169 12.2959 101.335 13.5201 103.215 13.5201C103.622 13.5201 104.169 13.4717 104.749 13.2424C105.16 13.0799 105.654 13.2046 105.914 13.5615L106.304 14.0952C105.342 14.7819 104.171 15.0566 102.895 15.0566C100.598 15.0566 98.2033 13.2842 98.1929 10.1124ZM147.619 5.21768C148.074 5.21768 148.444 5.58663 148.444 6.04174V9.81968L151.82 5.58131C151.897 5.47733 151.997 5.39282 152.112 5.3346C152.227 5.27638 152.355 5.24607 152.484 5.24611H153.984L150.166 10.0615L153.984 14.8749H152.484C152.355 14.8749 152.227 14.8446 152.112 14.7864C151.997 14.7281 151.897 14.6436 151.82 14.5397L148.444 10.3025V14.0508C148.444 14.5059 148.074 14.8749 147.619 14.8749H146.746V5.21768H147.619Z' fill='%23373F45'/%3E%3Cpath d='M0.773438 6.5752H2.68066C3.56543 6.5752 4.2041 6.7041 4.59668 6.96191C4.99219 7.21973 5.18994 7.62695 5.18994 8.18359C5.18994 8.55859 5.09326 8.87061 4.8999 9.11963C4.70654 9.36865 4.42822 9.52539 4.06494 9.58984V9.63379C4.51611 9.71875 4.84717 9.88721 5.05811 10.1392C5.27197 10.3882 5.37891 10.7266 5.37891 11.1543C5.37891 11.7314 5.17676 12.1841 4.77246 12.5122C4.37109 12.8374 3.81152 13 3.09375 13H0.773438V6.5752ZM1.82373 9.22949H2.83447C3.27393 9.22949 3.59473 9.16064 3.79688 9.02295C3.99902 8.88232 4.1001 8.64502 4.1001 8.31104C4.1001 8.00928 3.99023 7.79102 3.77051 7.65625C3.55371 7.52148 3.20801 7.4541 2.7334 7.4541H1.82373V9.22949ZM1.82373 10.082V12.1167H2.93994C3.37939 12.1167 3.71045 12.0332 3.93311 11.8662C4.15869 11.6963 4.27148 11.4297 4.27148 11.0664C4.27148 10.7324 4.15723 10.4849 3.92871 10.3237C3.7002 10.1626 3.35303 10.082 2.88721 10.082H1.82373Z' fill='%23373F45'/%3E%3Cpath d='M13.011 6.5752V10.7324C13.011 11.207 12.9084 11.623 12.7034 11.9805C12.5012 12.335 12.2068 12.6089 11.8201 12.8022C11.4363 12.9927 10.9763 13.0879 10.4402 13.0879C9.6433 13.0879 9.02368 12.877 8.5813 12.4551C8.13892 12.0332 7.91772 11.4531 7.91772 10.7148V6.5752H8.9724V10.6401C8.9724 11.1704 9.09546 11.5615 9.34155 11.8135C9.58765 12.0654 9.96557 12.1914 10.4753 12.1914C11.4656 12.1914 11.9607 11.6714 11.9607 10.6313V6.5752H13.011Z' fill='%23373F45'/%3E%3Cpath d='M15.9146 13V6.5752H16.9649V13H15.9146Z' fill='%23373F45'/%3E%3Cpath d='M19.9255 13V6.5752H20.9758V12.0991H23.696V13H19.9255Z' fill='%23373F45'/%3E%3Cpath d='M28.2828 13H27.2325V7.47607H25.3428V6.5752H30.1724V7.47607H28.2828V13Z' fill='%23373F45'/%3E%3Cpath d='M41.9472 13H40.8046L39.7148 9.16796C39.6679 9.00097 39.6093 8.76074 39.539 8.44727C39.4687 8.13086 39.4262 7.91113 39.4116 7.78809C39.3823 7.97559 39.3339 8.21875 39.2665 8.51758C39.2021 8.81641 39.1479 9.03905 39.1039 9.18554L38.0405 13H36.8979L36.0673 9.7832L35.2236 6.5752H36.2958L37.2143 10.3193C37.3578 10.9199 37.4604 11.4502 37.5219 11.9102C37.5541 11.6611 37.6025 11.3828 37.6669 11.0752C37.7314 10.7676 37.79 10.5186 37.8427 10.3281L38.8886 6.5752H39.9301L41.0024 10.3457C41.1049 10.6943 41.2133 11.2158 41.3276 11.9102C41.3715 11.4912 41.477 10.958 41.644 10.3105L42.558 6.5752H43.6215L41.9472 13Z' fill='%23373F45'/%3E%3Cpath d='M45.7957 13V6.5752H46.846V13H45.7957Z' fill='%23373F45'/%3E%3Cpath d='M52.0258 13H50.9755V7.47607H49.0859V6.5752H53.9155V7.47607H52.0258V13Z' fill='%23373F45'/%3E%3Cpath d='M61.2312 13H60.1765V10.104H57.2146V13H56.1643V6.5752H57.2146V9.20312H60.1765V6.5752H61.2312V13Z' fill='%23373F45'/%3E%3C/svg%3E\\\");\\n}\\n\\n.formkit-form.charlotte .formkit-powered-by-convertkit:hover,\\n.formkit-form.charlotte .formkit-powered-by-convertkit:focus {\\n  -webkit-transform: scale(1.025) perspective(1px);\\n  -ms-transform: scale(1.025) perspective(1px);\\n  transform: scale(1.025) perspective(1px);\\n  opacity: 1;\\n}\\n\\n@-webkit-keyframes formkit-bouncedelay-formkit-form-data-uid-bad0d82b83- {\\n\\n  0%,\\n  80%,\\n  100% {\\n    -webkit-transform: scale(0);\\n    -ms-transform: scale(0);\\n    transform: scale(0);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@keyframes formkit-bouncedelay-formkit-form-data-uid-bad0d82b83- {\\n\\n  0%,\\n  80%,\\n  100% {\\n    -webkit-transform: scale(0);\\n    -ms-transform: scale(0);\\n    transform: scale(0);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n.formkit-form.charlotte blockquote {\\n  padding: 10px 20px;\\n  margin: 0 0 20px;\\n  border-left: 5px solid #e1e1e1;\\n}\\n\\n.formkit-form.charlotte {\\n  box-shadow: 0 0px 2px rgba(0, 0, 0, 0.15);\\n  max-width: 700px !important;\\n  overflow: hidden;\\n}\\n\\n.formkit-form.charlotte [data-style=\\\"full\\\"] {\\n  width: 100%;\\n  display: block;\\n}\\n\\n.formkit-form.charlotte .formkit-background {\\n  position: relative !important;\\n  background-position: center center;\\n  background-size: cover;\\n  min-height: 200px;\\n  width: auto;\\n  opacity: 1 !important;\\n}\\n\\n.formkit-form.charlotte .formkit-column {\\n  padding: 20px;\\n  position: relative;\\n}\\n\\n.formkit-form.charlotte .formkit-header {\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n}\\n\\n.formkit-form.charlotte .formkit-field {\\n  margin: 0 0 10px 0;\\n}\\n\\n.formkit-form.charlotte .formkit-fields .formkit-submit {\\n  margin-top: 15px;\\n}\\n\\n.formkit-form.charlotte .formkit-disclaimer {\\n  margin: 0 0 15px 0;\\n}\\n\\n.formkit-form.charlotte .formkit-disclaimer>p {\\n  margin: 0;\\n}\\n\\n.formkit-form.charlotte .formkit-powered-by {\\n  color: #7d7d7d;\\n  display: block;\\n  font-size: 11px;\\n  margin-bottom: 0;\\n  margin-top: 20px;\\n  text-align: center;\\n}\\n\\n.formkit-form.charlotte[min-width~=\\\"600\\\"] [data-style=\\\"full\\\"],\\n.formkit-form.charlotte[min-width~=\\\"700\\\"] [data-style=\\\"full\\\"],\\n.formkit-form.charlotte[min-width~=\\\"800\\\"] [data-style=\\\"full\\\"] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n}\\n\\n.formkit-form.charlotte[min-width~=\\\"600\\\"] .formkit-column,\\n.formkit-form.charlotte[min-width~=\\\"700\\\"] .formkit-column,\\n.formkit-form.charlotte[min-width~=\\\"800\\\"] .formkit-column {\\n  padding: 40px;\\n}\\n\";\ninjector_bf1ba7e0(css_605ec973,{\"singleTag\":true});\n\nvar ALLOWED_FORMATS$4 = ['inline', 'modal', 'slide in'];\nvar bgImage$2 = '//pages.convertkit.com/assets/charlotte/bg.jpg';\n\nfunction Charlotte(_ref) {\n  var options = _ref.options,\n      className = _ref.className,\n      action = _ref.action,\n      submitText = _ref.submitText,\n      emailPlaceholder = _ref.emailPlaceholder,\n      namePlaceholder = _ref.namePlaceholder,\n      hideName = _ref.hideName,\n      showLabels = _ref.showLabels,\n      nameLabel = _ref.nameLabel,\n      emailLabel = _ref.emailLabel,\n      newTab = _ref.newTab,\n      formId = _ref.formId,\n      format = _ref.format,\n      hideWarnings = _ref.hideWarnings;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, !hideWarnings && !ALLOWED_FORMATS$4.includes(format) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Warning, {\n    message: \"This template is not available for the chosen format\"\n  }) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"form\", {\n    action: action,\n    className: \"seva-form formkit-form charlotte \".concat(className),\n    method: \"post\",\n    target: newTab ? '_blank' : '_self',\n    \"data-sv-form\": formId,\n    \"data-uid\": options.uid,\n    \"data-format\": format,\n    \"data-version\": options.version,\n    \"data-options\": JSON.stringify(options),\n    \"min-width\": \"400 500 600 700 800\",\n    style: {\n      backgroundColor: 'rgb(255, 255, 255)',\n      borderRadius: '6px'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-style\": \"full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"column\",\n    className: \"formkit-background\",\n    style: {\n      backgroundImage: \"url(\".concat(bgImage$2, \")\")\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"column\",\n    className: \"formkit-column\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-header\",\n    \"data-element\": \"header\",\n    style: {\n      color: 'rgb(83, 83, 83)',\n      fontSize: '28px',\n      fontWeight: 700\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h1\", null, \"Get our how to guide\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"ul\", {\n    className: \"formkit-alert formkit-alert-error\",\n    \"data-element\": \"errors\",\n    \"data-group\": \"alert\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"fields\",\n    className: \"seva-fields formkit-fields\"\n  }, !hideName && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-first-name\"\n  }, nameLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": nameLabel,\n    name: \"fields[first_name]\",\n    placeholder: namePlaceholder,\n    type: \"text\",\n    style: {\n      color: 'rgb(139, 139, 139)',\n      borderColor: 'rgb(221, 224, 228)',\n      fontWeight: 400,\n      borderLeft: 0,\n      borderRight: 0,\n      borderTop: 0,\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    id: \"ck-first-name\"\n  }))), showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-email\"\n  }, emailLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": emailLabel,\n    name: \"email_address\",\n    placeholder: emailPlaceholder,\n    required: true,\n    type: \"email\",\n    style: {\n      color: 'rgb(139, 139, 139)',\n      borderColor: 'rgb(221, 224, 228)',\n      fontWeight: 400,\n      borderLeft: 0,\n      borderRight: 0,\n      borderTop: 0,\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    id: \"ck-email\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    \"data-element\": \"submit\",\n    className: \"formkit-submit\",\n    style: {\n      width: '100%',\n      color: 'rgb(255, 255, 255)',\n      backgroundColor: 'rgb(246, 166, 171)',\n      borderRadius: '3px',\n      fontWeight: 700\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-spinner\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, submitText))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-disclaimer\",\n    \"data-element\": \"disclaimer\",\n    style: {\n      color: 'rgb(139, 139, 139)',\n      fontSize: '13px'\n    }\n  }, \"We respect your privacy. Unsubscribe at any time.\"), options.settings.powered_by.show ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", {\n    href: options.settings.powered_by.url,\n    className: \"formkit-powered-by\",\n    \"data-element\": \"powered-by\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"Powered By ConvertKit\") : null))));\n}\n\nconst css_1fb7599d = \".formkit-form.pine * {\\n  box-sizing: border-box;\\n}\\n\\n.formkit-form.pine {\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.formkit-form.pine legend {\\n  border: none;\\n  font-size: inherit;\\n  margin-bottom: 10px;\\n  padding: 0;\\n  position: relative;\\n  display: table;\\n}\\n\\n.formkit-form.pine fieldset {\\n  border: 0;\\n  padding: 0.01em 0 0 0;\\n  margin: 0;\\n  min-width: 0;\\n}\\n\\n.formkit-form.pine body:not(:-moz-handler-blocked) fieldset {\\n  display: table-cell;\\n}\\n\\n.formkit-form.pine h1,\\n.formkit-form.pine h2,\\n.formkit-form.pine h3,\\n.formkit-form.pine h4,\\n.formkit-form.pine h5,\\n.formkit-form.pine h6 {\\n  color: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.formkit-form.pine p {\\n  color: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n.formkit-form.pine ol:not([template-default]),\\n.formkit-form.pine ul:not([template-default]),\\n.formkit-form.pine blockquote:not([template-default]) {\\n  text-align: left;\\n}\\n\\n.formkit-form.pine p:not([template-default]),\\n.formkit-form.pine hr:not([template-default]),\\n.formkit-form.pine blockquote:not([template-default]),\\n.formkit-form.pine ol:not([template-default]),\\n.formkit-form.pine ul:not([template-default]) {\\n  color: inherit;\\n  font-style: initial;\\n}\\n\\n.formkit-form.pine[data-format=\\\"modal\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.pine[data-format=\\\"slide in\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.pine[data-format=\\\"sticky bar\\\"] {\\n  display: none;\\n}\\n\\n.formkit-sticky-bar .formkit-form.pine[data-format=\\\"sticky bar\\\"] {\\n  display: block;\\n}\\n\\n.formkit-form.pine .formkit-input,\\n.formkit-form.pine .formkit-select,\\n.formkit-form.pine .formkit-checkboxes {\\n  width: 100%;\\n}\\n\\n.formkit-form.pine .formkit-button,\\n.formkit-form.pine .formkit-submit {\\n  border: 0;\\n  border-radius: 5px;\\n  color: #ffffff;\\n  cursor: pointer;\\n  display: inline-block;\\n  text-align: center;\\n  font-size: 15px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  margin-bottom: 15px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: relative;\\n  vertical-align: middle;\\n}\\n\\n.formkit-form.pine .formkit-button:hover,\\n.formkit-form.pine .formkit-submit:hover,\\n.formkit-form.pine .formkit-button:focus,\\n.formkit-form.pine .formkit-submit:focus {\\n  outline: none;\\n}\\n\\n.formkit-form.pine .formkit-button:hover>span,\\n.formkit-form.pine .formkit-submit:hover>span,\\n.formkit-form.pine .formkit-button:focus>span,\\n.formkit-form.pine .formkit-submit:focus>span {\\n  background-color: rgba(0, 0, 0, 0.1);\\n}\\n\\n.formkit-form.pine .formkit-button>span,\\n.formkit-form.pine .formkit-submit>span {\\n  display: block;\\n  -webkit-transition: all 300ms ease-in-out;\\n  transition: all 300ms ease-in-out;\\n  padding: 12px 24px;\\n}\\n\\n.formkit-form.pine .formkit-input {\\n  background: #ffffff;\\n  font-size: 15px;\\n  padding: 12px;\\n  border: 1px solid #e3e3e3;\\n  -webkit-flex: 1 0 auto;\\n  -ms-flex: 1 0 auto;\\n  flex: 1 0 auto;\\n  line-height: 1.4;\\n  margin: 0;\\n  -webkit-transition: border-color ease-out 300ms;\\n  transition: border-color ease-out 300ms;\\n}\\n\\n.formkit-form.pine .formkit-input:focus {\\n  outline: none;\\n  border-color: #1677be;\\n  -webkit-transition: border-color ease 300ms;\\n  transition: border-color ease 300ms;\\n}\\n\\n.formkit-form.pine .formkit-input::-webkit-input-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.pine .formkit-input::-moz-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.pine .formkit-input:-ms-input-placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.pine .formkit-input::placeholder {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n.formkit-form.pine [data-group=\\\"dropdown\\\"] {\\n  position: relative;\\n  display: inline-block;\\n  width: 100%;\\n}\\n\\n.formkit-form.pine [data-group=\\\"dropdown\\\"]::before {\\n  content: \\\"\\\";\\n  top: calc(50% - 2.5px);\\n  right: 10px;\\n  position: absolute;\\n  pointer-events: none;\\n  border-color: #4f4f4f transparent transparent transparent;\\n  border-style: solid;\\n  border-width: 6px 6px 0 6px;\\n  height: 0;\\n  width: 0;\\n  z-index: 999;\\n}\\n\\n.formkit-form.pine [data-group=\\\"dropdown\\\"] select {\\n  height: auto;\\n  width: 100%;\\n  cursor: pointer;\\n  color: #333333;\\n  line-height: 1.4;\\n  margin-bottom: 0;\\n  padding: 0 6px;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none;\\n  font-size: 15px;\\n  padding: 12px;\\n  padding-right: 25px;\\n  border: 1px solid #e3e3e3;\\n  background: #ffffff;\\n}\\n\\n.formkit-form.pine [data-group=\\\"dropdown\\\"] select:focus {\\n  outline: none;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] {\\n  text-align: left;\\n  margin: 0;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] {\\n  margin-bottom: 10px;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] * {\\n  cursor: pointer;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"]:last-of-type {\\n  margin-bottom: 0;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"] {\\n  display: none;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]+label::after {\\n  content: none;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked+label::after {\\n  border-color: #ffffff;\\n  content: \\\"\\\";\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] input[type=\\\"checkbox\\\"]:checked+label::before {\\n  background: #10bf7a;\\n  border-color: #10bf7a;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label {\\n  position: relative;\\n  display: inline-block;\\n  padding-left: 28px;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::before,\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::after {\\n  position: absolute;\\n  content: \\\"\\\";\\n  display: inline-block;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::before {\\n  height: 16px;\\n  width: 16px;\\n  border: 1px solid #e3e3e3;\\n  background: #ffffff;\\n  left: 0px;\\n  top: 3px;\\n}\\n\\n.formkit-form.pine [data-group=\\\"checkboxes\\\"] [data-group=\\\"checkbox\\\"] label::after {\\n  height: 4px;\\n  width: 8px;\\n  border-left: 2px solid #4d4d4d;\\n  border-bottom: 2px solid #4d4d4d;\\n  -webkit-transform: rotate(-45deg);\\n  -ms-transform: rotate(-45deg);\\n  transform: rotate(-45deg);\\n  left: 4px;\\n  top: 8px;\\n}\\n\\n.formkit-form.pine .formkit-alert {\\n  background: #f9fafb;\\n  border: 1px solid #e3e3e3;\\n  border-radius: 5px;\\n  -webkit-flex: 1 0 auto;\\n  -ms-flex: 1 0 auto;\\n  flex: 1 0 auto;\\n  list-style: none;\\n  margin: 25px auto;\\n  padding: 12px;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.formkit-form.pine .formkit-alert:empty {\\n  display: none;\\n}\\n\\n.formkit-form.pine .formkit-alert-success {\\n  background: #d3fbeb;\\n  border-color: #10bf7a;\\n  color: #0c905c;\\n}\\n\\n.formkit-form.pine .formkit-alert-error {\\n  background: #fde8e2;\\n  border-color: #f2643b;\\n  color: #ea4110;\\n}\\n\\n.formkit-form.pine .formkit-spinner {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  height: 0px;\\n  width: 0px;\\n  margin: 0 auto;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: 0px;\\n  overflow: hidden;\\n  text-align: center;\\n  -webkit-transition: all 300ms ease-in-out;\\n  transition: all 300ms ease-in-out;\\n}\\n\\n.formkit-form.pine .formkit-spinner>div {\\n  margin: auto;\\n  width: 12px;\\n  height: 12px;\\n  background-color: #fff;\\n  opacity: 0.3;\\n  border-radius: 100%;\\n  display: inline-block;\\n  -webkit-animation: formkit-bouncedelay-formkit-form-data-uid-f9bb1fbad8- 1.4s infinite ease-in-out both;\\n  animation: formkit-bouncedelay-formkit-form-data-uid-f9bb1fbad8- 1.4s infinite ease-in-out both;\\n}\\n\\n.formkit-form.pine .formkit-spinner>div:nth-child(1) {\\n  -webkit-animation-delay: -0.32s;\\n  animation-delay: -0.32s;\\n}\\n\\n.formkit-form.pine .formkit-spinner>div:nth-child(2) {\\n  -webkit-animation-delay: -0.16s;\\n  animation-delay: -0.16s;\\n}\\n\\n.formkit-form.pine .formkit-submit[data-active] .formkit-spinner {\\n  opacity: 1;\\n  height: 100%;\\n  width: 50px;\\n}\\n\\n.formkit-form.pine .formkit-submit[data-active] .formkit-spinner~span {\\n  opacity: 0;\\n}\\n\\n.formkit-form.pine .formkit-powered-by[data-active=\\\"false\\\"] {\\n  opacity: 0.35;\\n}\\n\\n.formkit-form.pine .formkit-powered-by-convertkit-container {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  width: 100%;\\n  z-index: 5;\\n  margin: 10px 0;\\n  position: relative;\\n}\\n\\n.formkit-form.pine .formkit-powered-by-convertkit-container[data-active=\\\"false\\\"] {\\n  opacity: 0.35;\\n}\\n\\n.formkit-form.pine .formkit-powered-by-convertkit {\\n  -webkit-align-items: center;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n  background-color: #ffffff;\\n  border: 1px solid #dce1e5;\\n  border-radius: 4px;\\n  color: #373f45;\\n  cursor: pointer;\\n  display: block;\\n  height: 36px;\\n  margin: 0 auto;\\n  opacity: 0.95;\\n  -webkit-text-decoration: none;\\n  text-decoration: none;\\n  text-indent: 100%;\\n  -webkit-transition: ease-in-out all 200ms;\\n  transition: ease-in-out all 200ms;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  width: 190px;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg width='162' height='20' viewBox='0 0 162 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M83.0561 15.2457C86.675 15.2457 89.4722 12.5154 89.4722 9.14749C89.4722 5.99211 86.8443 4.06563 85.1038 4.06563C82.6801 4.06563 80.7373 5.76407 80.4605 8.28551C80.4092 8.75244 80.0387 9.14403 79.5686 9.14069C78.7871 9.13509 77.6507 9.12841 76.9314 9.13092C76.6217 9.13199 76.3658 8.88106 76.381 8.57196C76.4895 6.38513 77.2218 4.3404 78.618 2.76974C80.1695 1.02445 82.4289 0 85.1038 0C89.5979 0 93.8406 4.07791 93.8406 9.14749C93.8406 14.7608 89.1832 19.3113 83.1517 19.3113C78.8502 19.3113 74.5179 16.5041 73.0053 12.5795C72.9999 12.565 72.9986 12.5492 73.0015 12.534C73.0218 12.4179 73.0617 12.3118 73.1011 12.2074C73.1583 12.0555 73.2143 11.907 73.2062 11.7359L73.18 11.1892C73.174 11.0569 73.2075 10.9258 73.2764 10.8127C73.3452 10.6995 73.4463 10.6094 73.5666 10.554L73.7852 10.4523C73.9077 10.3957 74.0148 10.3105 74.0976 10.204C74.1803 10.0974 74.2363 9.97252 74.2608 9.83983C74.3341 9.43894 74.6865 9.14749 75.0979 9.14749C75.7404 9.14749 76.299 9.57412 76.5088 10.1806C77.5188 13.1 79.1245 15.2457 83.0561 15.2457Z' fill='%23373F45'/%3E%3Cpath d='M155.758 6.91365C155.028 6.91365 154.804 6.47916 154.804 5.98857C154.804 5.46997 154.986 5.06348 155.758 5.06348C156.53 5.06348 156.712 5.46997 156.712 5.98857C156.712 6.47905 156.516 6.91365 155.758 6.91365ZM142.441 12.9304V9.32833L141.415 9.32323V8.90392C141.415 8.44719 141.786 8.07758 142.244 8.07986L142.441 8.08095V6.55306L144.082 6.09057V8.08073H145.569V8.50416C145.569 8.61242 145.548 8.71961 145.506 8.81961C145.465 8.91961 145.404 9.01047 145.328 9.08699C145.251 9.16351 145.16 9.2242 145.06 9.26559C144.96 9.30698 144.853 9.32826 144.745 9.32822H144.082V12.7201C144.082 13.2423 144.378 13.4256 144.76 13.4887C145.209 13.5629 145.583 13.888 145.583 14.343V14.9626C144.029 14.9626 142.441 14.8942 142.441 12.9304Z' fill='%23373F45'/%3E%3Cpath d='M110.058 7.92554C108.417 7.88344 106.396 8.92062 106.396 11.5137C106.396 14.0646 108.417 15.0738 110.058 15.0318C111.742 15.0738 113.748 14.0646 113.748 11.5137C113.748 8.92062 111.742 7.88344 110.058 7.92554ZM110.07 13.7586C108.878 13.7586 108.032 12.8905 108.032 11.461C108.032 10.1013 108.878 9.20569 110.071 9.20569C111.263 9.20569 112.101 10.0995 112.101 11.459C112.101 12.8887 111.263 13.7586 110.07 13.7586Z' fill='%23373F45'/%3E%3Cpath d='M118.06 7.94098C119.491 7.94098 120.978 8.33337 120.978 11.1366V14.893H120.063C119.608 14.893 119.238 14.524 119.238 14.0689V10.9965C119.238 9.66506 118.747 9.16047 117.891 9.16047C117.414 9.16047 116.797 9.52486 116.502 9.81915V14.069C116.502 14.1773 116.481 14.2845 116.44 14.3845C116.398 14.4845 116.337 14.5753 116.261 14.6519C116.184 14.7284 116.093 14.7891 115.993 14.8305C115.893 14.8719 115.786 14.8931 115.678 14.8931H114.847V8.10918H115.773C115.932 8.10914 116.087 8.16315 116.212 8.26242C116.337 8.36168 116.424 8.50033 116.46 8.65577C116.881 8.19328 117.428 7.94098 118.06 7.94098ZM122.854 8.09713C123.024 8.09708 123.19 8.1496 123.329 8.2475C123.468 8.34541 123.574 8.48391 123.631 8.64405L125.133 12.8486L126.635 8.64415C126.692 8.48402 126.798 8.34551 126.937 8.2476C127.076 8.1497 127.242 8.09718 127.412 8.09724H128.598L126.152 14.3567C126.091 14.5112 125.986 14.6439 125.849 14.7374C125.711 14.831 125.549 14.881 125.383 14.8809H124.333L121.668 8.09713H122.854Z' fill='%23373F45'/%3E%3Cpath d='M135.085 14.5514C134.566 14.7616 133.513 15.0416 132.418 15.0416C130.496 15.0416 129.024 13.9345 129.024 11.4396C129.024 9.19701 130.451 7.99792 132.191 7.99792C134.338 7.99792 135.254 9.4378 135.158 11.3979C135.139 11.8029 134.786 12.0983 134.38 12.0983H130.679C130.763 13.1916 131.562 13.7662 132.615 13.7662C133.028 13.7662 133.462 13.7452 133.983 13.6481C134.535 13.545 135.085 13.9375 135.085 14.4985V14.5514ZM133.673 10.949C133.785 9.87621 133.061 9.28752 132.191 9.28752C131.321 9.28752 130.734 9.93979 130.679 10.9489L133.673 10.949Z' fill='%23373F45'/%3E%3Cpath d='M137.345 8.11122C137.497 8.11118 137.645 8.16229 137.765 8.25635C137.884 8.35041 137.969 8.48197 138.005 8.62993C138.566 8.20932 139.268 7.94303 139.759 7.94303C139.801 7.94303 140.068 7.94303 140.489 7.99913V8.7265C140.489 9.11748 140.15 9.4147 139.759 9.4147C139.31 9.4147 138.651 9.5829 138.131 9.8773V14.8951H136.462V8.11112L137.345 8.11122ZM156.6 14.0508V8.09104H155.769C155.314 8.09104 154.944 8.45999 154.944 8.9151V14.8748H155.775C156.23 14.8748 156.6 14.5058 156.6 14.0508ZM158.857 12.9447V9.34254H157.749V8.91912C157.749 8.46401 158.118 8.09506 158.574 8.09506H158.857V6.56739L160.499 6.10479V8.09506H161.986V8.51848C161.986 8.97359 161.617 9.34254 161.161 9.34254H160.499V12.7345C160.499 13.2566 160.795 13.44 161.177 13.503C161.626 13.5774 162 13.9024 162 14.3574V14.977C160.446 14.977 158.857 14.9086 158.857 12.9447ZM98.1929 10.1124C98.2033 6.94046 100.598 5.16809 102.895 5.16809C104.171 5.16809 105.342 5.44285 106.304 6.12953L105.914 6.6631C105.654 7.02011 105.16 7.16194 104.749 6.99949C104.169 6.7702 103.622 6.7218 103.215 6.7218C101.335 6.7218 99.9169 7.92849 99.9068 10.1123C99.9169 12.2959 101.335 13.5201 103.215 13.5201C103.622 13.5201 104.169 13.4717 104.749 13.2424C105.16 13.0799 105.654 13.2046 105.914 13.5615L106.304 14.0952C105.342 14.7819 104.171 15.0566 102.895 15.0566C100.598 15.0566 98.2033 13.2842 98.1929 10.1124ZM147.619 5.21768C148.074 5.21768 148.444 5.58663 148.444 6.04174V9.81968L151.82 5.58131C151.897 5.47733 151.997 5.39282 152.112 5.3346C152.227 5.27638 152.355 5.24607 152.484 5.24611H153.984L150.166 10.0615L153.984 14.8749H152.484C152.355 14.8749 152.227 14.8446 152.112 14.7864C151.997 14.7281 151.897 14.6436 151.82 14.5397L148.444 10.3025V14.0508C148.444 14.5059 148.074 14.8749 147.619 14.8749H146.746V5.21768H147.619Z' fill='%23373F45'/%3E%3Cpath d='M0.773438 6.5752H2.68066C3.56543 6.5752 4.2041 6.7041 4.59668 6.96191C4.99219 7.21973 5.18994 7.62695 5.18994 8.18359C5.18994 8.55859 5.09326 8.87061 4.8999 9.11963C4.70654 9.36865 4.42822 9.52539 4.06494 9.58984V9.63379C4.51611 9.71875 4.84717 9.88721 5.05811 10.1392C5.27197 10.3882 5.37891 10.7266 5.37891 11.1543C5.37891 11.7314 5.17676 12.1841 4.77246 12.5122C4.37109 12.8374 3.81152 13 3.09375 13H0.773438V6.5752ZM1.82373 9.22949H2.83447C3.27393 9.22949 3.59473 9.16064 3.79688 9.02295C3.99902 8.88232 4.1001 8.64502 4.1001 8.31104C4.1001 8.00928 3.99023 7.79102 3.77051 7.65625C3.55371 7.52148 3.20801 7.4541 2.7334 7.4541H1.82373V9.22949ZM1.82373 10.082V12.1167H2.93994C3.37939 12.1167 3.71045 12.0332 3.93311 11.8662C4.15869 11.6963 4.27148 11.4297 4.27148 11.0664C4.27148 10.7324 4.15723 10.4849 3.92871 10.3237C3.7002 10.1626 3.35303 10.082 2.88721 10.082H1.82373Z' fill='%23373F45'/%3E%3Cpath d='M13.011 6.5752V10.7324C13.011 11.207 12.9084 11.623 12.7034 11.9805C12.5012 12.335 12.2068 12.6089 11.8201 12.8022C11.4363 12.9927 10.9763 13.0879 10.4402 13.0879C9.6433 13.0879 9.02368 12.877 8.5813 12.4551C8.13892 12.0332 7.91772 11.4531 7.91772 10.7148V6.5752H8.9724V10.6401C8.9724 11.1704 9.09546 11.5615 9.34155 11.8135C9.58765 12.0654 9.96557 12.1914 10.4753 12.1914C11.4656 12.1914 11.9607 11.6714 11.9607 10.6313V6.5752H13.011Z' fill='%23373F45'/%3E%3Cpath d='M15.9146 13V6.5752H16.9649V13H15.9146Z' fill='%23373F45'/%3E%3Cpath d='M19.9255 13V6.5752H20.9758V12.0991H23.696V13H19.9255Z' fill='%23373F45'/%3E%3Cpath d='M28.2828 13H27.2325V7.47607H25.3428V6.5752H30.1724V7.47607H28.2828V13Z' fill='%23373F45'/%3E%3Cpath d='M41.9472 13H40.8046L39.7148 9.16796C39.6679 9.00097 39.6093 8.76074 39.539 8.44727C39.4687 8.13086 39.4262 7.91113 39.4116 7.78809C39.3823 7.97559 39.3339 8.21875 39.2665 8.51758C39.2021 8.81641 39.1479 9.03905 39.1039 9.18554L38.0405 13H36.8979L36.0673 9.7832L35.2236 6.5752H36.2958L37.2143 10.3193C37.3578 10.9199 37.4604 11.4502 37.5219 11.9102C37.5541 11.6611 37.6025 11.3828 37.6669 11.0752C37.7314 10.7676 37.79 10.5186 37.8427 10.3281L38.8886 6.5752H39.9301L41.0024 10.3457C41.1049 10.6943 41.2133 11.2158 41.3276 11.9102C41.3715 11.4912 41.477 10.958 41.644 10.3105L42.558 6.5752H43.6215L41.9472 13Z' fill='%23373F45'/%3E%3Cpath d='M45.7957 13V6.5752H46.846V13H45.7957Z' fill='%23373F45'/%3E%3Cpath d='M52.0258 13H50.9755V7.47607H49.0859V6.5752H53.9155V7.47607H52.0258V13Z' fill='%23373F45'/%3E%3Cpath d='M61.2312 13H60.1765V10.104H57.2146V13H56.1643V6.5752H57.2146V9.20312H60.1765V6.5752H61.2312V13Z' fill='%23373F45'/%3E%3C/svg%3E\\\");\\n}\\n\\n.formkit-form.pine .formkit-powered-by-convertkit:hover,\\n.formkit-form.pine .formkit-powered-by-convertkit:focus {\\n  -webkit-transform: scale(1.025) perspective(1px);\\n  -ms-transform: scale(1.025) perspective(1px);\\n  transform: scale(1.025) perspective(1px);\\n  opacity: 1;\\n}\\n\\n@-webkit-keyframes formkit-bouncedelay-formkit-form-data-uid-f9bb1fbad8- {\\n\\n  0%,\\n  80%,\\n  100% {\\n    -webkit-transform: scale(0);\\n    -ms-transform: scale(0);\\n    transform: scale(0);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n@keyframes formkit-bouncedelay-formkit-form-data-uid-f9bb1fbad8- {\\n\\n  0%,\\n  80%,\\n  100% {\\n    -webkit-transform: scale(0);\\n    -ms-transform: scale(0);\\n    transform: scale(0);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n\\n.formkit-form.pine blockquote {\\n  padding: 10px 20px;\\n  margin: 0 0 20px;\\n  border-left: 5px solid #e1e1e1;\\n}\\n\\n.formkit-form.pine {\\n  box-shadow: 0 2px 15px 0 rgba(210, 214, 220, 0.5);\\n  max-width: 700px;\\n  overflow: hidden;\\n}\\n\\n.formkit-form.pine [data-style=\\\"full\\\"] {\\n  width: 100%;\\n  display: block;\\n}\\n\\n.formkit-form.pine .formkit-header {\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n}\\n\\n.formkit-form.pine .formkit-subheader {\\n  margin: 15px 0;\\n}\\n\\n.formkit-form.pine .formkit-column {\\n  padding: 20px;\\n  position: relative;\\n}\\n\\n.formkit-form.pine .formkit-column:nth-child(2) {\\n  border-top: 1px solid #e9ecef;\\n}\\n\\n.formkit-form.pine .formkit-background {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  background-size: cover;\\n  background-position: center;\\n  opacity: 0.5;\\n  z-index: 1;\\n}\\n\\n.formkit-form.pine .formkit-header,\\n.formkit-form.pine .formkit-subheader,\\n.formkit-form.pine .formkit-image {\\n  z-index: 2;\\n  position: relative;\\n}\\n\\n.formkit-form.pine .formkit-field {\\n  margin: 0 0 15px 0;\\n}\\n\\n.formkit-form.pine .formkit-input,\\n.formkit-form.pine .formkit-submit {\\n  width: 100%;\\n}\\n\\n.formkit-form.pine .formkit-guarantee {\\n  font-size: 13px;\\n  margin: 0 0 15px 0;\\n}\\n\\n.formkit-form.pine .formkit-guarantee>p {\\n  margin: 0;\\n}\\n\\n.formkit-form.pine .formkit-powered-by {\\n  color: #7d7d7d;\\n  display: block;\\n  font-size: 12px;\\n  margin-bottom: 0;\\n}\\n\\n.formkit-form.pine[min-width~=\\\"600\\\"] [data-style=\\\"full\\\"],\\n.formkit-form.pine[min-width~=\\\"700\\\"] [data-style=\\\"full\\\"],\\n.formkit-form.pine[min-width~=\\\"800\\\"] [data-style=\\\"full\\\"] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n}\\n\\n.formkit-form.pine[min-width~=\\\"600\\\"] .formkit-submit,\\n.formkit-form.pine[min-width~=\\\"700\\\"] .formkit-submit,\\n.formkit-form.pine[min-width~=\\\"800\\\"] .formkit-submit {\\n  width: 100%;\\n}\\n\\n.formkit-form.pine[min-width~=\\\"600\\\"] .formkit-column,\\n.formkit-form.pine[min-width~=\\\"700\\\"] .formkit-column,\\n.formkit-form.pine[min-width~=\\\"800\\\"] .formkit-column {\\n  padding: 40px;\\n}\\n\\n.formkit-form.pine[min-width~=\\\"600\\\"] .formkit-column:nth-child(2),\\n.formkit-form.pine[min-width~=\\\"700\\\"] .formkit-column:nth-child(2),\\n.formkit-form.pine[min-width~=\\\"800\\\"] .formkit-column:nth-child(2) {\\n  border-top: none;\\n}\\n\";\ninjector_bf1ba7e0(css_1fb7599d,{\"singleTag\":true});\n\nvar ALLOWED_FORMATS$5 = ['inline', 'modal', 'slide in'];\nvar bgImage$3 = '//pages.convertkit.com/assets/rainier/bg.jpg';\n\nfunction Pine(_ref) {\n  var options = _ref.options,\n      className = _ref.className,\n      action = _ref.action,\n      submitText = _ref.submitText,\n      emailPlaceholder = _ref.emailPlaceholder,\n      namePlaceholder = _ref.namePlaceholder,\n      hideName = _ref.hideName,\n      showLabels = _ref.showLabels,\n      nameLabel = _ref.nameLabel,\n      emailLabel = _ref.emailLabel,\n      newTab = _ref.newTab,\n      formId = _ref.formId,\n      format = _ref.format,\n      hideWarnings = _ref.hideWarnings;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, !hideWarnings && !ALLOWED_FORMATS$5.includes(format) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Warning, {\n    message: \"This template is not available for the chosen format\"\n  }) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"form\", {\n    action: action,\n    className: \"seva-form formkit-form pine \".concat(className),\n    method: \"post\",\n    target: newTab ? '_blank' : '_self',\n    \"data-sv-form\": formId,\n    \"data-uid\": options.uid,\n    \"data-format\": format,\n    \"data-version\": options.version,\n    \"data-options\": JSON.stringify(options),\n    \"min-width\": \"400 500 600 700 800\",\n    style: {\n      backgroundColor: 'rgb(255, 255, 255)',\n      borderRadius: '6px'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-style\": \"full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"column\",\n    className: \"formkit-column\",\n    style: {\n      backgroundColor: 'rgb(249, 250, 251)'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-background\",\n    style: {\n      opacity: 0.3\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-header\",\n    \"data-element\": \"header\",\n    style: {\n      color: 'rgb(77, 77, 77)',\n      fontSize: '20px',\n      fontWeight: 700\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h1\", null, \"Join the Newsletter\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-subheader\",\n    \"data-element\": \"subheader\",\n    style: {\n      color: 'rgb(104, 104, 104)',\n      fontSize: '15px'\n    }\n  }, \"Subscribe to get our latest content by email.\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-image formkit-image relative focus:outline-none\",\n    role: \"button\",\n    tabIndex: \"0\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"img\", {\n    className: \"cursor-pointer focus:outline-blue \",\n    src: bgImage$3,\n    alt: \"\",\n    style: {\n      maxWidth: '100%'\n    }\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"column\",\n    className: \"formkit-column\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"ul\", {\n    className: \"formkit-alert formkit-alert-error\",\n    \"data-element\": \"errors\",\n    \"data-group\": \"alert\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    \"data-element\": \"fields\",\n    className: \"seva-fields formkit-fields\"\n  }, !hideName && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-first-name\"\n  }, nameLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": nameLabel,\n    name: \"fields[first_name]\",\n    placeholder: namePlaceholder,\n    type: \"text\",\n    style: {\n      color: 'rgb(0, 0, 0)',\n      borderColor: 'rgb(227, 227, 227)',\n      borderRadius: '4px',\n      fontWeight: 400\n    },\n    id: \"ck-first-name\"\n  }))), showLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"label\", {\n    htmlFor: \"ck-email\"\n  }, emailLabel) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n    className: \"formkit-input\",\n    \"aria-label\": emailLabel,\n    name: \"email_address\",\n    placeholder: emailPlaceholder,\n    required: true,\n    type: \"email\",\n    style: {\n      color: 'rgb(0, 0, 0)',\n      borderColor: 'rgb(227, 227, 227)',\n      borderRadius: '4px',\n      fontWeight: 400\n    },\n    id: \"ck-email\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n    \"data-element\": \"submit\",\n    className: \"formkit-submit\",\n    style: {\n      color: 'rgb(255, 255, 255)',\n      backgroundColor: 'rgb(22, 119, 190)',\n      borderRadius: '24px',\n      fontWeight: 700\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-spinner\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, submitText))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"formkit-guarantee\",\n    \"data-element\": \"guarantee\",\n    style: {\n      color: 'rgb(77, 77, 77)',\n      fontSize: '13px',\n      fontWeight: 400\n    }\n  }, \"We respect your privacy. Unsubscribe at any time.\"), options.settings.powered_by.show ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", {\n    href: options.settings.powered_by.url,\n    className: \"formkit-powered-by\",\n    \"data-element\": \"powered-by\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"Powered By ConvertKit\") : null))));\n}\n\nvar options = {\n  settings: {\n    after_subscribe: {\n      action: 'message',\n      success_message: 'Success! Now check your email to confirm your subscription.',\n      redirect_url: ''\n    },\n    analytics: {\n      google: null,\n      facebook: null,\n      segment: null,\n      pinterest: null\n    },\n    modal: {\n      trigger: 'timer',\n      scroll_percentage: null,\n      timer: 5,\n      devices: 'all',\n      show_once_every: 15\n    },\n    powered_by: {\n      show: true,\n      url: 'https://convertkit.com?utm_source=dynamic&amp;utm_medium=referral&amp;utm_campaign=poweredby&amp;utm_content=form'\n    },\n    recaptcha: {\n      enabled: false\n    },\n    return_visitor: {\n      action: 'show',\n      custom_content: ''\n    },\n    slide_in: {\n      display_in: 'bottom_right',\n      trigger: 'timer',\n      scroll_percentage: null,\n      timer: 5,\n      devices: 'all',\n      show_once_every: 15\n    },\n    sticky_bar: {\n      display_in: 'top',\n      trigger: 'timer',\n      scroll_percentage: null,\n      timer: 5,\n      devices: 'all',\n      show_once_every: 15\n    }\n  },\n  uid: '',\n  version: '5'\n};\n\nvar renderTemplate = function renderTemplate(template) {\n  var templateName = template.toLowerCase();\n  var allTemplates = {\n    minimal: Minimal,\n    clare: Clare,\n    mills: Mills,\n    rainier: Rainier,\n    powell: Powell,\n    charlotte: Charlotte,\n    pine: Pine\n  };\n\n  if (!allTemplates.hasOwnProperty(templateName)) {\n    var errorMessage = \"The chosen template \\\"\".concat(template, \"\\\" is not yet supported\");\n    throw new ReferenceError(errorMessage);\n  }\n\n  return allTemplates[templateName];\n};\n\nfunction useTemplate(template) {\n  return {\n    options: options,\n    Template: renderTemplate(template)\n  };\n}\n\n// derive data-uid of user\n\nfunction useAppFormat(format) {\n  switch (format) {\n    case 'slidein':\n      return 'slide in';\n\n    case 'sticky':\n      return 'sticky bar';\n\n    default:\n      return format;\n  }\n}\n\nfunction Form(_ref) {\n  var template = _ref.template,\n      format = _ref.format,\n      props = _objectWithoutProperties(_ref, [\"template\", \"format\"]);\n\n  var _useTemplate = useTemplate(template),\n      options = _useTemplate.options,\n      Template = _useTemplate.Template;\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"script\", {\n    src: \"https://f.convertkit.com/ckjs/ck.5.js\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Template, _extends({}, props, {\n    options: options,\n    format: useAppFormat(format)\n  })));\n}\n\nvar ConvertKitForm = function ConvertKitForm(_ref) {\n  var formId = _ref.formId,\n      props = _objectWithoutProperties(_ref, [\"formId\"]);\n\n  var action = \"https://app.convertkit.com/forms/\".concat(formId, \"/subscriptions\");\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Form, _extends({}, props, {\n    action: action,\n    formId: formId\n  }));\n};\n\nConvertKitForm.propTypes = {\n  format: propTypes.string,\n  template: propTypes.string,\n  formId: propTypes.number.isRequired,\n  submitText: propTypes.string,\n  emailPlaceholder: propTypes.string,\n  namePlaceholder: propTypes.string,\n  nameLabel: propTypes.string,\n  emailLabel: propTypes.string,\n  showLabels: propTypes.bool,\n  hideName: propTypes.bool,\n  newTab: propTypes.bool,\n  stacked: propTypes.bool,\n  hideWarnings: propTypes.bool\n};\nConvertKitForm.defaultProps = {\n  format: 'inline',\n  template: 'minimal',\n  submitText: 'Subscribe',\n  emailPlaceholder: 'Your email',\n  namePlaceholder: 'Your first name',\n  nameLabel: 'First name',\n  emailLabel: 'Email',\n  showLabels: false,\n  hideName: false,\n  newTab: false,\n  stacked: true,\n  hideWarnings: false\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ConvertKitForm);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NvbnZlcnRraXQtcmVhY3QvYmluL2NvbnZlcnRraXQtcmVhY3QuZXNtLmpzPzgxZmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQTBCOztBQUUxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLHNCQUFzQjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSx1QkFBdUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsZUFBZSw2QkFBNkI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsWUFBWSxFQUFFO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE1BQU0sSUFBcUM7QUFDM0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1GQUFtRjtBQUNuRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE9BQU87OztBQUdQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNEOztBQUV0RDtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsTUFBTSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0g7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOzs7QUFHQSxrQ0FBa0M7O0FBRWxDOztBQUVBO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDs7QUFFQSxtQkFBbUIsUUFBUTtBQUMzQjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMLG9DQUFvQztBQUNwQztBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FB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QUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDs7O0FBR0EsbUNBQW1DOztBQUVuQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDtBQUNBO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQTtBQUNBLEtBQUs7OztBQUdMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxJQUFxQztBQUMzQywwQkFBMEI7QUFDMUI7O0FBRUE7QUFDQTtBQUNBLEdBQUcsTUFBTSxFQUlOO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNENBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsNEJBQTRCLDRDQUFLLGVBQWUsNENBQUssMkNBQTJDLDRDQUFLO0FBQ3hHO0FBQ0EsR0FBRyxrQ0FBa0MsNENBQUs7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsOEJBQThCLDRDQUFLO0FBQ3RDO0FBQ0EsR0FBRyxtQ0FBbUMsNENBQUs7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZ0JBQWdCLDRDQUFLO0FBQ3hCO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSx3R0FBd0csY0FBYztBQUN0SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkNBQTZDLDJCQUEyQixHQUFHLHlCQUF5Qix3Q0FBd0MsdUNBQXVDLEdBQUcsZ0NBQWdDLGlCQUFpQix1QkFBdUIsd0JBQXdCLGVBQWUsdUJBQXVCLG1CQUFtQixHQUFHLGtDQUFrQyxjQUFjLDBCQUEwQixjQUFjLGlCQUFpQixHQUFHLGtFQUFrRSx3QkFBd0IsR0FBRyx5SkFBeUosbUJBQW1CLHVCQUF1Qix5QkFBeUIsR0FBRywyQkFBMkIsbUJBQW1CLHVCQUF1Qix5QkFBeUIsR0FBRyw4SkFBOEoscUJBQXFCLEdBQUcsK1BBQStQLG1CQUFtQix3QkFBd0IsR0FBRyxnREFBZ0Qsa0JBQWtCLEdBQUcsbURBQW1ELGtCQUFrQixHQUFHLHFEQUFxRCxrQkFBa0IsR0FBRyx5RUFBeUUsbUJBQW1CLEdBQUcsd0hBQXdILGdCQUFnQixHQUFHLCtFQUErRSxjQUFjLHVCQUF1QixtQkFBbUIsb0JBQW9CLDBCQUEwQix1QkFBdUIsb0JBQW9CLHFCQUFxQixvQkFBb0Isd0JBQXdCLHFCQUFxQixlQUFlLHVCQUF1QiwyQkFBMkIsR0FBRyxtTEFBbUwsa0JBQWtCLEdBQUcsK01BQStNLHlDQUF5QyxHQUFHLDZGQUE2RixtQkFBbUIsOENBQThDLHNDQUFzQyx1QkFBdUIsR0FBRyx3Q0FBd0Msd0JBQXdCLG9CQUFvQixrQkFBa0IsOEJBQThCLDJCQUEyQix1QkFBdUIsbUJBQW1CLHFCQUFxQixjQUFjLG9EQUFvRCw0Q0FBNEMsR0FBRyw4Q0FBOEMsa0JBQWtCLDBCQUEwQixnREFBZ0Qsd0NBQXdDLEdBQUcsbUVBQW1FLG1CQUFtQixpQkFBaUIsR0FBRywwREFBMEQsbUJBQW1CLGlCQUFpQixHQUFHLDhEQUE4RCxtQkFBbUIsaUJBQWlCLEdBQUcscURBQXFELG1CQUFtQixpQkFBaUIsR0FBRyxrREFBa0QsdUJBQXVCLDBCQUEwQixnQkFBZ0IsR0FBRywwREFBMEQsa0JBQWtCLDJCQUEyQixnQkFBZ0IsdUJBQXVCLHlCQUF5Qiw4REFBOEQsd0JBQXdCLGdDQUFnQyxjQUFjLGFBQWEsaUJBQWlCLEdBQUcseURBQXlELGlCQUFpQixnQkFBZ0Isb0JBQW9CLG1CQUFtQixxQkFBcUIscUJBQXFCLG1CQUFtQiw2QkFBNkIsMEJBQTBCLHFCQUFxQixvQkFBb0Isa0JBQWtCLHdCQUF3Qiw4QkFBOEIsd0JBQXdCLEdBQUcsK0RBQStELGtCQUFrQixHQUFHLG9EQUFvRCxxQkFBcUIsY0FBYyxHQUFHLDZFQUE2RSx3QkFBd0IsR0FBRywrRUFBK0Usb0JBQW9CLEdBQUcsMEZBQTBGLHFCQUFxQixHQUFHLHNHQUFzRyxrQkFBa0IsR0FBRyxxSEFBcUgsa0JBQWtCLEdBQUcsNkhBQTZILDBCQUEwQixrQkFBa0IsR0FBRyw4SEFBOEgsd0JBQXdCLDBCQUEwQixHQUFHLG1GQUFtRix1QkFBdUIsMEJBQTBCLHVCQUF1QixHQUFHLGtMQUFrTCx1QkFBdUIsa0JBQWtCLDBCQUEwQixHQUFHLDJGQUEyRixpQkFBaUIsZ0JBQWdCLDhCQUE4Qix3QkFBd0IsY0FBYyxhQUFhLEdBQUcsMEZBQTBGLGdCQUFnQixlQUFlLG1DQUFtQyxxQ0FBcUMsc0NBQXNDLGtDQUFrQyw4QkFBOEIsY0FBYyxhQUFhLEdBQUcsd0NBQXdDLHdCQUF3Qiw4QkFBOEIsdUJBQXVCLDJCQUEyQix1QkFBdUIsbUJBQW1CLHFCQUFxQixzQkFBc0Isa0JBQWtCLHVCQUF1QixnQkFBZ0IsR0FBRyw4Q0FBOEMsa0JBQWtCLEdBQUcsZ0RBQWdELHdCQUF3QiwwQkFBMEIsbUJBQW1CLEdBQUcsOENBQThDLHdCQUF3QiwwQkFBMEIsbUJBQW1CLEdBQUcsMENBQTBDLHlCQUF5QiwwQkFBMEIseUJBQXlCLGtCQUFrQixnQkFBZ0IsZUFBZSxtQkFBbUIsdUJBQXVCLFdBQVcsWUFBWSxhQUFhLGVBQWUscUJBQXFCLHVCQUF1Qiw4Q0FBOEMsc0NBQXNDLEdBQUcsZ0RBQWdELGlCQUFpQixnQkFBZ0IsaUJBQWlCLDJCQUEyQixpQkFBaUIsd0JBQXdCLDBCQUEwQiw0R0FBNEcsb0dBQW9HLEdBQUcsNkRBQTZELG9DQUFvQyw0QkFBNEIsR0FBRyw2REFBNkQsb0NBQW9DLDRCQUE0QixHQUFHLHVFQUF1RSxlQUFlLGlCQUFpQixnQkFBZ0IsR0FBRyw4RUFBOEUsZUFBZSxHQUFHLG9FQUFvRSxrQkFBa0IsR0FBRyw4RUFBOEUsbUJBQW1CLGtDQUFrQyw4QkFBOEIsMEJBQTBCLEtBQUssU0FBUyxrQ0FBa0MsOEJBQThCLDBCQUEwQixLQUFLLEdBQUcsc0VBQXNFLG1CQUFtQixrQ0FBa0MsOEJBQThCLDBCQUEwQixLQUFLLFNBQVMsa0NBQWtDLDhCQUE4QiwwQkFBMEIsS0FBSyxHQUFHLG9DQUFvQyx1QkFBdUIscUJBQXFCLG1DQUFtQyxHQUFHLHlCQUF5QixxQkFBcUIsR0FBRywrQ0FBK0MsZ0JBQWdCLEdBQUcsaUVBQWlFLHlCQUF5QiwwQkFBMEIseUJBQXlCLGtCQUFrQiw0QkFBNEIsd0JBQXdCLG9CQUFvQixtQkFBbUIsR0FBRyw4RUFBOEUsdUJBQXVCLDJCQUEyQix1QkFBdUIsbUJBQW1CLEdBQUcsNkNBQTZDLG1CQUFtQixtQkFBbUIsb0JBQW9CLGNBQWMsdUJBQXVCLEdBQUcsbUlBQW1JLGtCQUFrQixHQUFHLHVLQUF1SyxzQkFBc0IsdUJBQXVCLEdBQUcseVlBQXlZLDJCQUEyQixHQUFHLHFNQUFxTSw2QkFBNkIseUJBQXlCLHFCQUFxQixHQUFHLHFNQUFxTSwyQkFBMkIsdUJBQXVCLG1CQUFtQixHQUFHO0FBQy9pVyxnQ0FBZ0MsaUJBQWlCOztBQUVqRDtBQUNBO0FBQ0Esc0JBQXNCLDRDQUFLO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw0Q0FBSyxlQUFlLDRDQUFLLG1GQUFtRiw0Q0FBSztBQUN2STtBQUNBLEdBQUcsdUJBQXVCLDRDQUFLO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRywrZkFBK2YsNENBQUs7QUFDdmdCO0FBQ0EsR0FBRyxlQUFlLDRDQUFLO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZ0JBQWdCLDRDQUFLO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLEdBQUcsNEJBQTRCLDRDQUFLLGVBQWUsNENBQUssMkNBQTJDLDRDQUFLO0FBQ3hHO0FBQ0EsR0FBRyxrQ0FBa0MsNENBQUs7QUFDMUM7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHLCtCQUErQiw0Q0FBSztBQUN2QztBQUNBLEdBQUcsbUNBQW1DLDRDQUFLO0FBQzNDO0FBQ0EsR0FBRyxlQUFlLDRDQUFLO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHLGlCQUFpQiw0Q0FBSztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxlQUFlLDRDQUFLO0FBQ3ZCO0FBQ0EsR0FBRyxlQUFlLDRDQUFLLDBDQUEwQyw0Q0FBSywwQ0FBMEMsNENBQUssMkNBQTJDLDRDQUFLLDRGQUE0Riw0Q0FBSztBQUN0UTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLDZDQUE2QywyQkFBMkIsR0FBRyx5QkFBeUIsd0NBQXdDLHVDQUF1QyxHQUFHLGdDQUFnQyxpQkFBaUIsdUJBQXVCLHdCQUF3QixlQUFlLHVCQUF1QixtQkFBbUIsR0FBRyxrQ0FBa0MsY0FBYywwQkFBMEIsY0FBYyxpQkFBaUIsR0FBRyxrRUFBa0Usd0JBQXdCLEdBQUcseUpBQXlKLG1CQUFtQix1QkFBdUIseUJBQXlCLEdBQUcsMkJBQTJCLG1CQUFtQix1QkFBdUIseUJBQXlCLEdBQUcsOEpBQThKLHFCQUFxQixHQUFHLCtQQUErUCxtQkFBbUIsd0JBQXdCLEdBQUcsZ0RBQWdELGtCQUFrQixHQUFHLG1EQUFtRCxrQkFBa0IsR0FBRyxxREFBcUQsa0JBQWtCLEdBQUcseUVBQXlFLG1CQUFtQixHQUFHLHdIQUF3SCxnQkFBZ0IsR0FBRywrRUFBK0UsY0FBYyx1QkFBdUIsbUJBQW1CLG9CQUFvQiwwQkFBMEIsdUJBQXVCLG9CQUFvQixxQkFBcUIsb0JBQW9CLHdCQUF3QixxQkFBcUIsZUFBZSx1QkFBdUIsMkJBQTJCLEdBQUcsbUxBQW1MLGtCQUFrQixHQUFHLHVNQUF1TSx5Q0FBeUMsR0FBRyx5RkFBeUYsbUJBQW1CLDhDQUE4QyxzQ0FBc0MsdUJBQXVCLEdBQUcsd0NBQXdDLHdCQUF3QixvQkFBb0Isa0JBQWtCLDhCQUE4QiwyQkFBMkIsdUJBQXVCLG1CQUFtQixxQkFBcUIsY0FBYyxvREFBb0QsNENBQTRDLEdBQUcsOENBQThDLGtCQUFrQiwwQkFBMEIsZ0RBQWdELHdDQUF3QyxHQUFHLG1FQUFtRSxtQkFBbUIsaUJBQWlCLEdBQUcsMERBQTBELG1CQUFtQixpQkFBaUIsR0FBRyw4REFBOEQsbUJBQW1CLGlCQUFpQixHQUFHLHFEQUFxRCxtQkFBbUIsaUJBQWlCLEdBQUcsbURBQW1ELHVCQUF1QiwwQkFBMEIsZ0JBQWdCLEdBQUcsMkRBQTJELGtCQUFrQiwyQkFBMkIsZ0JBQWdCLHVCQUF1Qix5QkFBeUIsOERBQThELHdCQUF3QixnQ0FBZ0MsY0FBYyxhQUFhLGlCQUFpQixHQUFHLDBEQUEwRCxpQkFBaUIsZ0JBQWdCLG9CQUFvQixtQkFBbUIscUJBQXFCLHFCQUFxQixtQkFBbUIsNkJBQTZCLDBCQUEwQixxQkFBcUIsb0JBQW9CLGtCQUFrQix3QkFBd0IsOEJBQThCLHdCQUF3QixHQUFHLGdFQUFnRSxrQkFBa0IsR0FBRyxxREFBcUQscUJBQXFCLGNBQWMsR0FBRywrRUFBK0Usd0JBQXdCLEdBQUcsaUZBQWlGLG9CQUFvQixHQUFHLDRGQUE0RixxQkFBcUIsR0FBRyx3R0FBd0csa0JBQWtCLEdBQUcscUhBQXFILGtCQUFrQixHQUFHLDZIQUE2SCwwQkFBMEIsa0JBQWtCLEdBQUcsOEhBQThILHdCQUF3QiwwQkFBMEIsR0FBRyxxRkFBcUYsdUJBQXVCLDBCQUEwQix1QkFBdUIsR0FBRyxzTEFBc0wsdUJBQXVCLGtCQUFrQiwwQkFBMEIsR0FBRyw2RkFBNkYsaUJBQWlCLGdCQUFnQiw4QkFBOEIsd0JBQXdCLGNBQWMsYUFBYSxHQUFHLDRGQUE0RixnQkFBZ0IsZUFBZSxtQ0FBbUMscUNBQXFDLHNDQUFzQyxrQ0FBa0MsOEJBQThCLGNBQWMsYUFBYSxHQUFHLHdDQUF3Qyx3QkFBd0IsOEJBQThCLHVCQUF1QiwyQkFBMkIsdUJBQXVCLG1CQUFtQixxQkFBcUIsc0JBQXNCLGtCQUFrQix1QkFBdUIsZ0JBQWdCLEdBQUcsOENBQThDLGtCQUFrQixHQUFHLGdEQUFnRCx3QkFBd0IsMEJBQTBCLG1CQUFtQixHQUFHLDhDQUE4Qyx3QkFBd0IsMEJBQTBCLG1CQUFtQixHQUFHLDBDQUEwQyx5QkFBeUIsMEJBQTBCLHlCQUF5QixrQkFBa0IsZ0JBQWdCLGVBQWUsbUJBQW1CLHVCQUF1QixXQUFXLFlBQVksYUFBYSxlQUFlLHFCQUFxQix1QkFBdUIsOENBQThDLHNDQUFzQyxHQUFHLDhDQUE4QyxpQkFBaUIsZ0JBQWdCLGlCQUFpQiwyQkFBMkIsaUJBQWlCLHdCQUF3QiwwQkFBMEIsNEdBQTRHLG9HQUFvRyxHQUFHLDJEQUEyRCxvQ0FBb0MsNEJBQTRCLEdBQUcsMkRBQTJELG9DQUFvQyw0QkFBNEIsR0FBRyx1RUFBdUUsZUFBZSxpQkFBaUIsZ0JBQWdCLEdBQUcsNEVBQTRFLGVBQWUsR0FBRyxvRUFBb0Usa0JBQWtCLEdBQUcsa0VBQWtFLHlCQUF5QiwwQkFBMEIseUJBQXlCLGtCQUFrQixnQkFBZ0IsZUFBZSxtQkFBbUIsdUJBQXVCLEdBQUcseUZBQXlGLGtCQUFrQixHQUFHLHdEQUF3RCxnQ0FBZ0MsOEJBQThCLDJCQUEyQix3QkFBd0IsOEJBQThCLDhCQUE4Qix1QkFBdUIsbUJBQW1CLG9CQUFvQixtQkFBbUIsaUJBQWlCLG1CQUFtQixrQkFBa0Isa0NBQWtDLDBCQUEwQixzQkFBc0IsOENBQThDLHNDQUFzQyx3QkFBd0IscUJBQXFCLDhCQUE4QiwyQkFBMkIsMEJBQTBCLHNCQUFzQixpQkFBaUIsaUNBQWlDLGdDQUFnQywrQ0FBK0Msb3FRQUFvcVEsR0FBRyx5SEFBeUgscURBQXFELGlEQUFpRCw2Q0FBNkMsZUFBZSxHQUFHLDhFQUE4RSwyQkFBMkIsa0NBQWtDLDhCQUE4QiwwQkFBMEIsS0FBSyxXQUFXLGtDQUFrQyw4QkFBOEIsMEJBQTBCLEtBQUssR0FBRyxzRUFBc0UsMkJBQTJCLGtDQUFrQyw4QkFBOEIsMEJBQTBCLEtBQUssV0FBVyxrQ0FBa0MsOEJBQThCLDBCQUEwQixLQUFLLEdBQUcsb0NBQW9DLHVCQUF1QixxQkFBcUIsbUNBQW1DLEdBQUcseUJBQXlCLDhCQUE4QixxQkFBcUIsdUJBQXVCLHFCQUFxQixHQUFHLDZDQUE2QyxnQkFBZ0IsaUJBQWlCLHVCQUF1QixXQUFXLFlBQVksMkJBQTJCLGdDQUFnQyxpQkFBaUIsR0FBRyxrREFBa0Qsa0JBQWtCLGdCQUFnQix1QkFBdUIsR0FBRyx5Q0FBeUMsdUJBQXVCLEdBQUcsNENBQTRDLG1CQUFtQix1QkFBdUIsR0FBRyw0Q0FBNEMsb0JBQW9CLDBCQUEwQix1QkFBdUIsR0FBRyw4Q0FBOEMsY0FBYyxHQUFHLDZDQUE2QyxtQkFBbUIsbUJBQW1CLG9CQUFvQix1QkFBdUIsdUJBQXVCLEdBQUcsaUVBQWlFLHlCQUF5QiwwQkFBMEIseUJBQXlCLGtCQUFrQiw0QkFBNEIsd0JBQXdCLG9CQUFvQiw2QkFBNkIsR0FBRyw4RUFBOEUsdUJBQXVCLDJCQUEyQix1QkFBdUIsbUJBQW1CLEdBQUcsc0VBQXNFLGtCQUFrQixHQUFHLHFGQUFxRixzQkFBc0IsdUJBQXVCLEdBQUcsc01BQXNNLDJCQUEyQixHQUFHLG9HQUFvRyw2QkFBNkIseUJBQXlCLHFCQUFxQixHQUFHLHFHQUFxRywyQkFBMkIsdUJBQXVCLG1CQUFtQixHQUFHO0FBQzl4cEIsZ0NBQWdDLGlCQUFpQjs7QUFFakQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNENBQUssZUFBZSw0Q0FBSyxxRkFBcUYsNENBQUs7QUFDekk7QUFDQSxHQUFHLHVCQUF1Qiw0Q0FBSztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxlQUFlLDRDQUFLO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxnQkFBZ0IsNENBQUs7QUFDeEI7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZUFBZSw0Q0FBSyxpRUFBaUUsNENBQUs7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxpRUFBaUUsNENBQUs7QUFDekU7QUFDQTtBQUNBO0FBQ0EsR0FBRyxnQkFBZ0IsNENBQUs7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsR0FBRyw0QkFBNEIsNENBQUssZUFBZSw0Q0FBSywyQ0FBMkMsNENBQUs7QUFDeEc7QUFDQSxHQUFHLGtDQUFrQyw0Q0FBSztBQUMxQztBQUNBLEdBQUcsZUFBZSw0Q0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUcsK0JBQStCLDRDQUFLO0FBQ3ZDO0FBQ0EsR0FBRyxtQ0FBbUMsNENBQUs7QUFDM0M7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUcsaUJBQWlCLDRDQUFLO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQSxHQUFHLGVBQWUsNENBQUssMENBQTBDLDRDQUFLLDBDQUEwQyw0Q0FBSywyQ0FBMkMsNENBQUsseURBQXlELDRDQUFLO0FBQ25PO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyx1R0FBdUcsNENBQUs7QUFDL0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSwrQ0FBK0MsMkJBQTJCLEdBQUcsMkJBQTJCLHdDQUF3Qyx1Q0FBdUMsZ0JBQWdCLEdBQUcsa0NBQWtDLGlCQUFpQix1QkFBdUIsd0JBQXdCLGVBQWUsdUJBQXVCLG1CQUFtQixHQUFHLG9DQUFvQyxjQUFjLDBCQUEwQixjQUFjLGlCQUFpQixHQUFHLG9FQUFvRSx3QkFBd0IsR0FBRyxxS0FBcUssbUJBQW1CLHVCQUF1Qix5QkFBeUIsR0FBRyw2QkFBNkIsbUJBQW1CLHVCQUF1Qix5QkFBeUIsR0FBRyxvS0FBb0sscUJBQXFCLEdBQUcseVFBQXlRLG1CQUFtQix3QkFBd0IsR0FBRyxrREFBa0Qsa0JBQWtCLEdBQUcscURBQXFELGtCQUFrQixHQUFHLHVEQUF1RCxrQkFBa0IsR0FBRywyRUFBMkUsbUJBQW1CLEdBQUcsOEhBQThILGdCQUFnQixHQUFHLG1GQUFtRixjQUFjLHVCQUF1QixtQkFBbUIsb0JBQW9CLDBCQUEwQix1QkFBdUIsb0JBQW9CLHFCQUFxQixvQkFBb0Isd0JBQXdCLHFCQUFxQixlQUFlLHVCQUF1QiwyQkFBMkIsR0FBRywyTEFBMkwsa0JBQWtCLEdBQUcsK01BQStNLHlDQUF5QyxHQUFHLDZGQUE2RixtQkFBbUIsOENBQThDLHNDQUFzQyx1QkFBdUIsR0FBRywwQ0FBMEMsd0JBQXdCLG9CQUFvQixrQkFBa0IsOEJBQThCLDJCQUEyQix1QkFBdUIsbUJBQW1CLHFCQUFxQixjQUFjLG9EQUFvRCw0Q0FBNEMsR0FBRyxnREFBZ0Qsa0JBQWtCLDBCQUEwQixnREFBZ0Qsd0NBQXdDLEdBQUcscUVBQXFFLG1CQUFtQixpQkFBaUIsR0FBRyw0REFBNEQsbUJBQW1CLGlCQUFpQixHQUFHLGdFQUFnRSxtQkFBbUIsaUJBQWlCLEdBQUcsdURBQXVELG1CQUFtQixpQkFBaUIsR0FBRyxxREFBcUQsdUJBQXVCLDBCQUEwQixnQkFBZ0IsR0FBRyw2REFBNkQsa0JBQWtCLDJCQUEyQixnQkFBZ0IsdUJBQXVCLHlCQUF5Qiw4REFBOEQsd0JBQXdCLGdDQUFnQyxjQUFjLGFBQWEsaUJBQWlCLEdBQUcsNERBQTRELGlCQUFpQixnQkFBZ0Isb0JBQW9CLG1CQUFtQixxQkFBcUIscUJBQXFCLG1CQUFtQiw2QkFBNkIsMEJBQTBCLHFCQUFxQixvQkFBb0Isa0JBQWtCLHdCQUF3Qiw4QkFBOEIsd0JBQXdCLEdBQUcsa0VBQWtFLGtCQUFrQixHQUFHLHVEQUF1RCxxQkFBcUIsY0FBYyxHQUFHLGlGQUFpRix3QkFBd0IsR0FBRyxtRkFBbUYsb0JBQW9CLEdBQUcsOEZBQThGLHFCQUFxQixHQUFHLDBHQUEwRyxrQkFBa0IsR0FBRyx1SEFBdUgsa0JBQWtCLEdBQUcsK0hBQStILDBCQUEwQixrQkFBa0IsR0FBRyxnSUFBZ0ksd0JBQXdCLDBCQUEwQixHQUFHLHVGQUF1Rix1QkFBdUIsMEJBQTBCLHVCQUF1QixHQUFHLDBMQUEwTCx1QkFBdUIsa0JBQWtCLDBCQUEwQixHQUFHLCtGQUErRixpQkFBaUIsZ0JBQWdCLDhCQUE4Qix3QkFBd0IsY0FBYyxhQUFhLEdBQUcsOEZBQThGLGdCQUFnQixlQUFlLG1DQUFtQyxxQ0FBcUMsc0NBQXNDLGtDQUFrQyw4QkFBOEIsY0FBYyxhQUFhLEdBQUcsMENBQTBDLHdCQUF3Qiw4QkFBOEIsdUJBQXVCLDJCQUEyQix1QkFBdUIsbUJBQW1CLHFCQUFxQixzQkFBc0Isa0JBQWtCLHVCQUF1QixnQkFBZ0IsR0FBRyxnREFBZ0Qsa0JBQWtCLEdBQUcsa0RBQWtELHdCQUF3QiwwQkFBMEIsbUJBQW1CLEdBQUcsZ0RBQWdELHdCQUF3QiwwQkFBMEIsbUJBQW1CLEdBQUcsNENBQTRDLHlCQUF5QiwwQkFBMEIseUJBQXlCLGtCQUFrQixnQkFBZ0IsZUFBZSxtQkFBbUIsdUJBQXVCLFdBQVcsWUFBWSxhQUFhLGVBQWUscUJBQXFCLHVCQUF1Qiw4Q0FBOEMsc0NBQXNDLEdBQUcsZ0RBQWdELGlCQUFpQixnQkFBZ0IsaUJBQWlCLDJCQUEyQixpQkFBaUIsd0JBQXdCLDBCQUEwQiw0R0FBNEcsb0dBQW9HLEdBQUcsNkRBQTZELG9DQUFvQyw0QkFBNEIsR0FBRyw2REFBNkQsb0NBQW9DLDRCQUE0QixHQUFHLHlFQUF5RSxlQUFlLGlCQUFpQixnQkFBZ0IsR0FBRyw4RUFBOEUsZUFBZSxHQUFHLHNFQUFzRSxrQkFBa0IsR0FBRyxvRUFBb0UseUJBQXlCLDBCQUEwQix5QkFBeUIsa0JBQWtCLGdCQUFnQixlQUFlLG1CQUFtQix1QkFBdUIsR0FBRywyRkFBMkYsa0JBQWtCLEdBQUcsMERBQTBELGdDQUFnQyw4QkFBOEIsMkJBQTJCLHdCQUF3Qiw4QkFBOEIsOEJBQThCLHVCQUF1QixtQkFBbUIsb0JBQW9CLG1CQUFtQixpQkFBaUIsbUJBQW1CLGtCQUFrQixrQ0FBa0MsMEJBQTBCLHNCQUFzQiw4Q0FBOEMsc0NBQXNDLHdCQUF3QixxQkFBcUIsOEJBQThCLDJCQUEyQiwwQkFBMEIsc0JBQXNCLGlCQUFpQixpQ0FBaUMsZ0NBQWdDLCtDQUErQyxvcVFBQW9xUSxHQUFHLDZIQUE2SCxxREFBcUQsaURBQWlELDZDQUE2QyxlQUFlLEdBQUcsOEVBQThFLDJCQUEyQixrQ0FBa0MsOEJBQThCLDBCQUEwQixLQUFLLFdBQVcsa0NBQWtDLDhCQUE4QiwwQkFBMEIsS0FBSyxHQUFHLHNFQUFzRSwyQkFBMkIsa0NBQWtDLDhCQUE4QiwwQkFBMEIsS0FBSyxXQUFXLGtDQUFrQyw4QkFBOEIsMEJBQTBCLEtBQUssR0FBRyxzQ0FBc0MsdUJBQXVCLHFCQUFxQixtQ0FBbUMsR0FBRywyQkFBMkIsOENBQThDLHFCQUFxQixxQkFBcUIsR0FBRyw0S0FBNEssOEJBQThCLEdBQUcsaURBQWlELGdCQUFnQixtQkFBbUIsR0FBRyw4Q0FBOEMsOENBQThDLGtCQUFrQixHQUFHLHlDQUF5Qyx3QkFBd0IscUJBQXFCLHVCQUF1Qix1QkFBdUIsR0FBRywrRkFBK0YsaUJBQWlCLFlBQVksdUJBQXVCLFdBQVcsZ0JBQWdCLGtCQUFrQixHQUFHLGdEQUFnRCx1Q0FBdUMsMkJBQTJCLEdBQUcsb0ZBQW9GLHVCQUF1QixrQkFBa0IsR0FBRywyQ0FBMkMsd0JBQXdCLEdBQUcsbUVBQW1FLHlCQUF5QiwwQkFBMEIseUJBQXlCLGtCQUFrQiw0QkFBNEIsd0JBQXdCLG9CQUFvQixtQkFBbUIsR0FBRyxnR0FBZ0csNkJBQTZCLEdBQUcsa0ZBQWtGLDJCQUEyQix1QkFBdUIsbUJBQW1CLHVCQUF1QixHQUFHLGtLQUFrSyw2QkFBNkIsR0FBRyxrRkFBa0YsNkJBQTZCLHlCQUF5QixxQkFBcUIscUJBQXFCLEdBQUcsd0ZBQXdGLHVCQUF1QiwwQ0FBMEMsNkNBQTZDLEdBQUcsbUZBQW1GLDJCQUEyQix1QkFBdUIsbUJBQW1CLHlDQUF5Qyw0Q0FBNEMsR0FBRywyQ0FBMkMscUJBQXFCLEdBQUcsZ0RBQWdELHVCQUF1QixHQUFHLCtDQUErQyxtQkFBbUIsbUJBQW1CLG9CQUFvQixxQkFBcUIsdUJBQXVCLEdBQUcseUlBQXlJLGtCQUFrQixHQUFHLHVIQUF1SCxzQkFBc0IsR0FBRztBQUM3NXJCLGdDQUFnQyxpQkFBaUI7O0FBRWpEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNENBQUssZUFBZSw0Q0FBSyxxRkFBcUYsNENBQUs7QUFDekk7QUFDQSxHQUFHLHVCQUF1Qiw0Q0FBSztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZUFBZSw0Q0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxlQUFlLDRDQUFLO0FBQ3ZCO0FBQ0EsR0FBRyxlQUFlLDRDQUFLO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZ0JBQWdCLDRDQUFLO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUssZ0VBQWdFLDRDQUFLLG1EQUFtRCw0Q0FBSztBQUNwSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZUFBZSw0Q0FBSyxnR0FBZ0csNENBQUsseUNBQXlDLDRDQUFLO0FBQzFLO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZ0JBQWdCLDRDQUFLO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLEdBQUcsNEJBQTRCLDRDQUFLLGVBQWUsNENBQUssMkNBQTJDLDRDQUFLO0FBQ3hHO0FBQ0EsR0FBRyxrQ0FBa0MsNENBQUs7QUFDMUM7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHLCtCQUErQiw0Q0FBSztBQUN2QztBQUNBLEdBQUcsbUNBQW1DLDRDQUFLO0FBQzNDO0FBQ0EsR0FBRyxlQUFlLDRDQUFLO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHLGlCQUFpQiw0Q0FBSztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUcsZUFBZSw0Q0FBSztBQUN2QjtBQUNBLEdBQUcsZUFBZSw0Q0FBSywwQ0FBMEMsNENBQUssMENBQTBDLDRDQUFLLDJDQUEyQyw0Q0FBSyw0RkFBNEYsNENBQUs7QUFDdFE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSw4Q0FBOEMsMkJBQTJCLEdBQUcsMEJBQTBCLHdDQUF3Qyx1Q0FBdUMsR0FBRyxpQ0FBaUMsaUJBQWlCLHVCQUF1Qix3QkFBd0IsZUFBZSx1QkFBdUIsbUJBQW1CLEdBQUcsbUNBQW1DLGNBQWMsMEJBQTBCLGNBQWMsaUJBQWlCLEdBQUcsbUVBQW1FLHdCQUF3QixHQUFHLCtKQUErSixtQkFBbUIsdUJBQXVCLHlCQUF5QixHQUFHLDRCQUE0QixtQkFBbUIsdUJBQXVCLHlCQUF5QixHQUFHLGlLQUFpSyxxQkFBcUIsR0FBRyxvUUFBb1EsbUJBQW1CLHdCQUF3QixHQUFHLGlEQUFpRCxrQkFBa0IsR0FBRyxvREFBb0Qsa0JBQWtCLEdBQUcsc0RBQXNELGtCQUFrQixHQUFHLDBFQUEwRSxtQkFBbUIsR0FBRywySEFBMkgsZ0JBQWdCLEdBQUcsaUZBQWlGLGNBQWMsdUJBQXVCLG1CQUFtQixvQkFBb0IsMEJBQTBCLHVCQUF1QixvQkFBb0IscUJBQXFCLG9CQUFvQix3QkFBd0IscUJBQXFCLGVBQWUsdUJBQXVCLDJCQUEyQixHQUFHLHVMQUF1TCxrQkFBa0IsR0FBRywyTUFBMk0seUNBQXlDLEdBQUcsMkZBQTJGLG1CQUFtQiw4Q0FBOEMsc0NBQXNDLHVCQUF1QixHQUFHLHlDQUF5Qyx3QkFBd0Isb0JBQW9CLGtCQUFrQiw4QkFBOEIsMkJBQTJCLHVCQUF1QixtQkFBbUIscUJBQXFCLGNBQWMsb0RBQW9ELDRDQUE0QyxHQUFHLCtDQUErQyxrQkFBa0IsMEJBQTBCLGdEQUFnRCx3Q0FBd0MsR0FBRyxvRUFBb0UsbUJBQW1CLGlCQUFpQixHQUFHLDJEQUEyRCxtQkFBbUIsaUJBQWlCLEdBQUcsK0RBQStELG1CQUFtQixpQkFBaUIsR0FBRyxzREFBc0QsbUJBQW1CLGlCQUFpQixHQUFHLG9EQUFvRCx1QkFBdUIsMEJBQTBCLGdCQUFnQixHQUFHLDREQUE0RCxrQkFBa0IsMkJBQTJCLGdCQUFnQix1QkFBdUIseUJBQXlCLDhEQUE4RCx3QkFBd0IsZ0NBQWdDLGNBQWMsYUFBYSxpQkFBaUIsR0FBRywyREFBMkQsaUJBQWlCLGdCQUFnQixvQkFBb0IsbUJBQW1CLHFCQUFxQixxQkFBcUIsbUJBQW1CLDZCQUE2QiwwQkFBMEIscUJBQXFCLG9CQUFvQixrQkFBa0Isd0JBQXdCLDhCQUE4Qix3QkFBd0IsR0FBRyxpRUFBaUUsa0JBQWtCLEdBQUcsc0RBQXNELHFCQUFxQixjQUFjLEdBQUcsZ0ZBQWdGLHdCQUF3QixHQUFHLGtGQUFrRixvQkFBb0IsR0FBRyw2RkFBNkYscUJBQXFCLEdBQUcseUdBQXlHLGtCQUFrQixHQUFHLHNIQUFzSCxrQkFBa0IsR0FBRyw4SEFBOEgsMEJBQTBCLGtCQUFrQixHQUFHLCtIQUErSCx3QkFBd0IsMEJBQTBCLEdBQUcsc0ZBQXNGLHVCQUF1QiwwQkFBMEIsdUJBQXVCLEdBQUcsd0xBQXdMLHVCQUF1QixrQkFBa0IsMEJBQTBCLEdBQUcsOEZBQThGLGlCQUFpQixnQkFBZ0IsOEJBQThCLHdCQUF3QixjQUFjLGFBQWEsR0FBRyw2RkFBNkYsZ0JBQWdCLGVBQWUsbUNBQW1DLHFDQUFxQyxzQ0FBc0Msa0NBQWtDLDhCQUE4QixjQUFjLGFBQWEsR0FBRyx5Q0FBeUMsd0JBQXdCLDhCQUE4Qix1QkFBdUIsMkJBQTJCLHVCQUF1QixtQkFBbUIscUJBQXFCLHNCQUFzQixrQkFBa0IsdUJBQXVCLGdCQUFnQixHQUFHLCtDQUErQyxrQkFBa0IsR0FBRyxpREFBaUQsd0JBQXdCLDBCQUEwQixtQkFBbUIsR0FBRywrQ0FBK0Msd0JBQXdCLDBCQUEwQixtQkFBbUIsR0FBRywyQ0FBMkMseUJBQXlCLDBCQUEwQix5QkFBeUIsa0JBQWtCLGdCQUFnQixlQUFlLG1CQUFtQix1QkFBdUIsV0FBVyxZQUFZLGFBQWEsZUFBZSxxQkFBcUIsdUJBQXVCLDhDQUE4QyxzQ0FBc0MsR0FBRywrQ0FBK0MsaUJBQWlCLGdCQUFnQixpQkFBaUIsMkJBQTJCLGlCQUFpQix3QkFBd0IsMEJBQTBCLDRHQUE0RyxvR0FBb0csR0FBRyw0REFBNEQsb0NBQW9DLDRCQUE0QixHQUFHLDREQUE0RCxvQ0FBb0MsNEJBQTRCLEdBQUcsd0VBQXdFLGVBQWUsaUJBQWlCLGdCQUFnQixHQUFHLDZFQUE2RSxlQUFlLEdBQUcscUVBQXFFLGtCQUFrQixHQUFHLG1FQUFtRSx5QkFBeUIsMEJBQTBCLHlCQUF5QixrQkFBa0IsZ0JBQWdCLGVBQWUsbUJBQW1CLHVCQUF1QixHQUFHLDBGQUEwRixrQkFBa0IsR0FBRyx5REFBeUQsZ0NBQWdDLDhCQUE4QiwyQkFBMkIsd0JBQXdCLDhCQUE4Qiw4QkFBOEIsdUJBQXVCLG1CQUFtQixvQkFBb0IsbUJBQW1CLGlCQUFpQixtQkFBbUIsa0JBQWtCLGtDQUFrQywwQkFBMEIsc0JBQXNCLDhDQUE4QyxzQ0FBc0Msd0JBQXdCLHFCQUFxQiw4QkFBOEIsMkJBQTJCLDBCQUEwQixzQkFBc0IsaUJBQWlCLGlDQUFpQyxnQ0FBZ0MsK0NBQStDLG9xUUFBb3FRLEdBQUcsMkhBQTJILHFEQUFxRCxpREFBaUQsNkNBQTZDLGVBQWUsR0FBRyw4RUFBOEUsMkJBQTJCLGtDQUFrQyw4QkFBOEIsMEJBQTBCLEtBQUssV0FBVyxrQ0FBa0MsOEJBQThCLDBCQUEwQixLQUFLLEdBQUcsc0VBQXNFLDJCQUEyQixrQ0FBa0MsOEJBQThCLDBCQUEwQixLQUFLLFdBQVcsa0NBQWtDLDhCQUE4QiwwQkFBMEIsS0FBSyxHQUFHLHFDQUFxQyx1QkFBdUIscUJBQXFCLG1DQUFtQyxHQUFHLDBCQUEwQixtREFBbUQscUJBQXFCLEdBQUcsK0RBQStELGdDQUFnQyxHQUFHLGdEQUFnRCxnQkFBZ0IsbUJBQW1CLEdBQUcsMENBQTBDLHFCQUFxQixxQkFBcUIsR0FBRyw0Q0FBNEMscUJBQXFCLEdBQUcsNkNBQTZDLHdCQUF3QixHQUFHLDBDQUEwQyxrQkFBa0IsdUJBQXVCLEdBQUcseUNBQXlDLHVCQUF1QixHQUFHLDREQUE0RCx5QkFBeUIsR0FBRyxnRkFBZ0Ysb0JBQW9CLEdBQUcseUNBQXlDLGdCQUFnQix1QkFBdUIsR0FBRywwQ0FBMEMsb0JBQW9CLHFCQUFxQixHQUFHLDZDQUE2QyxvQkFBb0IsdUJBQXVCLHVCQUF1QixHQUFHLCtDQUErQyxjQUFjLEdBQUcsOENBQThDLG1CQUFtQixtQkFBbUIsb0JBQW9CLHFCQUFxQixxQkFBcUIsdUJBQXVCLEdBQUc7QUFDMWxvQixnQ0FBZ0MsaUJBQWlCOztBQUVqRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw0Q0FBSyxlQUFlLDRDQUFLLHFGQUFxRiw0Q0FBSztBQUN6STtBQUNBLEdBQUcsdUJBQXVCLDRDQUFLO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBLEdBQUcsZUFBZSw0Q0FBSyxrRUFBa0UsNENBQUs7QUFDOUY7QUFDQTtBQUNBLEdBQUcsZUFBZSw0Q0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGlFQUFpRSw0Q0FBSztBQUN6RTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGdCQUFnQiw0Q0FBSztBQUN4QjtBQUNBO0FBQ0EsR0FBRyw0QkFBNEIsNENBQUssZUFBZSw0Q0FBSywyQ0FBMkMsNENBQUs7QUFDeEc7QUFDQSxHQUFHLGtDQUFrQyw0Q0FBSztBQUMxQztBQUNBLEdBQUcsZUFBZSw0Q0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUcsK0JBQStCLDRDQUFLO0FBQ3ZDO0FBQ0EsR0FBRyxtQ0FBbUMsNENBQUs7QUFDM0M7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUcsaUJBQWlCLDRDQUFLO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQSxHQUFHLGVBQWUsNENBQUssMENBQTBDLDRDQUFLLDBDQUEwQyw0Q0FBSywyQ0FBMkMsNENBQUsseURBQXlELDRDQUFLO0FBQ25PO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyx1R0FBdUcsNENBQUs7QUFDL0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSxpREFBaUQsMkJBQTJCLEdBQUcsNkJBQTZCLHdDQUF3Qyx1Q0FBdUMsR0FBRyxvQ0FBb0MsaUJBQWlCLHVCQUF1Qix3QkFBd0IsZUFBZSx1QkFBdUIsbUJBQW1CLEdBQUcsc0NBQXNDLGNBQWMsMEJBQTBCLGNBQWMsaUJBQWlCLEdBQUcsc0VBQXNFLHdCQUF3QixHQUFHLGlMQUFpTCxtQkFBbUIsdUJBQXVCLHlCQUF5QixHQUFHLCtCQUErQixtQkFBbUIsdUJBQXVCLHlCQUF5QixHQUFHLDBLQUEwSyxxQkFBcUIsR0FBRyxtUkFBbVIsbUJBQW1CLHdCQUF3QixHQUFHLG9EQUFvRCxrQkFBa0IsR0FBRyx1REFBdUQsa0JBQWtCLEdBQUcseURBQXlELGtCQUFrQixHQUFHLDZFQUE2RSxtQkFBbUIsR0FBRyxvSUFBb0ksZ0JBQWdCLEdBQUcsdUZBQXVGLGNBQWMsdUJBQXVCLG1CQUFtQixvQkFBb0IsMEJBQTBCLHVCQUF1QixvQkFBb0IscUJBQXFCLG9CQUFvQix3QkFBd0IscUJBQXFCLGVBQWUsdUJBQXVCLDJCQUEyQixHQUFHLG1NQUFtTSxrQkFBa0IsR0FBRyx1TkFBdU4seUNBQXlDLEdBQUcsaUdBQWlHLG1CQUFtQiw4Q0FBOEMsc0NBQXNDLHVCQUF1QixHQUFHLDRDQUE0Qyx3QkFBd0Isb0JBQW9CLGtCQUFrQiw4QkFBOEIsMkJBQTJCLHVCQUF1QixtQkFBbUIscUJBQXFCLGNBQWMsb0RBQW9ELDRDQUE0QyxHQUFHLGtEQUFrRCxrQkFBa0IsMEJBQTBCLGdEQUFnRCx3Q0FBd0MsR0FBRyx1RUFBdUUsbUJBQW1CLGlCQUFpQixHQUFHLDhEQUE4RCxtQkFBbUIsaUJBQWlCLEdBQUcsa0VBQWtFLG1CQUFtQixpQkFBaUIsR0FBRyx5REFBeUQsbUJBQW1CLGlCQUFpQixHQUFHLHVEQUF1RCx1QkFBdUIsMEJBQTBCLGdCQUFnQixHQUFHLCtEQUErRCxrQkFBa0IsMkJBQTJCLGdCQUFnQix1QkFBdUIseUJBQXlCLDhEQUE4RCx3QkFBd0IsZ0NBQWdDLGNBQWMsYUFBYSxpQkFBaUIsR0FBRyw4REFBOEQsaUJBQWlCLGdCQUFnQixvQkFBb0IsbUJBQW1CLHFCQUFxQixxQkFBcUIsbUJBQW1CLDZCQUE2QiwwQkFBMEIscUJBQXFCLG9CQUFvQixrQkFBa0Isd0JBQXdCLDhCQUE4Qix3QkFBd0IsR0FBRyxvRUFBb0Usa0JBQWtCLEdBQUcseURBQXlELHFCQUFxQixjQUFjLEdBQUcsbUZBQW1GLHdCQUF3QixHQUFHLHFGQUFxRixvQkFBb0IsR0FBRyxnR0FBZ0cscUJBQXFCLEdBQUcsNEdBQTRHLGtCQUFrQixHQUFHLHlIQUF5SCxrQkFBa0IsR0FBRyxpSUFBaUksMEJBQTBCLGtCQUFrQixHQUFHLGtJQUFrSSx3QkFBd0IsMEJBQTBCLEdBQUcseUZBQXlGLHVCQUF1QiwwQkFBMEIsdUJBQXVCLEdBQUcsOExBQThMLHVCQUF1QixrQkFBa0IsMEJBQTBCLEdBQUcsaUdBQWlHLGlCQUFpQixnQkFBZ0IsOEJBQThCLHdCQUF3QixjQUFjLGFBQWEsR0FBRyxnR0FBZ0csZ0JBQWdCLGVBQWUsbUNBQW1DLHFDQUFxQyxzQ0FBc0Msa0NBQWtDLDhCQUE4QixjQUFjLGFBQWEsR0FBRyw0Q0FBNEMsd0JBQXdCLDhCQUE4Qix1QkFBdUIsMkJBQTJCLHVCQUF1QixtQkFBbUIscUJBQXFCLHNCQUFzQixrQkFBa0IsdUJBQXVCLGdCQUFnQixHQUFHLGtEQUFrRCxrQkFBa0IsR0FBRyxvREFBb0Qsd0JBQXdCLDBCQUEwQixtQkFBbUIsR0FBRyxrREFBa0Qsd0JBQXdCLDBCQUEwQixtQkFBbUIsR0FBRyw4Q0FBOEMseUJBQXlCLDBCQUEwQix5QkFBeUIsa0JBQWtCLGdCQUFnQixlQUFlLG1CQUFtQix1QkFBdUIsV0FBVyxZQUFZLGFBQWEsZUFBZSxxQkFBcUIsdUJBQXVCLDhDQUE4QyxzQ0FBc0MsR0FBRyxrREFBa0QsaUJBQWlCLGdCQUFnQixpQkFBaUIsMkJBQTJCLGlCQUFpQix3QkFBd0IsMEJBQTBCLDRHQUE0RyxvR0FBb0csR0FBRywrREFBK0Qsb0NBQW9DLDRCQUE0QixHQUFHLCtEQUErRCxvQ0FBb0MsNEJBQTRCLEdBQUcsMkVBQTJFLGVBQWUsaUJBQWlCLGdCQUFnQixHQUFHLGdGQUFnRixlQUFlLEdBQUcsd0VBQXdFLGtCQUFrQixHQUFHLHNFQUFzRSx5QkFBeUIsMEJBQTBCLHlCQUF5QixrQkFBa0IsZ0JBQWdCLGVBQWUsbUJBQW1CLHVCQUF1QixHQUFHLDZGQUE2RixrQkFBa0IsR0FBRyw0REFBNEQsZ0NBQWdDLDhCQUE4QiwyQkFBMkIsd0JBQXdCLDhCQUE4Qiw4QkFBOEIsdUJBQXVCLG1CQUFtQixvQkFBb0IsbUJBQW1CLGlCQUFpQixtQkFBbUIsa0JBQWtCLGtDQUFrQywwQkFBMEIsc0JBQXNCLDhDQUE4QyxzQ0FBc0Msd0JBQXdCLHFCQUFxQiw4QkFBOEIsMkJBQTJCLDBCQUEwQixzQkFBc0IsaUJBQWlCLGlDQUFpQyxnQ0FBZ0MsK0NBQStDLG9xUUFBb3FRLEdBQUcsaUlBQWlJLHFEQUFxRCxpREFBaUQsNkNBQTZDLGVBQWUsR0FBRyw4RUFBOEUsMkJBQTJCLGtDQUFrQyw4QkFBOEIsMEJBQTBCLEtBQUssV0FBVyxrQ0FBa0MsOEJBQThCLDBCQUEwQixLQUFLLEdBQUcsc0VBQXNFLDJCQUEyQixrQ0FBa0MsOEJBQThCLDBCQUEwQixLQUFLLFdBQVcsa0NBQWtDLDhCQUE4QiwwQkFBMEIsS0FBSyxHQUFHLHdDQUF3Qyx1QkFBdUIscUJBQXFCLG1DQUFtQyxHQUFHLDZCQUE2Qiw4Q0FBOEMsZ0NBQWdDLHFCQUFxQixHQUFHLG1EQUFtRCxnQkFBZ0IsbUJBQW1CLEdBQUcsaURBQWlELGtDQUFrQyx1Q0FBdUMsMkJBQTJCLHNCQUFzQixnQkFBZ0IsMEJBQTBCLEdBQUcsNkNBQTZDLGtCQUFrQix1QkFBdUIsR0FBRyw2Q0FBNkMsa0JBQWtCLHdCQUF3QixHQUFHLDRDQUE0Qyx1QkFBdUIsR0FBRyw2REFBNkQscUJBQXFCLEdBQUcsaURBQWlELHVCQUF1QixHQUFHLG1EQUFtRCxjQUFjLEdBQUcsaURBQWlELG1CQUFtQixtQkFBbUIsb0JBQW9CLHFCQUFxQixxQkFBcUIsdUJBQXVCLEdBQUcsK01BQStNLGtCQUFrQixnRUFBZ0UsR0FBRyw2TEFBNkwsa0JBQWtCLEdBQUc7QUFDOWhwQixnQ0FBZ0MsaUJBQWlCOztBQUVqRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw0Q0FBSyxlQUFlLDRDQUFLLHFGQUFxRiw0Q0FBSztBQUN6STtBQUNBLEdBQUcsdUJBQXVCLDRDQUFLO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZ0JBQWdCLDRDQUFLO0FBQ3hCO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUssa0VBQWtFLDRDQUFLO0FBQzlGO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZ0JBQWdCLDRDQUFLO0FBQ3hCO0FBQ0E7QUFDQSxHQUFHLDRCQUE0Qiw0Q0FBSyxlQUFlLDRDQUFLLDJDQUEyQyw0Q0FBSztBQUN4RztBQUNBLEdBQUcsa0NBQWtDLDRDQUFLO0FBQzFDO0FBQ0EsR0FBRyxlQUFlLDRDQUFLO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHLCtCQUErQiw0Q0FBSztBQUN2QztBQUNBLEdBQUcsbUNBQW1DLDRDQUFLO0FBQzNDO0FBQ0EsR0FBRyxlQUFlLDRDQUFLO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUcsaUJBQWlCLDRDQUFLO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZUFBZSw0Q0FBSztBQUN2QjtBQUNBLEdBQUcsZUFBZSw0Q0FBSywwQ0FBMEMsNENBQUssMENBQTBDLDRDQUFLLDJDQUEyQyw0Q0FBSyx5REFBeUQsNENBQUs7QUFDbk87QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyx3R0FBd0csNENBQUs7QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSw0Q0FBNEMsMkJBQTJCLEdBQUcsd0JBQXdCLHdDQUF3Qyx1Q0FBdUMsR0FBRywrQkFBK0IsaUJBQWlCLHVCQUF1Qix3QkFBd0IsZUFBZSx1QkFBdUIsbUJBQW1CLEdBQUcsaUNBQWlDLGNBQWMsMEJBQTBCLGNBQWMsaUJBQWlCLEdBQUcsaUVBQWlFLHdCQUF3QixHQUFHLG1KQUFtSixtQkFBbUIsdUJBQXVCLHlCQUF5QixHQUFHLDBCQUEwQixtQkFBbUIsdUJBQXVCLHlCQUF5QixHQUFHLDJKQUEySixxQkFBcUIsR0FBRywwUEFBMFAsbUJBQW1CLHdCQUF3QixHQUFHLCtDQUErQyxrQkFBa0IsR0FBRyxrREFBa0Qsa0JBQWtCLEdBQUcsb0RBQW9ELGtCQUFrQixHQUFHLHdFQUF3RSxtQkFBbUIsR0FBRyxxSEFBcUgsZ0JBQWdCLEdBQUcsNkVBQTZFLGNBQWMsdUJBQXVCLG1CQUFtQixvQkFBb0IsMEJBQTBCLHVCQUF1QixvQkFBb0IscUJBQXFCLG9CQUFvQix3QkFBd0IscUJBQXFCLGVBQWUsdUJBQXVCLDJCQUEyQixHQUFHLCtLQUErSyxrQkFBa0IsR0FBRyxtTUFBbU0seUNBQXlDLEdBQUcsdUZBQXVGLG1CQUFtQiw4Q0FBOEMsc0NBQXNDLHVCQUF1QixHQUFHLHVDQUF1Qyx3QkFBd0Isb0JBQW9CLGtCQUFrQiw4QkFBOEIsMkJBQTJCLHVCQUF1QixtQkFBbUIscUJBQXFCLGNBQWMsb0RBQW9ELDRDQUE0QyxHQUFHLDZDQUE2QyxrQkFBa0IsMEJBQTBCLGdEQUFnRCx3Q0FBd0MsR0FBRyxrRUFBa0UsbUJBQW1CLGlCQUFpQixHQUFHLHlEQUF5RCxtQkFBbUIsaUJBQWlCLEdBQUcsNkRBQTZELG1CQUFtQixpQkFBaUIsR0FBRyxvREFBb0QsbUJBQW1CLGlCQUFpQixHQUFHLGtEQUFrRCx1QkFBdUIsMEJBQTBCLGdCQUFnQixHQUFHLDBEQUEwRCxrQkFBa0IsMkJBQTJCLGdCQUFnQix1QkFBdUIseUJBQXlCLDhEQUE4RCx3QkFBd0IsZ0NBQWdDLGNBQWMsYUFBYSxpQkFBaUIsR0FBRyx5REFBeUQsaUJBQWlCLGdCQUFnQixvQkFBb0IsbUJBQW1CLHFCQUFxQixxQkFBcUIsbUJBQW1CLDZCQUE2QiwwQkFBMEIscUJBQXFCLG9CQUFvQixrQkFBa0Isd0JBQXdCLDhCQUE4Qix3QkFBd0IsR0FBRywrREFBK0Qsa0JBQWtCLEdBQUcsb0RBQW9ELHFCQUFxQixjQUFjLEdBQUcsOEVBQThFLHdCQUF3QixHQUFHLGdGQUFnRixvQkFBb0IsR0FBRywyRkFBMkYscUJBQXFCLEdBQUcsdUdBQXVHLGtCQUFrQixHQUFHLG9IQUFvSCxrQkFBa0IsR0FBRyw0SEFBNEgsMEJBQTBCLGtCQUFrQixHQUFHLDZIQUE2SCx3QkFBd0IsMEJBQTBCLEdBQUcsb0ZBQW9GLHVCQUF1QiwwQkFBMEIsdUJBQXVCLEdBQUcsb0xBQW9MLHVCQUF1QixrQkFBa0IsMEJBQTBCLEdBQUcsNEZBQTRGLGlCQUFpQixnQkFBZ0IsOEJBQThCLHdCQUF3QixjQUFjLGFBQWEsR0FBRywyRkFBMkYsZ0JBQWdCLGVBQWUsbUNBQW1DLHFDQUFxQyxzQ0FBc0Msa0NBQWtDLDhCQUE4QixjQUFjLGFBQWEsR0FBRyx1Q0FBdUMsd0JBQXdCLDhCQUE4Qix1QkFBdUIsMkJBQTJCLHVCQUF1QixtQkFBbUIscUJBQXFCLHNCQUFzQixrQkFBa0IsdUJBQXVCLGdCQUFnQixHQUFHLDZDQUE2QyxrQkFBa0IsR0FBRywrQ0FBK0Msd0JBQXdCLDBCQUEwQixtQkFBbUIsR0FBRyw2Q0FBNkMsd0JBQXdCLDBCQUEwQixtQkFBbUIsR0FBRyx5Q0FBeUMseUJBQXlCLDBCQUEwQix5QkFBeUIsa0JBQWtCLGdCQUFnQixlQUFlLG1CQUFtQix1QkFBdUIsV0FBVyxZQUFZLGFBQWEsZUFBZSxxQkFBcUIsdUJBQXVCLDhDQUE4QyxzQ0FBc0MsR0FBRyw2Q0FBNkMsaUJBQWlCLGdCQUFnQixpQkFBaUIsMkJBQTJCLGlCQUFpQix3QkFBd0IsMEJBQTBCLDRHQUE0RyxvR0FBb0csR0FBRywwREFBMEQsb0NBQW9DLDRCQUE0QixHQUFHLDBEQUEwRCxvQ0FBb0MsNEJBQTRCLEdBQUcsc0VBQXNFLGVBQWUsaUJBQWlCLGdCQUFnQixHQUFHLDJFQUEyRSxlQUFlLEdBQUcsbUVBQW1FLGtCQUFrQixHQUFHLGlFQUFpRSx5QkFBeUIsMEJBQTBCLHlCQUF5QixrQkFBa0IsZ0JBQWdCLGVBQWUsbUJBQW1CLHVCQUF1QixHQUFHLHdGQUF3RixrQkFBa0IsR0FBRyx1REFBdUQsZ0NBQWdDLDhCQUE4QiwyQkFBMkIsd0JBQXdCLDhCQUE4Qiw4QkFBOEIsdUJBQXVCLG1CQUFtQixvQkFBb0IsbUJBQW1CLGlCQUFpQixtQkFBbUIsa0JBQWtCLGtDQUFrQywwQkFBMEIsc0JBQXNCLDhDQUE4QyxzQ0FBc0Msd0JBQXdCLHFCQUFxQiw4QkFBOEIsMkJBQTJCLDBCQUEwQixzQkFBc0IsaUJBQWlCLGlDQUFpQyxnQ0FBZ0MsK0NBQStDLG9xUUFBb3FRLEdBQUcsdUhBQXVILHFEQUFxRCxpREFBaUQsNkNBQTZDLGVBQWUsR0FBRyw4RUFBOEUsMkJBQTJCLGtDQUFrQyw4QkFBOEIsMEJBQTBCLEtBQUssV0FBVyxrQ0FBa0MsOEJBQThCLDBCQUEwQixLQUFLLEdBQUcsc0VBQXNFLDJCQUEyQixrQ0FBa0MsOEJBQThCLDBCQUEwQixLQUFLLFdBQVcsa0NBQWtDLDhCQUE4QiwwQkFBMEIsS0FBSyxHQUFHLG1DQUFtQyx1QkFBdUIscUJBQXFCLG1DQUFtQyxHQUFHLHdCQUF3QixzREFBc0QscUJBQXFCLHFCQUFxQixHQUFHLDhDQUE4QyxnQkFBZ0IsbUJBQW1CLEdBQUcsd0NBQXdDLGtCQUFrQix3QkFBd0IsR0FBRywyQ0FBMkMsbUJBQW1CLEdBQUcsd0NBQXdDLGtCQUFrQix1QkFBdUIsR0FBRyxxREFBcUQsa0NBQWtDLEdBQUcsNENBQTRDLGdCQUFnQixpQkFBaUIsdUJBQXVCLFdBQVcsWUFBWSwyQkFBMkIsZ0NBQWdDLGlCQUFpQixlQUFlLEdBQUcsb0hBQW9ILGVBQWUsdUJBQXVCLEdBQUcsdUNBQXVDLHVCQUF1QixHQUFHLDRFQUE0RSxnQkFBZ0IsR0FBRywyQ0FBMkMsb0JBQW9CLHVCQUF1QixHQUFHLDZDQUE2QyxjQUFjLEdBQUcsNENBQTRDLG1CQUFtQixtQkFBbUIsb0JBQW9CLHFCQUFxQixHQUFHLGdNQUFnTSxrQkFBa0IsZ0VBQWdFLEdBQUcsOEtBQThLLGdCQUFnQixHQUFHLDhLQUE4SyxrQkFBa0IsR0FBRyxxTkFBcU4scUJBQXFCLEdBQUc7QUFDanlwQixnQ0FBZ0MsaUJBQWlCOztBQUVqRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw0Q0FBSyxlQUFlLDRDQUFLLHFGQUFxRiw0Q0FBSztBQUN6STtBQUNBLEdBQUcsdUJBQXVCLDRDQUFLO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZUFBZSw0Q0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsZ0JBQWdCLDRDQUFLO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxlQUFlLDRDQUFLLGlFQUFpRSw0Q0FBSztBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGlFQUFpRSw0Q0FBSztBQUN6RTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxrQkFBa0IsNENBQUs7QUFDMUI7QUFDQTtBQUNBLEdBQUcsZUFBZSw0Q0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQSxHQUFHLGdCQUFnQiw0Q0FBSztBQUN4QjtBQUNBO0FBQ0EsR0FBRyw0QkFBNEIsNENBQUssZUFBZSw0Q0FBSywyQ0FBMkMsNENBQUs7QUFDeEc7QUFDQSxHQUFHLGtDQUFrQyw0Q0FBSztBQUMxQztBQUNBLEdBQUcsZUFBZSw0Q0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUcsK0JBQStCLDRDQUFLO0FBQ3ZDO0FBQ0EsR0FBRyxtQ0FBbUMsNENBQUs7QUFDM0M7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUcsaUJBQWlCLDRDQUFLO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLGVBQWUsNENBQUs7QUFDdkI7QUFDQSxHQUFHLGVBQWUsNENBQUssMENBQTBDLDRDQUFLLDBDQUEwQyw0Q0FBSywyQ0FBMkMsNENBQUsseURBQXlELDRDQUFLO0FBQ25PO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyx3R0FBd0csNENBQUs7QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDBEQUEwRCx3QkFBd0IsMkJBQTJCO0FBQzdHLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHNCQUFzQiw0Q0FBSyxlQUFlLDRDQUFLLDhCQUE4Qiw0Q0FBSztBQUNsRjtBQUNBLEdBQUcsZ0JBQWdCLDRDQUFLLG9DQUFvQztBQUM1RDtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNCQUFzQiw0Q0FBSyxnQ0FBZ0M7QUFDM0Q7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLDZFQUFjLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29udmVydGtpdC1yZWFjdC9iaW4vY29udmVydGtpdC1yZWFjdC5lc20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gX3R5cGVvZihvYmopO1xufVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuXG4gIHZhciB0YXJnZXQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTtcblxuICB2YXIga2V5LCBpO1xuXG4gIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgc291cmNlU3ltYm9sS2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5ID0gc291cmNlU3ltYm9sS2V5c1tpXTtcbiAgICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzb3VyY2UsIGtleSkpIGNvbnRpbnVlO1xuICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21tb25qc01vZHVsZShmbiwgbW9kdWxlKSB7XG5cdHJldHVybiBtb2R1bGUgPSB7IGV4cG9ydHM6IHt9IH0sIGZuKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMpLCBtb2R1bGUuZXhwb3J0cztcbn1cblxuLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG52YXIgYiA9IFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2xbXCJmb3JcIl0sXG4gICAgYyA9IGIgPyBTeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5lbGVtZW50XCIpIDogNjAxMDMsXG4gICAgZCA9IGIgPyBTeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5wb3J0YWxcIikgOiA2MDEwNixcbiAgICBlID0gYiA/IFN5bWJvbFtcImZvclwiXShcInJlYWN0LmZyYWdtZW50XCIpIDogNjAxMDcsXG4gICAgZiA9IGIgPyBTeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5zdHJpY3RfbW9kZVwiKSA6IDYwMTA4LFxuICAgIGcgPSBiID8gU3ltYm9sW1wiZm9yXCJdKFwicmVhY3QucHJvZmlsZXJcIikgOiA2MDExNCxcbiAgICBoID0gYiA/IFN5bWJvbFtcImZvclwiXShcInJlYWN0LnByb3ZpZGVyXCIpIDogNjAxMDksXG4gICAgayA9IGIgPyBTeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5jb250ZXh0XCIpIDogNjAxMTAsXG4gICAgbCA9IGIgPyBTeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5hc3luY19tb2RlXCIpIDogNjAxMTEsXG4gICAgbSA9IGIgPyBTeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIikgOiA2MDExMSxcbiAgICBuID0gYiA/IFN5bWJvbFtcImZvclwiXShcInJlYWN0LmZvcndhcmRfcmVmXCIpIDogNjAxMTIsXG4gICAgcCA9IGIgPyBTeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5zdXNwZW5zZVwiKSA6IDYwMTEzLFxuICAgIHEgPSBiID8gU3ltYm9sW1wiZm9yXCJdKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKSA6IDYwMTIwLFxuICAgIHIgPSBiID8gU3ltYm9sW1wiZm9yXCJdKFwicmVhY3QubWVtb1wiKSA6IDYwMTE1LFxuICAgIHQgPSBiID8gU3ltYm9sW1wiZm9yXCJdKFwicmVhY3QubGF6eVwiKSA6IDYwMTE2LFxuICAgIHYgPSBiID8gU3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuYmxvY2tcIikgOiA2MDEyMSxcbiAgICB3ID0gYiA/IFN5bWJvbFtcImZvclwiXShcInJlYWN0LmZ1bmRhbWVudGFsXCIpIDogNjAxMTcsXG4gICAgeCA9IGIgPyBTeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5yZXNwb25kZXJcIikgOiA2MDExOCxcbiAgICB5ID0gYiA/IFN5bWJvbFtcImZvclwiXShcInJlYWN0LnNjb3BlXCIpIDogNjAxMTk7XG5cbmZ1bmN0aW9uIHooYSkge1xuICBpZiAoXCJvYmplY3RcIiA9PT0gX3R5cGVvZihhKSAmJiBudWxsICE9PSBhKSB7XG4gICAgdmFyIHUgPSBhLiQkdHlwZW9mO1xuXG4gICAgc3dpdGNoICh1KSB7XG4gICAgICBjYXNlIGM6XG4gICAgICAgIHN3aXRjaCAoYSA9IGEudHlwZSwgYSkge1xuICAgICAgICAgIGNhc2UgbDpcbiAgICAgICAgICBjYXNlIG06XG4gICAgICAgICAgY2FzZSBlOlxuICAgICAgICAgIGNhc2UgZzpcbiAgICAgICAgICBjYXNlIGY6XG4gICAgICAgICAgY2FzZSBwOlxuICAgICAgICAgICAgcmV0dXJuIGE7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgc3dpdGNoIChhID0gYSAmJiBhLiQkdHlwZW9mLCBhKSB7XG4gICAgICAgICAgICAgIGNhc2UgazpcbiAgICAgICAgICAgICAgY2FzZSBuOlxuICAgICAgICAgICAgICBjYXNlIHQ6XG4gICAgICAgICAgICAgIGNhc2UgcjpcbiAgICAgICAgICAgICAgY2FzZSBoOlxuICAgICAgICAgICAgICAgIHJldHVybiBhO1xuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICBjYXNlIGQ6XG4gICAgICAgIHJldHVybiB1O1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBBKGEpIHtcbiAgcmV0dXJuIHooYSkgPT09IG07XG59XG5cbnZhciBBc3luY01vZGUgPSBsO1xudmFyIENvbmN1cnJlbnRNb2RlID0gbTtcbnZhciBDb250ZXh0Q29uc3VtZXIgPSBrO1xudmFyIENvbnRleHRQcm92aWRlciA9IGg7XG52YXIgRWxlbWVudCA9IGM7XG52YXIgRm9yd2FyZFJlZiA9IG47XG52YXIgRnJhZ21lbnQgPSBlO1xudmFyIExhenkgPSB0O1xudmFyIE1lbW8gPSByO1xudmFyIFBvcnRhbCA9IGQ7XG52YXIgUHJvZmlsZXIgPSBnO1xudmFyIFN0cmljdE1vZGUgPSBmO1xudmFyIFN1c3BlbnNlID0gcDtcblxudmFyIGlzQXN5bmNNb2RlID0gZnVuY3Rpb24gaXNBc3luY01vZGUoYSkge1xuICByZXR1cm4gQShhKSB8fCB6KGEpID09PSBsO1xufTtcblxudmFyIGlzQ29uY3VycmVudE1vZGUgPSBBO1xuXG52YXIgaXNDb250ZXh0Q29uc3VtZXIgPSBmdW5jdGlvbiBpc0NvbnRleHRDb25zdW1lcihhKSB7XG4gIHJldHVybiB6KGEpID09PSBrO1xufTtcblxudmFyIGlzQ29udGV4dFByb3ZpZGVyID0gZnVuY3Rpb24gaXNDb250ZXh0UHJvdmlkZXIoYSkge1xuICByZXR1cm4geihhKSA9PT0gaDtcbn07XG5cbnZhciBpc0VsZW1lbnQgPSBmdW5jdGlvbiBpc0VsZW1lbnQoYSkge1xuICByZXR1cm4gXCJvYmplY3RcIiA9PT0gX3R5cGVvZihhKSAmJiBudWxsICE9PSBhICYmIGEuJCR0eXBlb2YgPT09IGM7XG59O1xuXG52YXIgaXNGb3J3YXJkUmVmID0gZnVuY3Rpb24gaXNGb3J3YXJkUmVmKGEpIHtcbiAgcmV0dXJuIHooYSkgPT09IG47XG59O1xuXG52YXIgaXNGcmFnbWVudCA9IGZ1bmN0aW9uIGlzRnJhZ21lbnQoYSkge1xuICByZXR1cm4geihhKSA9PT0gZTtcbn07XG5cbnZhciBpc0xhenkgPSBmdW5jdGlvbiBpc0xhenkoYSkge1xuICByZXR1cm4geihhKSA9PT0gdDtcbn07XG5cbnZhciBpc01lbW8gPSBmdW5jdGlvbiBpc01lbW8oYSkge1xuICByZXR1cm4geihhKSA9PT0gcjtcbn07XG5cbnZhciBpc1BvcnRhbCA9IGZ1bmN0aW9uIGlzUG9ydGFsKGEpIHtcbiAgcmV0dXJuIHooYSkgPT09IGQ7XG59O1xuXG52YXIgaXNQcm9maWxlciA9IGZ1bmN0aW9uIGlzUHJvZmlsZXIoYSkge1xuICByZXR1cm4geihhKSA9PT0gZztcbn07XG5cbnZhciBpc1N0cmljdE1vZGUgPSBmdW5jdGlvbiBpc1N0cmljdE1vZGUoYSkge1xuICByZXR1cm4geihhKSA9PT0gZjtcbn07XG5cbnZhciBpc1N1c3BlbnNlID0gZnVuY3Rpb24gaXNTdXNwZW5zZShhKSB7XG4gIHJldHVybiB6KGEpID09PSBwO1xufTtcblxudmFyIGlzVmFsaWRFbGVtZW50VHlwZSA9IGZ1bmN0aW9uIGlzVmFsaWRFbGVtZW50VHlwZShhKSB7XG4gIHJldHVybiBcInN0cmluZ1wiID09PSB0eXBlb2YgYSB8fCBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBhIHx8IGEgPT09IGUgfHwgYSA9PT0gbSB8fCBhID09PSBnIHx8IGEgPT09IGYgfHwgYSA9PT0gcCB8fCBhID09PSBxIHx8IFwib2JqZWN0XCIgPT09IF90eXBlb2YoYSkgJiYgbnVsbCAhPT0gYSAmJiAoYS4kJHR5cGVvZiA9PT0gdCB8fCBhLiQkdHlwZW9mID09PSByIHx8IGEuJCR0eXBlb2YgPT09IGggfHwgYS4kJHR5cGVvZiA9PT0gayB8fCBhLiQkdHlwZW9mID09PSBuIHx8IGEuJCR0eXBlb2YgPT09IHcgfHwgYS4kJHR5cGVvZiA9PT0geCB8fCBhLiQkdHlwZW9mID09PSB5IHx8IGEuJCR0eXBlb2YgPT09IHYpO1xufTtcblxudmFyIHR5cGVPZiA9IHo7XG52YXIgcmVhY3RJc19wcm9kdWN0aW9uX21pbiA9IHtcbiAgQXN5bmNNb2RlOiBBc3luY01vZGUsXG4gIENvbmN1cnJlbnRNb2RlOiBDb25jdXJyZW50TW9kZSxcbiAgQ29udGV4dENvbnN1bWVyOiBDb250ZXh0Q29uc3VtZXIsXG4gIENvbnRleHRQcm92aWRlcjogQ29udGV4dFByb3ZpZGVyLFxuICBFbGVtZW50OiBFbGVtZW50LFxuICBGb3J3YXJkUmVmOiBGb3J3YXJkUmVmLFxuICBGcmFnbWVudDogRnJhZ21lbnQsXG4gIExhenk6IExhenksXG4gIE1lbW86IE1lbW8sXG4gIFBvcnRhbDogUG9ydGFsLFxuICBQcm9maWxlcjogUHJvZmlsZXIsXG4gIFN0cmljdE1vZGU6IFN0cmljdE1vZGUsXG4gIFN1c3BlbnNlOiBTdXNwZW5zZSxcbiAgaXNBc3luY01vZGU6IGlzQXN5bmNNb2RlLFxuICBpc0NvbmN1cnJlbnRNb2RlOiBpc0NvbmN1cnJlbnRNb2RlLFxuICBpc0NvbnRleHRDb25zdW1lcjogaXNDb250ZXh0Q29uc3VtZXIsXG4gIGlzQ29udGV4dFByb3ZpZGVyOiBpc0NvbnRleHRQcm92aWRlcixcbiAgaXNFbGVtZW50OiBpc0VsZW1lbnQsXG4gIGlzRm9yd2FyZFJlZjogaXNGb3J3YXJkUmVmLFxuICBpc0ZyYWdtZW50OiBpc0ZyYWdtZW50LFxuICBpc0xhenk6IGlzTGF6eSxcbiAgaXNNZW1vOiBpc01lbW8sXG4gIGlzUG9ydGFsOiBpc1BvcnRhbCxcbiAgaXNQcm9maWxlcjogaXNQcm9maWxlcixcbiAgaXNTdHJpY3RNb2RlOiBpc1N0cmljdE1vZGUsXG4gIGlzU3VzcGVuc2U6IGlzU3VzcGVuc2UsXG4gIGlzVmFsaWRFbGVtZW50VHlwZTogaXNWYWxpZEVsZW1lbnRUeXBlLFxuICB0eXBlT2Y6IHR5cGVPZlxufTtcblxudmFyIHJlYWN0SXNfZGV2ZWxvcG1lbnQgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBub3IgcG9seWZpbGwsIHRoZW4gYSBwbGFpbiBudW1iZXIgaXMgdXNlZCBmb3IgcGVyZm9ybWFuY2UuXG5cbiAgICAgIHZhciBoYXNTeW1ib2wgPSB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIFN5bWJvbFtcImZvclwiXTtcbiAgICAgIHZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2xbXCJmb3JcIl0oJ3JlYWN0LmVsZW1lbnQnKSA6IDB4ZWFjNztcbiAgICAgIHZhciBSRUFDVF9QT1JUQUxfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbFtcImZvclwiXSgncmVhY3QucG9ydGFsJykgOiAweGVhY2E7XG4gICAgICB2YXIgUkVBQ1RfRlJBR01FTlRfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbFtcImZvclwiXSgncmVhY3QuZnJhZ21lbnQnKSA6IDB4ZWFjYjtcbiAgICAgIHZhciBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sW1wiZm9yXCJdKCdyZWFjdC5zdHJpY3RfbW9kZScpIDogMHhlYWNjO1xuICAgICAgdmFyIFJFQUNUX1BST0ZJTEVSX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2xbXCJmb3JcIl0oJ3JlYWN0LnByb2ZpbGVyJykgOiAweGVhZDI7XG4gICAgICB2YXIgUkVBQ1RfUFJPVklERVJfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbFtcImZvclwiXSgncmVhY3QucHJvdmlkZXInKSA6IDB4ZWFjZDtcbiAgICAgIHZhciBSRUFDVF9DT05URVhUX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2xbXCJmb3JcIl0oJ3JlYWN0LmNvbnRleHQnKSA6IDB4ZWFjZTsgLy8gVE9ETzogV2UgZG9uJ3QgdXNlIEFzeW5jTW9kZSBvciBDb25jdXJyZW50TW9kZSBhbnltb3JlLiBUaGV5IHdlcmUgdGVtcG9yYXJ5XG4gICAgICAvLyAodW5zdGFibGUpIEFQSXMgdGhhdCBoYXZlIGJlZW4gcmVtb3ZlZC4gQ2FuIHdlIHJlbW92ZSB0aGUgc3ltYm9scz9cblxuICAgICAgdmFyIFJFQUNUX0FTWU5DX01PREVfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbFtcImZvclwiXSgncmVhY3QuYXN5bmNfbW9kZScpIDogMHhlYWNmO1xuICAgICAgdmFyIFJFQUNUX0NPTkNVUlJFTlRfTU9ERV9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sW1wiZm9yXCJdKCdyZWFjdC5jb25jdXJyZW50X21vZGUnKSA6IDB4ZWFjZjtcbiAgICAgIHZhciBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sW1wiZm9yXCJdKCdyZWFjdC5mb3J3YXJkX3JlZicpIDogMHhlYWQwO1xuICAgICAgdmFyIFJFQUNUX1NVU1BFTlNFX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2xbXCJmb3JcIl0oJ3JlYWN0LnN1c3BlbnNlJykgOiAweGVhZDE7XG4gICAgICB2YXIgUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sW1wiZm9yXCJdKCdyZWFjdC5zdXNwZW5zZV9saXN0JykgOiAweGVhZDg7XG4gICAgICB2YXIgUkVBQ1RfTUVNT19UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sW1wiZm9yXCJdKCdyZWFjdC5tZW1vJykgOiAweGVhZDM7XG4gICAgICB2YXIgUkVBQ1RfTEFaWV9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sW1wiZm9yXCJdKCdyZWFjdC5sYXp5JykgOiAweGVhZDQ7XG4gICAgICB2YXIgUkVBQ1RfQkxPQ0tfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbFtcImZvclwiXSgncmVhY3QuYmxvY2snKSA6IDB4ZWFkOTtcbiAgICAgIHZhciBSRUFDVF9GVU5EQU1FTlRBTF9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sW1wiZm9yXCJdKCdyZWFjdC5mdW5kYW1lbnRhbCcpIDogMHhlYWQ1O1xuICAgICAgdmFyIFJFQUNUX1JFU1BPTkRFUl9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sW1wiZm9yXCJdKCdyZWFjdC5yZXNwb25kZXInKSA6IDB4ZWFkNjtcbiAgICAgIHZhciBSRUFDVF9TQ09QRV9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sW1wiZm9yXCJdKCdyZWFjdC5zY29wZScpIDogMHhlYWQ3O1xuXG4gICAgICBmdW5jdGlvbiBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nIHx8IC8vIE5vdGU6IGl0cyB0eXBlb2YgbWlnaHQgYmUgb3RoZXIgdGhhbiAnc3ltYm9sJyBvciAnbnVtYmVyJyBpZiBpdCdzIGEgcG9seWZpbGwuXG4gICAgICAgIHR5cGUgPT09IFJFQUNUX0ZSQUdNRU5UX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfQ09OQ1VSUkVOVF9NT0RFX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfUFJPRklMRVJfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1NVU1BFTlNFX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFIHx8IF90eXBlb2YodHlwZSkgPT09ICdvYmplY3QnICYmIHR5cGUgIT09IG51bGwgJiYgKHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0xBWllfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NRU1PX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfUFJPVklERVJfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9DT05URVhUX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9GVU5EQU1FTlRBTF9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX1JFU1BPTkRFUl9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX1NDT1BFX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfQkxPQ0tfVFlQRSk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIHR5cGVPZihvYmplY3QpIHtcbiAgICAgICAgaWYgKF90eXBlb2Yob2JqZWN0KSA9PT0gJ29iamVjdCcgJiYgb2JqZWN0ICE9PSBudWxsKSB7XG4gICAgICAgICAgdmFyICQkdHlwZW9mID0gb2JqZWN0LiQkdHlwZW9mO1xuXG4gICAgICAgICAgc3dpdGNoICgkJHR5cGVvZikge1xuICAgICAgICAgICAgY2FzZSBSRUFDVF9FTEVNRU5UX1RZUEU6XG4gICAgICAgICAgICAgIHZhciB0eXBlID0gb2JqZWN0LnR5cGU7XG5cbiAgICAgICAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBSRUFDVF9BU1lOQ19NT0RFX1RZUEU6XG4gICAgICAgICAgICAgICAgY2FzZSBSRUFDVF9DT05DVVJSRU5UX01PREVfVFlQRTpcbiAgICAgICAgICAgICAgICBjYXNlIFJFQUNUX0ZSQUdNRU5UX1RZUEU6XG4gICAgICAgICAgICAgICAgY2FzZSBSRUFDVF9QUk9GSUxFUl9UWVBFOlxuICAgICAgICAgICAgICAgIGNhc2UgUkVBQ1RfU1RSSUNUX01PREVfVFlQRTpcbiAgICAgICAgICAgICAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX1RZUEU6XG4gICAgICAgICAgICAgICAgICByZXR1cm4gdHlwZTtcblxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICB2YXIgJCR0eXBlb2ZUeXBlID0gdHlwZSAmJiB0eXBlLiQkdHlwZW9mO1xuXG4gICAgICAgICAgICAgICAgICBzd2l0Y2ggKCQkdHlwZW9mVHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFJFQUNUX0NPTlRFWFRfVFlQRTpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFJFQUNUX0xBWllfVFlQRTpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBSRUFDVF9NRU1PX1RZUEU6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgUkVBQ1RfUFJPVklERVJfVFlQRTpcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJCR0eXBlb2ZUeXBlO1xuXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICQkdHlwZW9mO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2FzZSBSRUFDVF9QT1JUQUxfVFlQRTpcbiAgICAgICAgICAgICAgcmV0dXJuICQkdHlwZW9mO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9IC8vIEFzeW5jTW9kZSBpcyBkZXByZWNhdGVkIGFsb25nIHdpdGggaXNBc3luY01vZGVcblxuXG4gICAgICB2YXIgQXN5bmNNb2RlID0gUkVBQ1RfQVNZTkNfTU9ERV9UWVBFO1xuICAgICAgdmFyIENvbmN1cnJlbnRNb2RlID0gUkVBQ1RfQ09OQ1VSUkVOVF9NT0RFX1RZUEU7XG4gICAgICB2YXIgQ29udGV4dENvbnN1bWVyID0gUkVBQ1RfQ09OVEVYVF9UWVBFO1xuICAgICAgdmFyIENvbnRleHRQcm92aWRlciA9IFJFQUNUX1BST1ZJREVSX1RZUEU7XG4gICAgICB2YXIgRWxlbWVudCA9IFJFQUNUX0VMRU1FTlRfVFlQRTtcbiAgICAgIHZhciBGb3J3YXJkUmVmID0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRTtcbiAgICAgIHZhciBGcmFnbWVudCA9IFJFQUNUX0ZSQUdNRU5UX1RZUEU7XG4gICAgICB2YXIgTGF6eSA9IFJFQUNUX0xBWllfVFlQRTtcbiAgICAgIHZhciBNZW1vID0gUkVBQ1RfTUVNT19UWVBFO1xuICAgICAgdmFyIFBvcnRhbCA9IFJFQUNUX1BPUlRBTF9UWVBFO1xuICAgICAgdmFyIFByb2ZpbGVyID0gUkVBQ1RfUFJPRklMRVJfVFlQRTtcbiAgICAgIHZhciBTdHJpY3RNb2RlID0gUkVBQ1RfU1RSSUNUX01PREVfVFlQRTtcbiAgICAgIHZhciBTdXNwZW5zZSA9IFJFQUNUX1NVU1BFTlNFX1RZUEU7XG4gICAgICB2YXIgaGFzV2FybmVkQWJvdXREZXByZWNhdGVkSXNBc3luY01vZGUgPSBmYWxzZTsgLy8gQXN5bmNNb2RlIHNob3VsZCBiZSBkZXByZWNhdGVkXG5cbiAgICAgIGZ1bmN0aW9uIGlzQXN5bmNNb2RlKG9iamVjdCkge1xuICAgICAgICB7XG4gICAgICAgICAgaWYgKCFoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRJc0FzeW5jTW9kZSkge1xuICAgICAgICAgICAgaGFzV2FybmVkQWJvdXREZXByZWNhdGVkSXNBc3luY01vZGUgPSB0cnVlOyAvLyBVc2luZyBjb25zb2xlWyd3YXJuJ10gdG8gZXZhZGUgQmFiZWwgYW5kIEVTTGludFxuXG4gICAgICAgICAgICBjb25zb2xlWyd3YXJuJ10oJ1RoZSBSZWFjdElzLmlzQXN5bmNNb2RlKCkgYWxpYXMgaGFzIGJlZW4gZGVwcmVjYXRlZCwgJyArICdhbmQgd2lsbCBiZSByZW1vdmVkIGluIFJlYWN0IDE3Ky4gVXBkYXRlIHlvdXIgY29kZSB0byB1c2UgJyArICdSZWFjdElzLmlzQ29uY3VycmVudE1vZGUoKSBpbnN0ZWFkLiBJdCBoYXMgdGhlIGV4YWN0IHNhbWUgQVBJLicpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaXNDb25jdXJyZW50TW9kZShvYmplY3QpIHx8IHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9BU1lOQ19NT0RFX1RZUEU7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGlzQ29uY3VycmVudE1vZGUob2JqZWN0KSB7XG4gICAgICAgIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfQ09OQ1VSUkVOVF9NT0RFX1RZUEU7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGlzQ29udGV4dENvbnN1bWVyKG9iamVjdCkge1xuICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX0NPTlRFWFRfVFlQRTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gaXNDb250ZXh0UHJvdmlkZXIob2JqZWN0KSB7XG4gICAgICAgIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfUFJPVklERVJfVFlQRTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gaXNFbGVtZW50KG9iamVjdCkge1xuICAgICAgICByZXR1cm4gX3R5cGVvZihvYmplY3QpID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IG51bGwgJiYgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGlzRm9yd2FyZFJlZihvYmplY3QpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBpc0ZyYWdtZW50KG9iamVjdCkge1xuICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX0ZSQUdNRU5UX1RZUEU7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGlzTGF6eShvYmplY3QpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9MQVpZX1RZUEU7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGlzTWVtbyhvYmplY3QpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9NRU1PX1RZUEU7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGlzUG9ydGFsKG9iamVjdCkge1xuICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BPUlRBTF9UWVBFO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBpc1Byb2ZpbGVyKG9iamVjdCkge1xuICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BST0ZJTEVSX1RZUEU7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGlzU3RyaWN0TW9kZShvYmplY3QpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBpc1N1c3BlbnNlKG9iamVjdCkge1xuICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1NVU1BFTlNFX1RZUEU7XG4gICAgICB9XG5cbiAgICAgIGV4cG9ydHMuQXN5bmNNb2RlID0gQXN5bmNNb2RlO1xuICAgICAgZXhwb3J0cy5Db25jdXJyZW50TW9kZSA9IENvbmN1cnJlbnRNb2RlO1xuICAgICAgZXhwb3J0cy5Db250ZXh0Q29uc3VtZXIgPSBDb250ZXh0Q29uc3VtZXI7XG4gICAgICBleHBvcnRzLkNvbnRleHRQcm92aWRlciA9IENvbnRleHRQcm92aWRlcjtcbiAgICAgIGV4cG9ydHMuRWxlbWVudCA9IEVsZW1lbnQ7XG4gICAgICBleHBvcnRzLkZvcndhcmRSZWYgPSBGb3J3YXJkUmVmO1xuICAgICAgZXhwb3J0cy5GcmFnbWVudCA9IEZyYWdtZW50O1xuICAgICAgZXhwb3J0cy5MYXp5ID0gTGF6eTtcbiAgICAgIGV4cG9ydHMuTWVtbyA9IE1lbW87XG4gICAgICBleHBvcnRzLlBvcnRhbCA9IFBvcnRhbDtcbiAgICAgIGV4cG9ydHMuUHJvZmlsZXIgPSBQcm9maWxlcjtcbiAgICAgIGV4cG9ydHMuU3RyaWN0TW9kZSA9IFN0cmljdE1vZGU7XG4gICAgICBleHBvcnRzLlN1c3BlbnNlID0gU3VzcGVuc2U7XG4gICAgICBleHBvcnRzLmlzQXN5bmNNb2RlID0gaXNBc3luY01vZGU7XG4gICAgICBleHBvcnRzLmlzQ29uY3VycmVudE1vZGUgPSBpc0NvbmN1cnJlbnRNb2RlO1xuICAgICAgZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lciA9IGlzQ29udGV4dENvbnN1bWVyO1xuICAgICAgZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlciA9IGlzQ29udGV4dFByb3ZpZGVyO1xuICAgICAgZXhwb3J0cy5pc0VsZW1lbnQgPSBpc0VsZW1lbnQ7XG4gICAgICBleHBvcnRzLmlzRm9yd2FyZFJlZiA9IGlzRm9yd2FyZFJlZjtcbiAgICAgIGV4cG9ydHMuaXNGcmFnbWVudCA9IGlzRnJhZ21lbnQ7XG4gICAgICBleHBvcnRzLmlzTGF6eSA9IGlzTGF6eTtcbiAgICAgIGV4cG9ydHMuaXNNZW1vID0gaXNNZW1vO1xuICAgICAgZXhwb3J0cy5pc1BvcnRhbCA9IGlzUG9ydGFsO1xuICAgICAgZXhwb3J0cy5pc1Byb2ZpbGVyID0gaXNQcm9maWxlcjtcbiAgICAgIGV4cG9ydHMuaXNTdHJpY3RNb2RlID0gaXNTdHJpY3RNb2RlO1xuICAgICAgZXhwb3J0cy5pc1N1c3BlbnNlID0gaXNTdXNwZW5zZTtcbiAgICAgIGV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlID0gaXNWYWxpZEVsZW1lbnRUeXBlO1xuICAgICAgZXhwb3J0cy50eXBlT2YgPSB0eXBlT2Y7XG4gICAgfSkoKTtcbiAgfVxufSk7XG52YXIgcmVhY3RJc19kZXZlbG9wbWVudF8xID0gcmVhY3RJc19kZXZlbG9wbWVudC5Bc3luY01vZGU7XG52YXIgcmVhY3RJc19kZXZlbG9wbWVudF8yID0gcmVhY3RJc19kZXZlbG9wbWVudC5Db25jdXJyZW50TW9kZTtcbnZhciByZWFjdElzX2RldmVsb3BtZW50XzMgPSByZWFjdElzX2RldmVsb3BtZW50LkNvbnRleHRDb25zdW1lcjtcbnZhciByZWFjdElzX2RldmVsb3BtZW50XzQgPSByZWFjdElzX2RldmVsb3BtZW50LkNvbnRleHRQcm92aWRlcjtcbnZhciByZWFjdElzX2RldmVsb3BtZW50XzUgPSByZWFjdElzX2RldmVsb3BtZW50LkVsZW1lbnQ7XG52YXIgcmVhY3RJc19kZXZlbG9wbWVudF82ID0gcmVhY3RJc19kZXZlbG9wbWVudC5Gb3J3YXJkUmVmO1xudmFyIHJlYWN0SXNfZGV2ZWxvcG1lbnRfNyA9IHJlYWN0SXNfZGV2ZWxvcG1lbnQuRnJhZ21lbnQ7XG52YXIgcmVhY3RJc19kZXZlbG9wbWVudF84ID0gcmVhY3RJc19kZXZlbG9wbWVudC5MYXp5O1xudmFyIHJlYWN0SXNfZGV2ZWxvcG1lbnRfOSA9IHJlYWN0SXNfZGV2ZWxvcG1lbnQuTWVtbztcbnZhciByZWFjdElzX2RldmVsb3BtZW50XzEwID0gcmVhY3RJc19kZXZlbG9wbWVudC5Qb3J0YWw7XG52YXIgcmVhY3RJc19kZXZlbG9wbWVudF8xMSA9IHJlYWN0SXNfZGV2ZWxvcG1lbnQuUHJvZmlsZXI7XG52YXIgcmVhY3RJc19kZXZlbG9wbWVudF8xMiA9IHJlYWN0SXNfZGV2ZWxvcG1lbnQuU3RyaWN0TW9kZTtcbnZhciByZWFjdElzX2RldmVsb3BtZW50XzEzID0gcmVhY3RJc19kZXZlbG9wbWVudC5TdXNwZW5zZTtcbnZhciByZWFjdElzX2RldmVsb3BtZW50XzE0ID0gcmVhY3RJc19kZXZlbG9wbWVudC5pc0FzeW5jTW9kZTtcbnZhciByZWFjdElzX2RldmVsb3BtZW50XzE1ID0gcmVhY3RJc19kZXZlbG9wbWVudC5pc0NvbmN1cnJlbnRNb2RlO1xudmFyIHJlYWN0SXNfZGV2ZWxvcG1lbnRfMTYgPSByZWFjdElzX2RldmVsb3BtZW50LmlzQ29udGV4dENvbnN1bWVyO1xudmFyIHJlYWN0SXNfZGV2ZWxvcG1lbnRfMTcgPSByZWFjdElzX2RldmVsb3BtZW50LmlzQ29udGV4dFByb3ZpZGVyO1xudmFyIHJlYWN0SXNfZGV2ZWxvcG1lbnRfMTggPSByZWFjdElzX2RldmVsb3BtZW50LmlzRWxlbWVudDtcbnZhciByZWFjdElzX2RldmVsb3BtZW50XzE5ID0gcmVhY3RJc19kZXZlbG9wbWVudC5pc0ZvcndhcmRSZWY7XG52YXIgcmVhY3RJc19kZXZlbG9wbWVudF8yMCA9IHJlYWN0SXNfZGV2ZWxvcG1lbnQuaXNGcmFnbWVudDtcbnZhciByZWFjdElzX2RldmVsb3BtZW50XzIxID0gcmVhY3RJc19kZXZlbG9wbWVudC5pc0xhenk7XG52YXIgcmVhY3RJc19kZXZlbG9wbWVudF8yMiA9IHJlYWN0SXNfZGV2ZWxvcG1lbnQuaXNNZW1vO1xudmFyIHJlYWN0SXNfZGV2ZWxvcG1lbnRfMjMgPSByZWFjdElzX2RldmVsb3BtZW50LmlzUG9ydGFsO1xudmFyIHJlYWN0SXNfZGV2ZWxvcG1lbnRfMjQgPSByZWFjdElzX2RldmVsb3BtZW50LmlzUHJvZmlsZXI7XG52YXIgcmVhY3RJc19kZXZlbG9wbWVudF8yNSA9IHJlYWN0SXNfZGV2ZWxvcG1lbnQuaXNTdHJpY3RNb2RlO1xudmFyIHJlYWN0SXNfZGV2ZWxvcG1lbnRfMjYgPSByZWFjdElzX2RldmVsb3BtZW50LmlzU3VzcGVuc2U7XG52YXIgcmVhY3RJc19kZXZlbG9wbWVudF8yNyA9IHJlYWN0SXNfZGV2ZWxvcG1lbnQuaXNWYWxpZEVsZW1lbnRUeXBlO1xudmFyIHJlYWN0SXNfZGV2ZWxvcG1lbnRfMjggPSByZWFjdElzX2RldmVsb3BtZW50LnR5cGVPZjtcblxudmFyIHJlYWN0SXMgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlKSB7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHJlYWN0SXNfcHJvZHVjdGlvbl9taW47XG4gIH0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZWFjdElzX2RldmVsb3BtZW50O1xuICB9XG59KTtcblxuLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuICBpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuICB0cnkge1xuICAgIGlmICghT2JqZWN0LmFzc2lnbikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gLy8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuICAgIC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblxuXG4gICAgdmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cbiAgICB0ZXN0MVs1XSA9ICdkZSc7XG5cbiAgICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblxuXG4gICAgdmFyIHRlc3QyID0ge307XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcbiAgICAgIHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcbiAgICB9XG5cbiAgICB2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuICAgICAgcmV0dXJuIHRlc3QyW25dO1xuICAgIH0pO1xuXG4gICAgaWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSAvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cblxuICAgIHZhciB0ZXN0MyA9IHt9O1xuICAgICdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuICAgICAgdGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcbiAgICB9KTtcblxuICAgIGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PSAnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbnZhciBvYmplY3RBc3NpZ24gPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcbiAgdmFyIGZyb207XG4gIHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG4gIHZhciBzeW1ib2xzO1xuXG4gIGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG4gICAgZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG4gICAgZm9yICh2YXIga2V5IGluIGZyb20pIHtcbiAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcbiAgICAgICAgdG9ba2V5XSA9IGZyb21ba2V5XTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICBzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuICAgICAgICAgIHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0bztcbn07XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldF8xID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG5cbnZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0JDEgPSBSZWFjdFByb3BUeXBlc1NlY3JldF8xO1xuICB2YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIHZhciBoYXMgPSBGdW5jdGlvbi5jYWxsLmJpbmQoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSk7XG5cbiAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKHRleHQpIHtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICsgdGV4dDtcblxuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfTtcbn1cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxuICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGxvY2F0aW9uIGUuZy4gXCJwcm9wXCIsIFwiY29udGV4dFwiLCBcImNoaWxkIGNvbnRleHRcIlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cbiAqIEBwYXJhbSB7P0Z1bmN0aW9ufSBnZXRTdGFjayBSZXR1cm5zIHRoZSBjb21wb25lbnQgc3RhY2suXG4gKiBAcHJpdmF0ZVxuICovXG5cblxuZnVuY3Rpb24gY2hlY2tQcm9wVHlwZXModHlwZVNwZWNzLCB2YWx1ZXMsIGxvY2F0aW9uLCBjb21wb25lbnROYW1lLCBnZXRTdGFjaykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGZvciAodmFyIHR5cGVTcGVjTmFtZSBpbiB0eXBlU3BlY3MpIHtcbiAgICAgIGlmIChoYXModHlwZVNwZWNzLCB0eXBlU3BlY05hbWUpKSB7XG4gICAgICAgIHZhciBlcnJvcjsgLy8gUHJvcCB0eXBlIHZhbGlkYXRpb24gbWF5IHRocm93LiBJbiBjYXNlIHRoZXkgZG8sIHdlIGRvbid0IHdhbnQgdG9cbiAgICAgICAgLy8gZmFpbCB0aGUgcmVuZGVyIHBoYXNlIHdoZXJlIGl0IGRpZG4ndCBmYWlsIGJlZm9yZS4gU28gd2UgbG9nIGl0LlxuICAgICAgICAvLyBBZnRlciB0aGVzZSBoYXZlIGJlZW4gY2xlYW5lZCB1cCwgd2UnbGwgbGV0IHRoZW0gdGhyb3cuXG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIGlzIGludGVudGlvbmFsbHkgYW4gaW52YXJpYW50IHRoYXQgZ2V0cyBjYXVnaHQuIEl0J3MgdGhlIHNhbWVcbiAgICAgICAgICAvLyBiZWhhdmlvciBhcyB3aXRob3V0IHRoaXMgc3RhdGVtZW50IGV4Y2VwdCB3aXRoIGEgYmV0dGVyIG1lc3NhZ2UuXG4gICAgICAgICAgaWYgKHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogJyArIGxvY2F0aW9uICsgJyB0eXBlIGAnICsgdHlwZVNwZWNOYW1lICsgJ2AgaXMgaW52YWxpZDsgJyArICdpdCBtdXN0IGJlIGEgZnVuY3Rpb24sIHVzdWFsbHkgZnJvbSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UsIGJ1dCByZWNlaXZlZCBgJyArIF90eXBlb2YodHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0pICsgJ2AuJyk7XG4gICAgICAgICAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBlcnJvciA9IHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdKHZhbHVlcywgdHlwZVNwZWNOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgbnVsbCwgUmVhY3RQcm9wVHlwZXNTZWNyZXQkMSk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXJyb3IgPSBleDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlcnJvciAmJiAhKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpKSB7XG4gICAgICAgICAgcHJpbnRXYXJuaW5nKChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICcgKyBsb2NhdGlvbiArICcgYCcgKyB0eXBlU3BlY05hbWUgKyAnYCBpcyBpbnZhbGlkOyB0aGUgdHlwZSBjaGVja2VyICcgKyAnZnVuY3Rpb24gbXVzdCByZXR1cm4gYG51bGxgIG9yIGFuIGBFcnJvcmAgYnV0IHJldHVybmVkIGEgJyArIF90eXBlb2YoZXJyb3IpICsgJy4gJyArICdZb3UgbWF5IGhhdmUgZm9yZ290dGVuIHRvIHBhc3MgYW4gYXJndW1lbnQgdG8gdGhlIHR5cGUgY2hlY2tlciAnICsgJ2NyZWF0b3IgKGFycmF5T2YsIGluc3RhbmNlT2YsIG9iamVjdE9mLCBvbmVPZiwgb25lT2ZUeXBlLCBhbmQgJyArICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciAmJiAhKGVycm9yLm1lc3NhZ2UgaW4gbG9nZ2VkVHlwZUZhaWx1cmVzKSkge1xuICAgICAgICAgIC8vIE9ubHkgbW9uaXRvciB0aGlzIGZhaWx1cmUgb25jZSBiZWNhdXNlIHRoZXJlIHRlbmRzIHRvIGJlIGEgbG90IG9mIHRoZVxuICAgICAgICAgIC8vIHNhbWUgZXJyb3IuXG4gICAgICAgICAgbG9nZ2VkVHlwZUZhaWx1cmVzW2Vycm9yLm1lc3NhZ2VdID0gdHJ1ZTtcbiAgICAgICAgICB2YXIgc3RhY2sgPSBnZXRTdGFjayA/IGdldFN0YWNrKCkgOiAnJztcbiAgICAgICAgICBwcmludFdhcm5pbmcoJ0ZhaWxlZCAnICsgbG9jYXRpb24gKyAnIHR5cGU6ICcgKyBlcnJvci5tZXNzYWdlICsgKHN0YWNrICE9IG51bGwgPyBzdGFjayA6ICcnKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbi8qKlxuICogUmVzZXRzIHdhcm5pbmcgY2FjaGUgd2hlbiB0ZXN0aW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cblxuXG5jaGVja1Byb3BUeXBlcy5yZXNldFdhcm5pbmdDYWNoZSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBsb2dnZWRUeXBlRmFpbHVyZXMgPSB7fTtcbiAgfVxufTtcblxudmFyIGNoZWNrUHJvcFR5cGVzXzEgPSBjaGVja1Byb3BUeXBlcztcblxudmFyIGhhcyQxID0gRnVuY3Rpb24uY2FsbC5iaW5kKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkpO1xuXG52YXIgcHJpbnRXYXJuaW5nJDEgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgcHJpbnRXYXJuaW5nJDEgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcodGV4dCkge1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyB0ZXh0O1xuXG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgLy8gLS0tIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IC0tLVxuICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9IGNhdGNoICh4KSB7fVxuICB9O1xufVxuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uVGhhdFJldHVybnNOdWxsKCkge1xuICByZXR1cm4gbnVsbDtcbn1cblxudmFyIGZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzID0gZnVuY3Rpb24gZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpIHtcbiAgLyogZ2xvYmFsIFN5bWJvbCAqL1xuICB2YXIgSVRFUkFUT1JfU1lNQk9MID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuaXRlcmF0b3I7XG4gIHZhciBGQVVYX0lURVJBVE9SX1NZTUJPTCA9ICdAQGl0ZXJhdG9yJzsgLy8gQmVmb3JlIFN5bWJvbCBzcGVjLlxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBpdGVyYXRvciBtZXRob2QgZnVuY3Rpb24gY29udGFpbmVkIG9uIHRoZSBpdGVyYWJsZSBvYmplY3QuXG4gICAqXG4gICAqIEJlIHN1cmUgdG8gaW52b2tlIHRoZSBmdW5jdGlvbiB3aXRoIHRoZSBpdGVyYWJsZSBhcyBjb250ZXh0OlxuICAgKlxuICAgKiAgICAgdmFyIGl0ZXJhdG9yRm4gPSBnZXRJdGVyYXRvckZuKG15SXRlcmFibGUpO1xuICAgKiAgICAgaWYgKGl0ZXJhdG9yRm4pIHtcbiAgICogICAgICAgdmFyIGl0ZXJhdG9yID0gaXRlcmF0b3JGbi5jYWxsKG15SXRlcmFibGUpO1xuICAgKiAgICAgICAuLi5cbiAgICogICAgIH1cbiAgICpcbiAgICogQHBhcmFtIHs/b2JqZWN0fSBtYXliZUl0ZXJhYmxlXG4gICAqIEByZXR1cm4gez9mdW5jdGlvbn1cbiAgICovXG5cbiAgZnVuY3Rpb24gZ2V0SXRlcmF0b3JGbihtYXliZUl0ZXJhYmxlKSB7XG4gICAgdmFyIGl0ZXJhdG9yRm4gPSBtYXliZUl0ZXJhYmxlICYmIChJVEVSQVRPUl9TWU1CT0wgJiYgbWF5YmVJdGVyYWJsZVtJVEVSQVRPUl9TWU1CT0xdIHx8IG1heWJlSXRlcmFibGVbRkFVWF9JVEVSQVRPUl9TWU1CT0xdKTtcblxuICAgIGlmICh0eXBlb2YgaXRlcmF0b3JGbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIGl0ZXJhdG9yRm47XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBDb2xsZWN0aW9uIG9mIG1ldGhvZHMgdGhhdCBhbGxvdyBkZWNsYXJhdGlvbiBhbmQgdmFsaWRhdGlvbiBvZiBwcm9wcyB0aGF0IGFyZVxuICAgKiBzdXBwbGllZCB0byBSZWFjdCBjb21wb25lbnRzLiBFeGFtcGxlIHVzYWdlOlxuICAgKlxuICAgKiAgIHZhciBQcm9wcyA9IHJlcXVpcmUoJ1JlYWN0UHJvcFR5cGVzJyk7XG4gICAqICAgdmFyIE15QXJ0aWNsZSA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICogICAgIHByb3BUeXBlczoge1xuICAgKiAgICAgICAvLyBBbiBvcHRpb25hbCBzdHJpbmcgcHJvcCBuYW1lZCBcImRlc2NyaXB0aW9uXCIuXG4gICAqICAgICAgIGRlc2NyaXB0aW9uOiBQcm9wcy5zdHJpbmcsXG4gICAqXG4gICAqICAgICAgIC8vIEEgcmVxdWlyZWQgZW51bSBwcm9wIG5hbWVkIFwiY2F0ZWdvcnlcIi5cbiAgICogICAgICAgY2F0ZWdvcnk6IFByb3BzLm9uZU9mKFsnTmV3cycsJ1Bob3RvcyddKS5pc1JlcXVpcmVkLFxuICAgKlxuICAgKiAgICAgICAvLyBBIHByb3AgbmFtZWQgXCJkaWFsb2dcIiB0aGF0IHJlcXVpcmVzIGFuIGluc3RhbmNlIG9mIERpYWxvZy5cbiAgICogICAgICAgZGlhbG9nOiBQcm9wcy5pbnN0YW5jZU9mKERpYWxvZykuaXNSZXF1aXJlZFxuICAgKiAgICAgfSxcbiAgICogICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7IC4uLiB9XG4gICAqICAgfSk7XG4gICAqXG4gICAqIEEgbW9yZSBmb3JtYWwgc3BlY2lmaWNhdGlvbiBvZiBob3cgdGhlc2UgbWV0aG9kcyBhcmUgdXNlZDpcbiAgICpcbiAgICogICB0eXBlIDo9IGFycmF5fGJvb2x8ZnVuY3xvYmplY3R8bnVtYmVyfHN0cmluZ3xvbmVPZihbLi4uXSl8aW5zdGFuY2VPZiguLi4pXG4gICAqICAgZGVjbCA6PSBSZWFjdFByb3BUeXBlcy57dHlwZX0oLmlzUmVxdWlyZWQpP1xuICAgKlxuICAgKiBFYWNoIGFuZCBldmVyeSBkZWNsYXJhdGlvbiBwcm9kdWNlcyBhIGZ1bmN0aW9uIHdpdGggdGhlIHNhbWUgc2lnbmF0dXJlLiBUaGlzXG4gICAqIGFsbG93cyB0aGUgY3JlYXRpb24gb2YgY3VzdG9tIHZhbGlkYXRpb24gZnVuY3Rpb25zLiBGb3IgZXhhbXBsZTpcbiAgICpcbiAgICogIHZhciBNeUxpbmsgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAqICAgIHByb3BUeXBlczoge1xuICAgKiAgICAgIC8vIEFuIG9wdGlvbmFsIHN0cmluZyBvciBVUkkgcHJvcCBuYW1lZCBcImhyZWZcIi5cbiAgICogICAgICBocmVmOiBmdW5jdGlvbihwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUpIHtcbiAgICogICAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAqICAgICAgICBpZiAocHJvcFZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHByb3BWYWx1ZSAhPT0gJ3N0cmluZycgJiZcbiAgICogICAgICAgICAgICAhKHByb3BWYWx1ZSBpbnN0YW5jZW9mIFVSSSkpIHtcbiAgICogICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcbiAgICogICAgICAgICAgICAnRXhwZWN0ZWQgYSBzdHJpbmcgb3IgYW4gVVJJIGZvciAnICsgcHJvcE5hbWUgKyAnIGluICcgK1xuICAgKiAgICAgICAgICAgIGNvbXBvbmVudE5hbWVcbiAgICogICAgICAgICAgKTtcbiAgICogICAgICAgIH1cbiAgICogICAgICB9XG4gICAqICAgIH0sXG4gICAqICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7Li4ufVxuICAgKiAgfSk7XG4gICAqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cblxuXG4gIHZhciBBTk9OWU1PVVMgPSAnPDxhbm9ueW1vdXM+Pic7IC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanNgLlxuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ2FycmF5JyksXG4gICAgYm9vbDogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ2Jvb2xlYW4nKSxcbiAgICBmdW5jOiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcignZnVuY3Rpb24nKSxcbiAgICBudW1iZXI6IGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKCdudW1iZXInKSxcbiAgICBvYmplY3Q6IGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKCdvYmplY3QnKSxcbiAgICBzdHJpbmc6IGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKCdzdHJpbmcnKSxcbiAgICBzeW1ib2w6IGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKCdzeW1ib2wnKSxcbiAgICBhbnk6IGNyZWF0ZUFueVR5cGVDaGVja2VyKCksXG4gICAgYXJyYXlPZjogY3JlYXRlQXJyYXlPZlR5cGVDaGVja2VyLFxuICAgIGVsZW1lbnQ6IGNyZWF0ZUVsZW1lbnRUeXBlQ2hlY2tlcigpLFxuICAgIGVsZW1lbnRUeXBlOiBjcmVhdGVFbGVtZW50VHlwZVR5cGVDaGVja2VyKCksXG4gICAgaW5zdGFuY2VPZjogY3JlYXRlSW5zdGFuY2VUeXBlQ2hlY2tlcixcbiAgICBub2RlOiBjcmVhdGVOb2RlQ2hlY2tlcigpLFxuICAgIG9iamVjdE9mOiBjcmVhdGVPYmplY3RPZlR5cGVDaGVja2VyLFxuICAgIG9uZU9mOiBjcmVhdGVFbnVtVHlwZUNoZWNrZXIsXG4gICAgb25lT2ZUeXBlOiBjcmVhdGVVbmlvblR5cGVDaGVja2VyLFxuICAgIHNoYXBlOiBjcmVhdGVTaGFwZVR5cGVDaGVja2VyLFxuICAgIGV4YWN0OiBjcmVhdGVTdHJpY3RTaGFwZVR5cGVDaGVja2VyXG4gIH07XG4gIC8qKlxuICAgKiBpbmxpbmVkIE9iamVjdC5pcyBwb2x5ZmlsbCB0byBhdm9pZCByZXF1aXJpbmcgY29uc3VtZXJzIHNoaXAgdGhlaXIgb3duXG4gICAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9pc1xuICAgKi9cblxuICAvKmVzbGludC1kaXNhYmxlIG5vLXNlbGYtY29tcGFyZSovXG5cbiAgZnVuY3Rpb24gaXMoeCwgeSkge1xuICAgIC8vIFNhbWVWYWx1ZSBhbGdvcml0aG1cbiAgICBpZiAoeCA9PT0geSkge1xuICAgICAgLy8gU3RlcHMgMS01LCA3LTEwXG4gICAgICAvLyBTdGVwcyA2LmItNi5lOiArMCAhPSAtMFxuICAgICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTdGVwIDYuYTogTmFOID09IE5hTlxuICAgICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgICB9XG4gIH1cbiAgLyplc2xpbnQtZW5hYmxlIG5vLXNlbGYtY29tcGFyZSovXG5cbiAgLyoqXG4gICAqIFdlIHVzZSBhbiBFcnJvci1saWtlIG9iamVjdCBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSBhcyBwZW9wbGUgbWF5IGNhbGxcbiAgICogUHJvcFR5cGVzIGRpcmVjdGx5IGFuZCBpbnNwZWN0IHRoZWlyIG91dHB1dC4gSG93ZXZlciwgd2UgZG9uJ3QgdXNlIHJlYWxcbiAgICogRXJyb3JzIGFueW1vcmUuIFdlIGRvbid0IGluc3BlY3QgdGhlaXIgc3RhY2sgYW55d2F5LCBhbmQgY3JlYXRpbmcgdGhlbVxuICAgKiBpcyBwcm9oaWJpdGl2ZWx5IGV4cGVuc2l2ZSBpZiB0aGV5IGFyZSBjcmVhdGVkIHRvbyBvZnRlbiwgc3VjaCBhcyB3aGF0XG4gICAqIGhhcHBlbnMgaW4gb25lT2ZUeXBlKCkgZm9yIGFueSB0eXBlIGJlZm9yZSB0aGUgb25lIHRoYXQgbWF0Y2hlZC5cbiAgICovXG5cblxuICBmdW5jdGlvbiBQcm9wVHlwZUVycm9yKG1lc3NhZ2UpIHtcbiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIHRoaXMuc3RhY2sgPSAnJztcbiAgfSAvLyBNYWtlIGBpbnN0YW5jZW9mIEVycm9yYCBzdGlsbCB3b3JrIGZvciByZXR1cm5lZCBlcnJvcnMuXG5cblxuICBQcm9wVHlwZUVycm9yLnByb3RvdHlwZSA9IEVycm9yLnByb3RvdHlwZTtcblxuICBmdW5jdGlvbiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgbWFudWFsUHJvcFR5cGVDYWxsQ2FjaGUgPSB7fTtcbiAgICAgIHZhciBtYW51YWxQcm9wVHlwZVdhcm5pbmdDb3VudCA9IDA7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2hlY2tUeXBlKGlzUmVxdWlyZWQsIHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgICBjb21wb25lbnROYW1lID0gY29tcG9uZW50TmFtZSB8fCBBTk9OWU1PVVM7XG4gICAgICBwcm9wRnVsbE5hbWUgPSBwcm9wRnVsbE5hbWUgfHwgcHJvcE5hbWU7XG5cbiAgICAgIGlmIChzZWNyZXQgIT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0XzEpIHtcbiAgICAgICAgaWYgKHRocm93T25EaXJlY3RBY2Nlc3MpIHtcbiAgICAgICAgICAvLyBOZXcgYmVoYXZpb3Igb25seSBmb3IgdXNlcnMgb2YgYHByb3AtdHlwZXNgIHBhY2thZ2VcbiAgICAgICAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICsgJ1VzZSBgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKClgIHRvIGNhbGwgdGhlbS4gJyArICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJyk7XG4gICAgICAgICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9IGVsc2UgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgLy8gT2xkIGJlaGF2aW9yIGZvciBwZW9wbGUgdXNpbmcgUmVhY3QuUHJvcFR5cGVzXG4gICAgICAgICAgdmFyIGNhY2hlS2V5ID0gY29tcG9uZW50TmFtZSArICc6JyArIHByb3BOYW1lO1xuXG4gICAgICAgICAgaWYgKCFtYW51YWxQcm9wVHlwZUNhbGxDYWNoZVtjYWNoZUtleV0gJiYgLy8gQXZvaWQgc3BhbW1pbmcgdGhlIGNvbnNvbGUgYmVjYXVzZSB0aGV5IGFyZSBvZnRlbiBub3QgYWN0aW9uYWJsZSBleGNlcHQgZm9yIGxpYiBhdXRob3JzXG4gICAgICAgICAgbWFudWFsUHJvcFR5cGVXYXJuaW5nQ291bnQgPCAzKSB7XG4gICAgICAgICAgICBwcmludFdhcm5pbmckMSgnWW91IGFyZSBtYW51YWxseSBjYWxsaW5nIGEgUmVhY3QuUHJvcFR5cGVzIHZhbGlkYXRpb24gJyArICdmdW5jdGlvbiBmb3IgdGhlIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2AgcHJvcCBvbiBgJyArIGNvbXBvbmVudE5hbWUgKyAnYC4gVGhpcyBpcyBkZXByZWNhdGVkICcgKyAnYW5kIHdpbGwgdGhyb3cgaW4gdGhlIHN0YW5kYWxvbmUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgKyAnWW91IG1heSBiZSBzZWVpbmcgdGhpcyB3YXJuaW5nIGR1ZSB0byBhIHRoaXJkLXBhcnR5IFByb3BUeXBlcyAnICsgJ2xpYnJhcnkuIFNlZSBodHRwczovL2ZiLm1lL3JlYWN0LXdhcm5pbmctZG9udC1jYWxsLXByb3B0eXBlcyAnICsgJ2ZvciBkZXRhaWxzLicpO1xuICAgICAgICAgICAgbWFudWFsUHJvcFR5cGVDYWxsQ2FjaGVbY2FjaGVLZXldID0gdHJ1ZTtcbiAgICAgICAgICAgIG1hbnVhbFByb3BUeXBlV2FybmluZ0NvdW50Kys7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gPT0gbnVsbCkge1xuICAgICAgICBpZiAoaXNSZXF1aXJlZCkge1xuICAgICAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignVGhlICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBpcyBtYXJrZWQgYXMgcmVxdWlyZWQgJyArICgnaW4gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGJ1dCBpdHMgdmFsdWUgaXMgYG51bGxgLicpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ1RoZSAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2AgaXMgbWFya2VkIGFzIHJlcXVpcmVkIGluICcgKyAoJ2AnICsgY29tcG9uZW50TmFtZSArICdgLCBidXQgaXRzIHZhbHVlIGlzIGB1bmRlZmluZWRgLicpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGNoYWluZWRDaGVja1R5cGUgPSBjaGVja1R5cGUuYmluZChudWxsLCBmYWxzZSk7XG4gICAgY2hhaW5lZENoZWNrVHlwZS5pc1JlcXVpcmVkID0gY2hlY2tUeXBlLmJpbmQobnVsbCwgdHJ1ZSk7XG4gICAgcmV0dXJuIGNoYWluZWRDaGVja1R5cGU7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcihleHBlY3RlZFR5cGUpIHtcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcbiAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG5cbiAgICAgIGlmIChwcm9wVHlwZSAhPT0gZXhwZWN0ZWRUeXBlKSB7XG4gICAgICAgIC8vIGBwcm9wVmFsdWVgIGJlaW5nIGluc3RhbmNlIG9mLCBzYXksIGRhdGUvcmVnZXhwLCBwYXNzIHRoZSAnb2JqZWN0J1xuICAgICAgICAvLyBjaGVjaywgYnV0IHdlIGNhbiBvZmZlciBhIG1vcmUgcHJlY2lzZSBlcnJvciBtZXNzYWdlIGhlcmUgcmF0aGVyIHRoYW5cbiAgICAgICAgLy8gJ29mIHR5cGUgYG9iamVjdGAnLlxuICAgICAgICB2YXIgcHJlY2lzZVR5cGUgPSBnZXRQcmVjaXNlVHlwZShwcm9wVmFsdWUpO1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIHR5cGUgJyArICgnYCcgKyBwcmVjaXNlVHlwZSArICdgIHN1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCAnKSArICgnYCcgKyBleHBlY3RlZFR5cGUgKyAnYC4nKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVBbnlUeXBlQ2hlY2tlcigpIHtcbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIoZW1wdHlGdW5jdGlvblRoYXRSZXR1cm5zTnVsbCk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVBcnJheU9mVHlwZUNoZWNrZXIodHlwZUNoZWNrZXIpIHtcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgIGlmICh0eXBlb2YgdHlwZUNoZWNrZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdQcm9wZXJ0eSBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIGNvbXBvbmVudCBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCBoYXMgaW52YWxpZCBQcm9wVHlwZSBub3RhdGlvbiBpbnNpZGUgYXJyYXlPZi4nKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcblxuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHByb3BWYWx1ZSkpIHtcbiAgICAgICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiB0eXBlICcgKyAoJ2AnICsgcHJvcFR5cGUgKyAnYCBzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgYW4gYXJyYXkuJykpO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BWYWx1ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgZXJyb3IgPSB0eXBlQ2hlY2tlcihwcm9wVmFsdWUsIGksIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUgKyAnWycgKyBpICsgJ10nLCBSZWFjdFByb3BUeXBlc1NlY3JldF8xKTtcblxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlRWxlbWVudFR5cGVDaGVja2VyKCkge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcblxuICAgICAgaWYgKCFpc1ZhbGlkRWxlbWVudChwcm9wVmFsdWUpKSB7XG4gICAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIHByb3BUeXBlICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIGEgc2luZ2xlIFJlYWN0RWxlbWVudC4nKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVFbGVtZW50VHlwZVR5cGVDaGVja2VyKCkge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcblxuICAgICAgaWYgKCFyZWFjdElzLmlzVmFsaWRFbGVtZW50VHlwZShwcm9wVmFsdWUpKSB7XG4gICAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIHByb3BUeXBlICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIGEgc2luZ2xlIFJlYWN0RWxlbWVudCB0eXBlLicpKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlVHlwZUNoZWNrZXIoZXhwZWN0ZWRDbGFzcykge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgaWYgKCEocHJvcHNbcHJvcE5hbWVdIGluc3RhbmNlb2YgZXhwZWN0ZWRDbGFzcykpIHtcbiAgICAgICAgdmFyIGV4cGVjdGVkQ2xhc3NOYW1lID0gZXhwZWN0ZWRDbGFzcy5uYW1lIHx8IEFOT05ZTU9VUztcbiAgICAgICAgdmFyIGFjdHVhbENsYXNzTmFtZSA9IGdldENsYXNzTmFtZShwcm9wc1twcm9wTmFtZV0pO1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIHR5cGUgJyArICgnYCcgKyBhY3R1YWxDbGFzc05hbWUgKyAnYCBzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgJykgKyAoJ2luc3RhbmNlIG9mIGAnICsgZXhwZWN0ZWRDbGFzc05hbWUgKyAnYC4nKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVFbnVtVHlwZUNoZWNrZXIoZXhwZWN0ZWRWYWx1ZXMpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZXhwZWN0ZWRWYWx1ZXMpKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICBwcmludFdhcm5pbmckMSgnSW52YWxpZCBhcmd1bWVudHMgc3VwcGxpZWQgdG8gb25lT2YsIGV4cGVjdGVkIGFuIGFycmF5LCBnb3QgJyArIGFyZ3VtZW50cy5sZW5ndGggKyAnIGFyZ3VtZW50cy4gJyArICdBIGNvbW1vbiBtaXN0YWtlIGlzIHRvIHdyaXRlIG9uZU9mKHgsIHksIHopIGluc3RlYWQgb2Ygb25lT2YoW3gsIHksIHpdKS4nKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcmludFdhcm5pbmckMSgnSW52YWxpZCBhcmd1bWVudCBzdXBwbGllZCB0byBvbmVPZiwgZXhwZWN0ZWQgYW4gYXJyYXkuJyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGVtcHR5RnVuY3Rpb25UaGF0UmV0dXJuc051bGw7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGV4cGVjdGVkVmFsdWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChpcyhwcm9wVmFsdWUsIGV4cGVjdGVkVmFsdWVzW2ldKSkge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZXNTdHJpbmcgPSBKU09OLnN0cmluZ2lmeShleHBlY3RlZFZhbHVlcywgZnVuY3Rpb24gcmVwbGFjZXIoa2V5LCB2YWx1ZSkge1xuICAgICAgICB2YXIgdHlwZSA9IGdldFByZWNpc2VUeXBlKHZhbHVlKTtcblxuICAgICAgICBpZiAodHlwZSA9PT0gJ3N5bWJvbCcpIHtcbiAgICAgICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiB2YWx1ZSBgJyArIFN0cmluZyhwcm9wVmFsdWUpICsgJ2AgJyArICgnc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIG9uZSBvZiAnICsgdmFsdWVzU3RyaW5nICsgJy4nKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZU9iamVjdE9mVHlwZUNoZWNrZXIodHlwZUNoZWNrZXIpIHtcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgIGlmICh0eXBlb2YgdHlwZUNoZWNrZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdQcm9wZXJ0eSBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIGNvbXBvbmVudCBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCBoYXMgaW52YWxpZCBQcm9wVHlwZSBub3RhdGlvbiBpbnNpZGUgb2JqZWN0T2YuJyk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICB2YXIgcHJvcFR5cGUgPSBnZXRQcm9wVHlwZShwcm9wVmFsdWUpO1xuXG4gICAgICBpZiAocHJvcFR5cGUgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIHByb3BUeXBlICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIGFuIG9iamVjdC4nKSk7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBwcm9wVmFsdWUpIHtcbiAgICAgICAgaWYgKGhhcyQxKHByb3BWYWx1ZSwga2V5KSkge1xuICAgICAgICAgIHZhciBlcnJvciA9IHR5cGVDaGVja2VyKHByb3BWYWx1ZSwga2V5LCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgJy4nICsga2V5LCBSZWFjdFByb3BUeXBlc1NlY3JldF8xKTtcblxuICAgICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVVbmlvblR5cGVDaGVja2VyKGFycmF5T2ZUeXBlQ2hlY2tlcnMpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoYXJyYXlPZlR5cGVDaGVja2VycykpIHtcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBwcmludFdhcm5pbmckMSgnSW52YWxpZCBhcmd1bWVudCBzdXBwbGllZCB0byBvbmVPZlR5cGUsIGV4cGVjdGVkIGFuIGluc3RhbmNlIG9mIGFycmF5LicpIDogdm9pZCAwO1xuICAgICAgcmV0dXJuIGVtcHR5RnVuY3Rpb25UaGF0UmV0dXJuc051bGw7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnJheU9mVHlwZUNoZWNrZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgY2hlY2tlciA9IGFycmF5T2ZUeXBlQ2hlY2tlcnNbaV07XG5cbiAgICAgIGlmICh0eXBlb2YgY2hlY2tlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBwcmludFdhcm5pbmckMSgnSW52YWxpZCBhcmd1bWVudCBzdXBwbGllZCB0byBvbmVPZlR5cGUuIEV4cGVjdGVkIGFuIGFycmF5IG9mIGNoZWNrIGZ1bmN0aW9ucywgYnV0ICcgKyAncmVjZWl2ZWQgJyArIGdldFBvc3RmaXhGb3JUeXBlV2FybmluZyhjaGVja2VyKSArICcgYXQgaW5kZXggJyArIGkgKyAnLicpO1xuICAgICAgICByZXR1cm4gZW1wdHlGdW5jdGlvblRoYXRSZXR1cm5zTnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyYXlPZlR5cGVDaGVja2Vycy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgY2hlY2tlciA9IGFycmF5T2ZUeXBlQ2hlY2tlcnNbaV07XG5cbiAgICAgICAgaWYgKGNoZWNrZXIocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBSZWFjdFByb3BUeXBlc1NlY3JldF8xKSA9PSBudWxsKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBzdXBwbGllZCB0byAnICsgKCdgJyArIGNvbXBvbmVudE5hbWUgKyAnYC4nKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZU5vZGVDaGVja2VyKCkge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgaWYgKCFpc05vZGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIHN1cHBsaWVkIHRvICcgKyAoJ2AnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBhIFJlYWN0Tm9kZS4nKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVTaGFwZVR5cGVDaGVja2VyKHNoYXBlVHlwZXMpIHtcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICB2YXIgcHJvcFR5cGUgPSBnZXRQcm9wVHlwZShwcm9wVmFsdWUpO1xuXG4gICAgICBpZiAocHJvcFR5cGUgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSBgJyArIHByb3BUeXBlICsgJ2AgJyArICgnc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIGBvYmplY3RgLicpKTtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIga2V5IGluIHNoYXBlVHlwZXMpIHtcbiAgICAgICAgdmFyIGNoZWNrZXIgPSBzaGFwZVR5cGVzW2tleV07XG5cbiAgICAgICAgaWYgKCFjaGVja2VyKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZXJyb3IgPSBjaGVja2VyKHByb3BWYWx1ZSwga2V5LCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgJy4nICsga2V5LCBSZWFjdFByb3BUeXBlc1NlY3JldF8xKTtcblxuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVN0cmljdFNoYXBlVHlwZUNoZWNrZXIoc2hhcGVUeXBlcykge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcbiAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG5cbiAgICAgIGlmIChwcm9wVHlwZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiB0eXBlIGAnICsgcHJvcFR5cGUgKyAnYCAnICsgKCdzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgYG9iamVjdGAuJykpO1xuICAgICAgfSAvLyBXZSBuZWVkIHRvIGNoZWNrIGFsbCBrZXlzIGluIGNhc2Ugc29tZSBhcmUgcmVxdWlyZWQgYnV0IG1pc3NpbmcgZnJvbVxuICAgICAgLy8gcHJvcHMuXG5cblxuICAgICAgdmFyIGFsbEtleXMgPSBvYmplY3RBc3NpZ24oe30sIHByb3BzW3Byb3BOYW1lXSwgc2hhcGVUeXBlcyk7XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBhbGxLZXlzKSB7XG4gICAgICAgIHZhciBjaGVja2VyID0gc2hhcGVUeXBlc1trZXldO1xuXG4gICAgICAgIGlmICghY2hlY2tlcikge1xuICAgICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Aga2V5IGAnICsga2V5ICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AuJyArICdcXG5CYWQgb2JqZWN0OiAnICsgSlNPTi5zdHJpbmdpZnkocHJvcHNbcHJvcE5hbWVdLCBudWxsLCAnICAnKSArICdcXG5WYWxpZCBrZXlzOiAnICsgSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmtleXMoc2hhcGVUeXBlcyksIG51bGwsICcgICcpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBlcnJvciA9IGNoZWNrZXIocHJvcFZhbHVlLCBrZXksIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUgKyAnLicgKyBrZXksIFJlYWN0UHJvcFR5cGVzU2VjcmV0XzEpO1xuXG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gaXNOb2RlKHByb3BWYWx1ZSkge1xuICAgIHN3aXRjaCAoX3R5cGVvZihwcm9wVmFsdWUpKSB7XG4gICAgICBjYXNlICdudW1iZXInOlxuICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIGNhc2UgJ3VuZGVmaW5lZCc6XG4gICAgICAgIHJldHVybiB0cnVlO1xuXG4gICAgICBjYXNlICdib29sZWFuJzpcbiAgICAgICAgcmV0dXJuICFwcm9wVmFsdWU7XG5cbiAgICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHByb3BWYWx1ZSkpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcFZhbHVlLmV2ZXJ5KGlzTm9kZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocHJvcFZhbHVlID09PSBudWxsIHx8IGlzVmFsaWRFbGVtZW50KHByb3BWYWx1ZSkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBpdGVyYXRvckZuID0gZ2V0SXRlcmF0b3JGbihwcm9wVmFsdWUpO1xuXG4gICAgICAgIGlmIChpdGVyYXRvckZuKSB7XG4gICAgICAgICAgdmFyIGl0ZXJhdG9yID0gaXRlcmF0b3JGbi5jYWxsKHByb3BWYWx1ZSk7XG4gICAgICAgICAgdmFyIHN0ZXA7XG5cbiAgICAgICAgICBpZiAoaXRlcmF0b3JGbiAhPT0gcHJvcFZhbHVlLmVudHJpZXMpIHtcbiAgICAgICAgICAgIHdoaWxlICghKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmUpIHtcbiAgICAgICAgICAgICAgaWYgKCFpc05vZGUoc3RlcC52YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gSXRlcmF0b3Igd2lsbCBwcm92aWRlIGVudHJ5IFtrLHZdIHR1cGxlcyByYXRoZXIgdGhhbiB2YWx1ZXMuXG4gICAgICAgICAgICB3aGlsZSAoIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lKSB7XG4gICAgICAgICAgICAgIHZhciBlbnRyeSA9IHN0ZXAudmFsdWU7XG5cbiAgICAgICAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgICAgICAgaWYgKCFpc05vZGUoZW50cnlbMV0pKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaXNTeW1ib2wocHJvcFR5cGUsIHByb3BWYWx1ZSkge1xuICAgIC8vIE5hdGl2ZSBTeW1ib2wuXG4gICAgaWYgKHByb3BUeXBlID09PSAnc3ltYm9sJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSAvLyBmYWxzeSB2YWx1ZSBjYW4ndCBiZSBhIFN5bWJvbFxuXG5cbiAgICBpZiAoIXByb3BWYWx1ZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gLy8gMTkuNC4zLjUgU3ltYm9sLnByb3RvdHlwZVtAQHRvU3RyaW5nVGFnXSA9PT0gJ1N5bWJvbCdcblxuXG4gICAgaWYgKHByb3BWYWx1ZVsnQEB0b1N0cmluZ1RhZyddID09PSAnU3ltYm9sJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSAvLyBGYWxsYmFjayBmb3Igbm9uLXNwZWMgY29tcGxpYW50IFN5bWJvbHMgd2hpY2ggYXJlIHBvbHlmaWxsZWQuXG5cblxuICAgIGlmICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIHByb3BWYWx1ZSBpbnN0YW5jZW9mIFN5bWJvbCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IC8vIEVxdWl2YWxlbnQgb2YgYHR5cGVvZmAgYnV0IHdpdGggc3BlY2lhbCBoYW5kbGluZyBmb3IgYXJyYXkgYW5kIHJlZ2V4cC5cblxuXG4gIGZ1bmN0aW9uIGdldFByb3BUeXBlKHByb3BWYWx1ZSkge1xuICAgIHZhciBwcm9wVHlwZSA9IF90eXBlb2YocHJvcFZhbHVlKTtcblxuICAgIGlmIChBcnJheS5pc0FycmF5KHByb3BWYWx1ZSkpIHtcbiAgICAgIHJldHVybiAnYXJyYXknO1xuICAgIH1cblxuICAgIGlmIChwcm9wVmFsdWUgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICAgIC8vIE9sZCB3ZWJraXRzIChhdCBsZWFzdCB1bnRpbCBBbmRyb2lkIDQuMCkgcmV0dXJuICdmdW5jdGlvbicgcmF0aGVyIHRoYW5cbiAgICAgIC8vICdvYmplY3QnIGZvciB0eXBlb2YgYSBSZWdFeHAuIFdlJ2xsIG5vcm1hbGl6ZSB0aGlzIGhlcmUgc28gdGhhdCAvYmxhL1xuICAgICAgLy8gcGFzc2VzIFByb3BUeXBlcy5vYmplY3QuXG4gICAgICByZXR1cm4gJ29iamVjdCc7XG4gICAgfVxuXG4gICAgaWYgKGlzU3ltYm9sKHByb3BUeXBlLCBwcm9wVmFsdWUpKSB7XG4gICAgICByZXR1cm4gJ3N5bWJvbCc7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb3BUeXBlO1xuICB9IC8vIFRoaXMgaGFuZGxlcyBtb3JlIHR5cGVzIHRoYW4gYGdldFByb3BUeXBlYC4gT25seSB1c2VkIGZvciBlcnJvciBtZXNzYWdlcy5cbiAgLy8gU2VlIGBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcmAuXG5cblxuICBmdW5jdGlvbiBnZXRQcmVjaXNlVHlwZShwcm9wVmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHByb3BWYWx1ZSA9PT0gJ3VuZGVmaW5lZCcgfHwgcHJvcFZhbHVlID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gJycgKyBwcm9wVmFsdWU7XG4gICAgfVxuXG4gICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcblxuICAgIGlmIChwcm9wVHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGlmIChwcm9wVmFsdWUgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgICAgIHJldHVybiAnZGF0ZSc7XG4gICAgICB9IGVsc2UgaWYgKHByb3BWYWx1ZSBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgICAgICByZXR1cm4gJ3JlZ2V4cCc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb3BUeXBlO1xuICB9IC8vIFJldHVybnMgYSBzdHJpbmcgdGhhdCBpcyBwb3N0Zml4ZWQgdG8gYSB3YXJuaW5nIGFib3V0IGFuIGludmFsaWQgdHlwZS5cbiAgLy8gRm9yIGV4YW1wbGUsIFwidW5kZWZpbmVkXCIgb3IgXCJvZiB0eXBlIGFycmF5XCJcblxuXG4gIGZ1bmN0aW9uIGdldFBvc3RmaXhGb3JUeXBlV2FybmluZyh2YWx1ZSkge1xuICAgIHZhciB0eXBlID0gZ2V0UHJlY2lzZVR5cGUodmFsdWUpO1xuXG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICBjYXNlICdhcnJheSc6XG4gICAgICBjYXNlICdvYmplY3QnOlxuICAgICAgICByZXR1cm4gJ2FuICcgKyB0eXBlO1xuXG4gICAgICBjYXNlICdib29sZWFuJzpcbiAgICAgIGNhc2UgJ2RhdGUnOlxuICAgICAgY2FzZSAncmVnZXhwJzpcbiAgICAgICAgcmV0dXJuICdhICcgKyB0eXBlO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gdHlwZTtcbiAgICB9XG4gIH0gLy8gUmV0dXJucyBjbGFzcyBuYW1lIG9mIHRoZSBvYmplY3QsIGlmIGFueS5cblxuXG4gIGZ1bmN0aW9uIGdldENsYXNzTmFtZShwcm9wVmFsdWUpIHtcbiAgICBpZiAoIXByb3BWYWx1ZS5jb25zdHJ1Y3RvciB8fCAhcHJvcFZhbHVlLmNvbnN0cnVjdG9yLm5hbWUpIHtcbiAgICAgIHJldHVybiBBTk9OWU1PVVM7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb3BWYWx1ZS5jb25zdHJ1Y3Rvci5uYW1lO1xuICB9XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBjaGVja1Byb3BUeXBlc18xO1xuICBSZWFjdFByb3BUeXBlcy5yZXNldFdhcm5pbmdDYWNoZSA9IGNoZWNrUHJvcFR5cGVzXzEucmVzZXRXYXJuaW5nQ2FjaGU7XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG52YXIgZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zID0gZnVuY3Rpb24gZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXRfMSkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgKyAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJyk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG5cbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cblxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG5cbnZhciBwcm9wVHlwZXMgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlKSB7XG4gIC8qKlxuICAgKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAgICpcbiAgICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gICAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAgICovXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdmFyIFJlYWN0SXMgPSByZWFjdElzOyAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG5cbiAgICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5V2l0aFR5cGVDaGVja2VycyhSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG4gIH0gZWxzZSB7XG4gICAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5V2l0aFRocm93aW5nU2hpbXMoKTtcbiAgfVxufSk7XG5cbmZ1bmN0aW9uIE1pbmltYWwoX3JlZikge1xuICB2YXIgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBhY3Rpb24gPSBfcmVmLmFjdGlvbixcbiAgICAgIHN1Ym1pdFRleHQgPSBfcmVmLnN1Ym1pdFRleHQsXG4gICAgICBlbWFpbFBsYWNlaG9sZGVyID0gX3JlZi5lbWFpbFBsYWNlaG9sZGVyLFxuICAgICAgbmFtZVBsYWNlaG9sZGVyID0gX3JlZi5uYW1lUGxhY2Vob2xkZXIsXG4gICAgICBoaWRlTmFtZSA9IF9yZWYuaGlkZU5hbWUsXG4gICAgICBzaG93TGFiZWxzID0gX3JlZi5zaG93TGFiZWxzLFxuICAgICAgbmFtZUxhYmVsID0gX3JlZi5uYW1lTGFiZWwsXG4gICAgICBlbWFpbExhYmVsID0gX3JlZi5lbWFpbExhYmVsLFxuICAgICAgbmV3VGFiID0gX3JlZi5uZXdUYWIsXG4gICAgICBmb3JtSWQgPSBfcmVmLmZvcm1JZDtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiLCB7XG4gICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgbWV0aG9kOiBcInBvc3RcIixcbiAgICB0YXJnZXQ6IG5ld1RhYiA/ICdfYmxhbmsnIDogJ19zZWxmJyxcbiAgICBcImRhdGEtc3YtZm9ybVwiOiBmb3JtSWQsXG4gICAgY2xhc3NOYW1lOiBjbGFzc05hbWVcbiAgfSwgIWhpZGVOYW1lICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBzaG93TGFiZWxzID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB7XG4gICAgaHRtbEZvcjogXCJjay1maXJzdC1uYW1lXCJcbiAgfSwgbmFtZUxhYmVsKSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgIHR5cGU6IFwidGV4dFwiLFxuICAgIG5hbWU6IFwiZmllbGRzW2ZpcnN0X25hbWVdXCIsXG4gICAgcGxhY2Vob2xkZXI6IG5hbWVQbGFjZWhvbGRlcixcbiAgICBcImFyaWEtbGFiZWxcIjogbmFtZUxhYmVsLFxuICAgIGlkOiBcImNrLWZpcnN0LW5hbWVcIlxuICB9KSksIHNob3dMYWJlbHMgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHtcbiAgICBodG1sRm9yOiBcImNrLWVtYWlsXCJcbiAgfSwgZW1haWxMYWJlbCkgOiBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICB0eXBlOiBcImVtYWlsXCIsXG4gICAgbmFtZTogXCJlbWFpbF9hZGRyZXNzXCIsXG4gICAgcGxhY2Vob2xkZXI6IGVtYWlsUGxhY2Vob2xkZXIsXG4gICAgXCJhcmlhLWxhYmVsXCI6IGVtYWlsTGFiZWwsXG4gICAgaWQ6IFwiY2stZW1haWxcIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwge1xuICAgIHR5cGU6IFwic3VibWl0XCJcbiAgfSwgc3VibWl0VGV4dCkpO1xufVxuXG52YXIgZSQxID0gW10sXG4gICAgdCQxID0gW107XG5mdW5jdGlvbiBpbmplY3Rvcl9iZjFiYTdlMCAobiwgcikge1xuICBpZiAobiAmJiBcInVuZGVmaW5lZFwiICE9IHR5cGVvZiBkb2N1bWVudCkge1xuICAgIHZvaWQgMCA9PT0gciAmJiAociA9IHt9KTtcbiAgICB2YXIgZCxcbiAgICAgICAgYSA9ICEwID09PSByLnByZXBlbmQgPyBcInByZXBlbmRcIiA6IFwiYXBwZW5kXCIsXG4gICAgICAgIGkgPSBcInVuZGVmaW5lZFwiICE9IHR5cGVvZiByLnNpbmdsZVRhZyAmJiByLnNpbmdsZVRhZyxcbiAgICAgICAgcyA9IFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIHIuY29udGFpbmVyID8gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihyLmNvbnRhaW5lcikgOiBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF07XG5cbiAgICBpZiAoaSkge1xuICAgICAgdmFyIHUgPSBlJDEuaW5kZXhPZihzKTtcbiAgICAgIC0xID09PSB1ICYmICh1ID0gZSQxLnB1c2gocykgLSAxLCB0JDFbdV0gPSB7fSksIGQgPSB0JDFbdV0gJiYgdCQxW3VdW2FdID8gdCQxW3VdW2FdIDogdCQxW3VdW2FdID0gbygpO1xuICAgIH0gZWxzZSBkID0gbygpO1xuXG4gICAgNjUyNzkgPT09IG4uY2hhckNvZGVBdCgwKSAmJiAobiA9IG4uc3Vic3RyaW5nKDEpKSwgZC5zdHlsZVNoZWV0ID8gZC5zdHlsZVNoZWV0LmNzc1RleHQgKz0gbiA6IGQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUobikpO1xuICB9XG5cbiAgZnVuY3Rpb24gbygpIHtcbiAgICB2YXIgZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgICBpZiAoZS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwidGV4dC9jc3NcIiksIHIuYXR0cmlidXRlcykgZm9yICh2YXIgdCA9IE9iamVjdC5rZXlzKHIuYXR0cmlidXRlcyksIG4gPSAwOyBuIDwgdC5sZW5ndGg7IG4rKykge1xuICAgICAgZS5zZXRBdHRyaWJ1dGUodFtuXSwgci5hdHRyaWJ1dGVzW3Rbbl1dKTtcbiAgICB9XG4gICAgdmFyIGQgPSBcInByZXBlbmRcIiA9PT0gYSA/IFwiYWZ0ZXJiZWdpblwiIDogXCJiZWZvcmVlbmRcIjtcbiAgICByZXR1cm4gcy5pbnNlcnRBZGphY2VudEVsZW1lbnQoZCwgZSksIGU7XG4gIH1cbn1cblxuY29uc3QgY3NzXzU3NjU4MzI2ID0gXCIuZm9ybWtpdC1mb3JtLmNsYXJlICoge1xcblxcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUge1xcblxcdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xcblxcdC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgbGVnZW5kIHtcXG5cXHRib3JkZXI6IG5vbmU7XFxuXFx0Zm9udC1zaXplOiBpbmhlcml0O1xcblxcdG1hcmdpbi1ib3R0b206IDEwcHg7XFxuXFx0cGFkZGluZzogMDtcXG5cXHRwb3NpdGlvbjogcmVsYXRpdmU7XFxuXFx0ZGlzcGxheTogdGFibGU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgZmllbGRzZXQge1xcblxcdGJvcmRlcjogMDtcXG5cXHRwYWRkaW5nOiAwLjAxZW0gMCAwIDA7XFxuXFx0bWFyZ2luOiAwO1xcblxcdG1pbi13aWR0aDogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSBib2R5Om5vdCg6LW1vei1oYW5kbGVyLWJsb2NrZWQpIGZpZWxkc2V0IHtcXG5cXHRkaXNwbGF5OiB0YWJsZS1jZWxsO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlIGgxLFxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgaDIsXFxuLmZvcm1raXQtZm9ybS5jbGFyZSBoMyxcXG4uZm9ybWtpdC1mb3JtLmNsYXJlIGg0LFxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgaDUsXFxuLmZvcm1raXQtZm9ybS5jbGFyZSBoNiB7XFxuXFx0Y29sb3I6IGluaGVyaXQ7XFxuXFx0Zm9udC1zaXplOiBpbmhlcml0O1xcblxcdGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlIHAge1xcblxcdGNvbG9yOiBpbmhlcml0O1xcblxcdGZvbnQtc2l6ZTogaW5oZXJpdDtcXG5cXHRmb250LXdlaWdodDogaW5oZXJpdDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSBvbDpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSxcXG4uZm9ybWtpdC1mb3JtLmNsYXJlIHVsOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgYmxvY2txdW90ZTpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSB7XFxuXFx0dGV4dC1hbGlnbjogbGVmdDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSBwOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgaHI6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5jbGFyZSBibG9ja3F1b3RlOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgb2w6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5jbGFyZSB1bDpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSB7XFxuXFx0Y29sb3I6IGluaGVyaXQ7XFxuXFx0Zm9udC1zdHlsZTogaW5pdGlhbDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZVtkYXRhLWZvcm1hdD1cXFwibW9kYWxcXFwiXSB7XFxuXFx0ZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZVtkYXRhLWZvcm1hdD1cXFwic2xpZGUgaW5cXFwiXSB7XFxuXFx0ZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZVtkYXRhLWZvcm1hdD1cXFwic3RpY2t5IGJhclxcXCJdIHtcXG5cXHRkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1zdGlja3ktYmFyIC5mb3Jta2l0LWZvcm0uY2xhcmVbZGF0YS1mb3JtYXQ9XFxcInN0aWNreSBiYXJcXFwiXSB7XFxuXFx0ZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgLmZvcm1raXQtaW5wdXQsXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1zZWxlY3QsXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1jaGVja2JveGVzIHtcXG5cXHR3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1idXR0b24sXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1zdWJtaXQge1xcblxcdGJvcmRlcjogMDtcXG5cXHRib3JkZXItcmFkaXVzOiA1cHg7XFxuXFx0Y29sb3I6ICNmZmZmZmY7XFxuXFx0Y3Vyc29yOiBwb2ludGVyO1xcblxcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG5cXHR0ZXh0LWFsaWduOiBjZW50ZXI7XFxuXFx0Zm9udC1zaXplOiAxNXB4O1xcblxcdGZvbnQtd2VpZ2h0OiA1MDA7XFxuXFx0Y3Vyc29yOiBwb2ludGVyO1xcblxcdG1hcmdpbi1ib3R0b206IDE1cHg7XFxuXFx0b3ZlcmZsb3c6IGhpZGRlbjtcXG5cXHRwYWRkaW5nOiAwO1xcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXG5cXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LWJ1dHRvbjpob3ZlcixcXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LXN1Ym1pdDpob3ZlcixcXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LWJ1dHRvbjpmb2N1cyxcXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LXN1Ym1pdDpmb2N1cyB7XFxuXFx0b3V0bGluZTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1idXR0b246aG92ZXIgPiBzcGFuLFxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgLmZvcm1raXQtc3VibWl0OmhvdmVyID4gc3BhbixcXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LWJ1dHRvbjpmb2N1cyA+IHNwYW4sXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1zdWJtaXQ6Zm9jdXMgPiBzcGFuIHtcXG5cXHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgLmZvcm1raXQtYnV0dG9uID4gc3BhbixcXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LXN1Ym1pdCA+IHNwYW4ge1xcblxcdGRpc3BsYXk6IGJsb2NrO1xcblxcdC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW4tb3V0O1xcblxcdHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluLW91dDtcXG5cXHRwYWRkaW5nOiAxMnB4IDI0cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgLmZvcm1raXQtaW5wdXQge1xcblxcdGJhY2tncm91bmQ6ICNmZmZmZmY7XFxuXFx0Zm9udC1zaXplOiAxNXB4O1xcblxcdHBhZGRpbmc6IDEycHg7XFxuXFx0Ym9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG5cXHQtd2Via2l0LWZsZXg6IDEgMCBhdXRvO1xcblxcdC1tcy1mbGV4OiAxIDAgYXV0bztcXG5cXHRmbGV4OiAxIDAgYXV0bztcXG5cXHRsaW5lLWhlaWdodDogMS40O1xcblxcdG1hcmdpbjogMDtcXG5cXHQtd2Via2l0LXRyYW5zaXRpb246IGJvcmRlci1jb2xvciBlYXNlLW91dCAzMDBtcztcXG5cXHR0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgZWFzZS1vdXQgMzAwbXM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgLmZvcm1raXQtaW5wdXQ6Zm9jdXMge1xcblxcdG91dGxpbmU6IG5vbmU7XFxuXFx0Ym9yZGVyLWNvbG9yOiAjMTY3N2JlO1xcblxcdC13ZWJraXQtdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2UgMzAwbXM7XFxuXFx0dHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2UgMzAwbXM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgLmZvcm1raXQtaW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xcblxcdGNvbG9yOiBpbmhlcml0O1xcblxcdG9wYWNpdHk6IDAuODtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1pbnB1dDo6LW1vei1wbGFjZWhvbGRlciB7XFxuXFx0Y29sb3I6IGluaGVyaXQ7XFxuXFx0b3BhY2l0eTogMC44O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LWlucHV0Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XFxuXFx0Y29sb3I6IGluaGVyaXQ7XFxuXFx0b3BhY2l0eTogMC44O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LWlucHV0OjpwbGFjZWhvbGRlciB7XFxuXFx0Y29sb3I6IGluaGVyaXQ7XFxuXFx0b3BhY2l0eTogMC44O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlW2RhdGEtZ3JvdXA9XFxcImRyb3Bkb3duXFxcIl0ge1xcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXG5cXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuXFx0d2lkdGg6IDEwMCU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmVbZGF0YS1ncm91cD1cXFwiZHJvcGRvd25cXFwiXTo6YmVmb3JlIHtcXG5cXHRjb250ZW50OiBcXFwiXFxcIjtcXG5cXHR0b3A6IGNhbGMoNTAlIC0gMi41cHgpO1xcblxcdHJpZ2h0OiAxMHB4O1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHRwb2ludGVyLWV2ZW50czogbm9uZTtcXG5cXHRib3JkZXItY29sb3I6ICM0ZjRmNGYgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XFxuXFx0Ym9yZGVyLXN0eWxlOiBzb2xpZDtcXG5cXHRib3JkZXItd2lkdGg6IDZweCA2cHggMCA2cHg7XFxuXFx0aGVpZ2h0OiAwO1xcblxcdHdpZHRoOiAwO1xcblxcdHotaW5kZXg6IDk5OTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZVtkYXRhLWdyb3VwPVxcXCJkcm9wZG93blxcXCJdIHNlbGVjdCB7XFxuXFx0aGVpZ2h0OiBhdXRvO1xcblxcdHdpZHRoOiAxMDAlO1xcblxcdGN1cnNvcjogcG9pbnRlcjtcXG5cXHRjb2xvcjogIzMzMzMzMztcXG5cXHRsaW5lLWhlaWdodDogMS40O1xcblxcdG1hcmdpbi1ib3R0b206IDA7XFxuXFx0cGFkZGluZzogMCA2cHg7XFxuXFx0LXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcblxcdC1tb3otYXBwZWFyYW5jZTogbm9uZTtcXG5cXHRhcHBlYXJhbmNlOiBub25lO1xcblxcdGZvbnQtc2l6ZTogMTVweDtcXG5cXHRwYWRkaW5nOiAxMnB4O1xcblxcdHBhZGRpbmctcmlnaHQ6IDI1cHg7XFxuXFx0Ym9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG5cXHRiYWNrZ3JvdW5kOiAjZmZmZmZmO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlW2RhdGEtZ3JvdXA9XFxcImRyb3Bkb3duXFxcIl0gc2VsZWN0OmZvY3VzIHtcXG5cXHRvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSB7XFxuXFx0dGV4dC1hbGlnbjogbGVmdDtcXG5cXHRtYXJnaW46IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmVbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0ge1xcblxcdG1hcmdpbi1ib3R0b206IDEwcHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmVbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gKiB7XFxuXFx0Y3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXVtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdOmxhc3Qtb2YtdHlwZSB7XFxuXFx0bWFyZ2luLWJvdHRvbTogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZVtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl1bZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdIHtcXG5cXHRkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXVtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl0gKyBsYWJlbDo6YWZ0ZXIge1xcblxcdGNvbnRlbnQ6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmVbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gaW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXTpjaGVja2VkICsgbGFiZWw6OmFmdGVyIHtcXG5cXHRib3JkZXItY29sb3I6ICNmZmZmZmY7XFxuXFx0Y29udGVudDogXFxcIlxcXCI7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmVbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gaW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXTpjaGVja2VkICsgbGFiZWw6OmJlZm9yZSB7XFxuXFx0YmFja2dyb3VuZDogIzEwYmY3YTtcXG5cXHRib3JkZXItY29sb3I6ICMxMGJmN2E7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmVbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWwge1xcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXG5cXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuXFx0cGFkZGluZy1sZWZ0OiAyOHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXVtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGxhYmVsOjpiZWZvcmUsXFxuLmZvcm1raXQtZm9ybS5jbGFyZVtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl1bZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbDo6YWZ0ZXIge1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHRjb250ZW50OiBcXFwiXFxcIjtcXG5cXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmVbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWw6OmJlZm9yZSB7XFxuXFx0aGVpZ2h0OiAxNnB4O1xcblxcdHdpZHRoOiAxNnB4O1xcblxcdGJvcmRlcjogMXB4IHNvbGlkICNlM2UzZTM7XFxuXFx0YmFja2dyb3VuZDogI2ZmZmZmZjtcXG5cXHRsZWZ0OiAwcHg7XFxuXFx0dG9wOiAzcHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmVbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWw6OmFmdGVyIHtcXG5cXHRoZWlnaHQ6IDRweDtcXG5cXHR3aWR0aDogOHB4O1xcblxcdGJvcmRlci1sZWZ0OiAycHggc29saWQgIzRkNGQ0ZDtcXG5cXHRib3JkZXItYm90dG9tOiAycHggc29saWQgIzRkNGQ0ZDtcXG5cXHQtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XFxuXFx0LW1zLXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XFxuXFx0dHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcXG5cXHRsZWZ0OiA0cHg7XFxuXFx0dG9wOiA4cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgLmZvcm1raXQtYWxlcnQge1xcblxcdGJhY2tncm91bmQ6ICNmOWZhZmI7XFxuXFx0Ym9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG5cXHRib3JkZXItcmFkaXVzOiA1cHg7XFxuXFx0LXdlYmtpdC1mbGV4OiAxIDAgYXV0bztcXG5cXHQtbXMtZmxleDogMSAwIGF1dG87XFxuXFx0ZmxleDogMSAwIGF1dG87XFxuXFx0bGlzdC1zdHlsZTogbm9uZTtcXG5cXHRtYXJnaW46IDI1cHggYXV0bztcXG5cXHRwYWRkaW5nOiAxMnB4O1xcblxcdHRleHQtYWxpZ246IGNlbnRlcjtcXG5cXHR3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1hbGVydDplbXB0eSB7XFxuXFx0ZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1hbGVydC1zdWNjZXNzIHtcXG5cXHRiYWNrZ3JvdW5kOiAjZDNmYmViO1xcblxcdGJvcmRlci1jb2xvcjogIzEwYmY3YTtcXG5cXHRjb2xvcjogIzBjOTA1YztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1hbGVydC1lcnJvciB7XFxuXFx0YmFja2dyb3VuZDogI2ZkZThlMjtcXG5cXHRib3JkZXItY29sb3I6ICNmMjY0M2I7XFxuXFx0Y29sb3I6ICNlYTQxMTA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgLmZvcm1raXQtc3Bpbm5lciB7XFxuXFx0ZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuXFx0ZGlzcGxheTogLXdlYmtpdC1mbGV4O1xcblxcdGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcblxcdGRpc3BsYXk6IGZsZXg7XFxuXFx0aGVpZ2h0OiAwcHg7XFxuXFx0d2lkdGg6IDBweDtcXG5cXHRtYXJnaW46IDAgYXV0bztcXG5cXHRwb3NpdGlvbjogYWJzb2x1dGU7XFxuXFx0dG9wOiAwO1xcblxcdGxlZnQ6IDA7XFxuXFx0cmlnaHQ6IDA7XFxuXFx0d2lkdGg6IDBweDtcXG5cXHRvdmVyZmxvdzogaGlkZGVuO1xcblxcdHRleHQtYWxpZ246IGNlbnRlcjtcXG5cXHQtd2Via2l0LXRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluLW91dDtcXG5cXHR0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgLmZvcm1raXQtc3Bpbm5lciA+IGRpdiB7XFxuXFx0bWFyZ2luOiBhdXRvO1xcblxcdHdpZHRoOiAxMnB4O1xcblxcdGhlaWdodDogMTJweDtcXG5cXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcblxcdG9wYWNpdHk6IDAuMztcXG5cXHRib3JkZXItcmFkaXVzOiAxMDAlO1xcblxcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG5cXHQtd2Via2l0LWFuaW1hdGlvbjogZm9ybWtpdC1ib3VuY2VkZWxheS1mb3Jta2l0LWZvcm0tZGF0YS11aWQtZTg0Mzc3ODNhZC0gMS40cyBpbmZpbml0ZSBlYXNlLWluLW91dCBib3RoO1xcblxcdGFuaW1hdGlvbjogZm9ybWtpdC1ib3VuY2VkZWxheS1mb3Jta2l0LWZvcm0tZGF0YS11aWQtZTg0Mzc3ODNhZC0gMS40cyBpbmZpbml0ZSBlYXNlLWluLW91dCBib3RoO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LXNwaW5uZXIgPiBkaXY6bnRoLWNoaWxkKDEpIHtcXG5cXHQtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuMzJzO1xcblxcdGFuaW1hdGlvbi1kZWxheTogLTAuMzJzO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LXNwaW5uZXIgPiBkaXY6bnRoLWNoaWxkKDIpIHtcXG5cXHQtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuMTZzO1xcblxcdGFuaW1hdGlvbi1kZWxheTogLTAuMTZzO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LXN1Ym1pdFtkYXRhLWFjdGl2ZV0gLmZvcm1raXQtc3Bpbm5lciB7XFxuXFx0b3BhY2l0eTogMTtcXG5cXHRoZWlnaHQ6IDEwMCU7XFxuXFx0d2lkdGg6IDUwcHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmUgLmZvcm1raXQtc3VibWl0W2RhdGEtYWN0aXZlXSAuZm9ybWtpdC1zcGlubmVyIH4gc3BhbiB7XFxuXFx0b3BhY2l0eTogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1wb3dlcmVkLWJ5W2RhdGEtYWN0aXZlPVxcXCJmYWxzZVxcXCJdIHtcXG5cXHRvcGFjaXR5OiAwLjM1O1xcbn1cXG5cXG5ALXdlYmtpdC1rZXlmcmFtZXMgZm9ybWtpdC1ib3VuY2VkZWxheS1mb3Jta2l0LWZvcm0tZGF0YS11aWQtZTg0Mzc3ODNhZC0ge1xcblxcdDAlLCA4MCUsIDEwMCUge1xcblxcdFxcdC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG5cXHRcXHQtbXMtdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG5cXHRcXHR0cmFuc2Zvcm06IHNjYWxlKDApO1xcblxcdH1cXG5cXHQ0MCUge1xcblxcdFxcdC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG5cXHRcXHQtbXMtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG5cXHRcXHR0cmFuc2Zvcm06IHNjYWxlKDEpO1xcblxcdH1cXG59XFxuXFxuQGtleWZyYW1lcyBmb3Jta2l0LWJvdW5jZWRlbGF5LWZvcm1raXQtZm9ybS1kYXRhLXVpZC1lODQzNzc4M2FkLSB7XFxuXFx0MCUsIDgwJSwgMTAwJSB7XFxuXFx0XFx0LXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xcblxcdFxcdC1tcy10cmFuc2Zvcm06IHNjYWxlKDApO1xcblxcdFxcdHRyYW5zZm9ybTogc2NhbGUoMCk7XFxuXFx0fVxcblxcdDQwJSB7XFxuXFx0XFx0LXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xcblxcdFxcdC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xcblxcdFxcdHRyYW5zZm9ybTogc2NhbGUoMSk7XFxuXFx0fVxcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlIGJsb2NrcXVvdGUge1xcblxcdHBhZGRpbmc6IDEwcHggMjBweDtcXG5cXHRtYXJnaW46IDAgMCAyMHB4O1xcblxcdGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2UxZTFlMTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSB7XFxuXFx0bWF4LXdpZHRoOiA3MDBweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZVtkYXRhLXN0eWxlPVxcXCJjbGVhblxcXCJdIHtcXG5cXHR3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1maWVsZHNbZGF0YS1zdGFja2VkPVxcXCJmYWxzZVxcXCJdIHtcXG5cXHRkaXNwbGF5OiAtd2Via2l0LWJveDtcXG5cXHRkaXNwbGF5OiAtd2Via2l0LWZsZXg7XFxuXFx0ZGlzcGxheTogLW1zLWZsZXhib3g7XFxuXFx0ZGlzcGxheTogZmxleDtcXG5cXHQtd2Via2l0LWZsZXgtd3JhcDogd3JhcDtcXG5cXHQtbXMtZmxleC13cmFwOiB3cmFwO1xcblxcdGZsZXgtd3JhcDogd3JhcDtcXG5cXHRtYXJnaW46IDAgYXV0bztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jbGFyZSAuZm9ybWtpdC1maWVsZCxcXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LXN1Ym1pdCB7XFxuXFx0bWFyZ2luOiAwIDAgMTVweCAwO1xcblxcdC13ZWJraXQtZmxleDogMSAwIDEwMCU7XFxuXFx0LW1zLWZsZXg6IDEgMCAxMDAlO1xcblxcdGZsZXg6IDEgMCAxMDAlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlIC5mb3Jta2l0LXBvd2VyZWQtYnkge1xcblxcdGNvbG9yOiAjN2Q3ZDdkO1xcblxcdGRpc3BsYXk6IGJsb2NrO1xcblxcdGZvbnQtc2l6ZTogMTJweDtcXG5cXHRtYXJnaW46IDA7XFxuXFx0dGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlW21pbi13aWR0aH49XFxcIjcwMFxcXCJdW2RhdGEtc3R5bGU9XFxcImNsZWFuXFxcIl0sXFxuLmZvcm1raXQtZm9ybS5jbGFyZVttaW4td2lkdGh+PVxcXCI4MDBcXFwiXVtkYXRhLXN0eWxlPVxcXCJjbGVhblxcXCJdIHtcXG5cXHRwYWRkaW5nOiAxMHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlW21pbi13aWR0aH49XFxcIjcwMFxcXCJdIC5mb3Jta2l0LWZpZWxkc1tkYXRhLXN0YWNrZWQ9XFxcImZhbHNlXFxcIl0sXFxuLmZvcm1raXQtZm9ybS5jbGFyZVttaW4td2lkdGh+PVxcXCI4MDBcXFwiXSAuZm9ybWtpdC1maWVsZHNbZGF0YS1zdGFja2VkPVxcXCJmYWxzZVxcXCJdIHtcXG5cXHRtYXJnaW4tbGVmdDogLTVweDtcXG5cXHRtYXJnaW4tcmlnaHQ6IC01cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2xhcmVbbWluLXdpZHRofj1cXFwiNzAwXFxcIl0gLmZvcm1raXQtZmllbGRzW2RhdGEtc3RhY2tlZD1cXFwiZmFsc2VcXFwiXSAuZm9ybWtpdC1maWVsZCxcXG4uZm9ybWtpdC1mb3JtLmNsYXJlW21pbi13aWR0aH49XFxcIjgwMFxcXCJdIC5mb3Jta2l0LWZpZWxkc1tkYXRhLXN0YWNrZWQ9XFxcImZhbHNlXFxcIl0gLmZvcm1raXQtZmllbGQsXFxuLmZvcm1raXQtZm9ybS5jbGFyZVttaW4td2lkdGh+PVxcXCI3MDBcXFwiXSAuZm9ybWtpdC1maWVsZHNbZGF0YS1zdGFja2VkPVxcXCJmYWxzZVxcXCJdIC5mb3Jta2l0LXN1Ym1pdCxcXG4uZm9ybWtpdC1mb3JtLmNsYXJlW21pbi13aWR0aH49XFxcIjgwMFxcXCJdIC5mb3Jta2l0LWZpZWxkc1tkYXRhLXN0YWNrZWQ9XFxcImZhbHNlXFxcIl0gLmZvcm1raXQtc3VibWl0IHtcXG5cXHRtYXJnaW46IDAgNXB4IDE1cHggNXB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNsYXJlW21pbi13aWR0aH49XFxcIjcwMFxcXCJdIC5mb3Jta2l0LWZpZWxkc1tkYXRhLXN0YWNrZWQ9XFxcImZhbHNlXFxcIl0gLmZvcm1raXQtZmllbGQsXFxuLmZvcm1raXQtZm9ybS5jbGFyZVttaW4td2lkdGh+PVxcXCI4MDBcXFwiXSAuZm9ybWtpdC1maWVsZHNbZGF0YS1zdGFja2VkPVxcXCJmYWxzZVxcXCJdIC5mb3Jta2l0LWZpZWxkIHtcXG5cXHQtd2Via2l0LWZsZXg6IDEwMCAxIGF1dG87XFxuXFx0LW1zLWZsZXg6IDEwMCAxIGF1dG87XFxuXFx0ZmxleDogMTAwIDEgYXV0bztcXG59XFxuLmZvcm1raXQtZm9ybS5jbGFyZVttaW4td2lkdGh+PVxcXCI3MDBcXFwiXSAuZm9ybWtpdC1maWVsZHNbZGF0YS1zdGFja2VkPVxcXCJmYWxzZVxcXCJdIC5mb3Jta2l0LXN1Ym1pdCxcXG4uZm9ybWtpdC1mb3JtLmNsYXJlW21pbi13aWR0aH49XFxcIjgwMFxcXCJdIC5mb3Jta2l0LWZpZWxkc1tkYXRhLXN0YWNrZWQ9XFxcImZhbHNlXFxcIl0gLmZvcm1raXQtc3VibWl0IHtcXG5cXHQtd2Via2l0LWZsZXg6IDEgMSBhdXRvO1xcblxcdC1tcy1mbGV4OiAxIDEgYXV0bztcXG5cXHRmbGV4OiAxIDEgYXV0bztcXG59XFxuXCI7XG5pbmplY3Rvcl9iZjFiYTdlMChjc3NfNTc2NTgzMjYse1wic2luZ2xlVGFnXCI6dHJ1ZX0pO1xuXG5mdW5jdGlvbiBXYXJuaW5nKF9yZWYpIHtcbiAgdmFyIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2U7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgaWQ6IFwiY2std2FyblwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBib3JkZXI6ICdzb2xpZCBtZWRpdW0gI2NjYycsXG4gICAgICBib3JkZXJSYWRpdXM6ICc0cHgnLFxuICAgICAgYmFja2dyb3VuZDogJyNkZGQnLFxuICAgICAgY29sb3I6ICcjNzc3JyxcbiAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICAgIHBhZGRpbmc6ICcxMHB4J1xuICAgIH1cbiAgfSwgbWVzc2FnZSk7XG59XG5cbnZhciBBTExPV0VEX0ZPUk1BVFMgPSBbJ2lubGluZScsICdtb2RhbCcsICdzbGlkZSBpbiddO1xuXG5mdW5jdGlvbiBDbGFyZShfcmVmKSB7XG4gIHZhciBfUmVhY3QkY3JlYXRlRWxlbWVudDtcblxuICB2YXIgb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgYWN0aW9uID0gX3JlZi5hY3Rpb24sXG4gICAgICBzdWJtaXRUZXh0ID0gX3JlZi5zdWJtaXRUZXh0LFxuICAgICAgZW1haWxQbGFjZWhvbGRlciA9IF9yZWYuZW1haWxQbGFjZWhvbGRlcixcbiAgICAgIG5hbWVQbGFjZWhvbGRlciA9IF9yZWYubmFtZVBsYWNlaG9sZGVyLFxuICAgICAgaGlkZU5hbWUgPSBfcmVmLmhpZGVOYW1lLFxuICAgICAgc2hvd0xhYmVscyA9IF9yZWYuc2hvd0xhYmVscyxcbiAgICAgIG5hbWVMYWJlbCA9IF9yZWYubmFtZUxhYmVsLFxuICAgICAgZW1haWxMYWJlbCA9IF9yZWYuZW1haWxMYWJlbCxcbiAgICAgIG5ld1RhYiA9IF9yZWYubmV3VGFiLFxuICAgICAgZm9ybUlkID0gX3JlZi5mb3JtSWQsXG4gICAgICBmb3JtYXQgPSBfcmVmLmZvcm1hdCxcbiAgICAgIHN0YWNrZWQgPSBfcmVmLnN0YWNrZWQsXG4gICAgICBoaWRlV2FybmluZ3MgPSBfcmVmLmhpZGVXYXJuaW5ncztcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCAhaGlkZVdhcm5pbmdzICYmICFBTExPV0VEX0ZPUk1BVFMuaW5jbHVkZXMoZm9ybWF0KSA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFdhcm5pbmcsIHtcbiAgICBtZXNzYWdlOiBcIlRoaXMgdGVtcGxhdGUgaXMgbm90IGF2YWlsYWJsZSBmb3IgdGhlIGNob3NlbiBmb3JtYXRcIlxuICB9KSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiLCAoX1JlYWN0JGNyZWF0ZUVsZW1lbnQgPSB7XG4gICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgbWV0aG9kOiBcInBvc3RcIixcbiAgICB0YXJnZXQ6IG5ld1RhYiA/ICdfYmxhbmsnIDogJ19zZWxmJyxcbiAgICBjbGFzc05hbWU6IFwic2V2YS1mb3JtIGZvcm1raXQtZm9ybSBjbGFyZSBcIi5jb25jYXQoY2xhc3NOYW1lKVxuICB9LCBfZGVmaW5lUHJvcGVydHkoX1JlYWN0JGNyZWF0ZUVsZW1lbnQsIFwibWV0aG9kXCIsIFwicG9zdFwiKSwgX2RlZmluZVByb3BlcnR5KF9SZWFjdCRjcmVhdGVFbGVtZW50LCBcImRhdGEtc3YtZm9ybVwiLCBmb3JtSWQpLCBfZGVmaW5lUHJvcGVydHkoX1JlYWN0JGNyZWF0ZUVsZW1lbnQsIFwiZGF0YS1mb3JtYXRcIiwgZm9ybWF0KSwgX2RlZmluZVByb3BlcnR5KF9SZWFjdCRjcmVhdGVFbGVtZW50LCBcImRhdGEtdmVyc2lvblwiLCBvcHRpb25zLnZlcnNpb24pLCBfZGVmaW5lUHJvcGVydHkoX1JlYWN0JGNyZWF0ZUVsZW1lbnQsIFwiZGF0YS11aWRcIiwgb3B0aW9ucy51aWQpLCBfZGVmaW5lUHJvcGVydHkoX1JlYWN0JGNyZWF0ZUVsZW1lbnQsIFwiZGF0YS1vcHRpb25zXCIsIEpTT04uc3RyaW5naWZ5KG9wdGlvbnMpKSwgX2RlZmluZVByb3BlcnR5KF9SZWFjdCRjcmVhdGVFbGVtZW50LCBcIm1pbi13aWR0aFwiLCBcIjQwMCA1MDAgNjAwIDcwMCA4MDBcIiksIF9SZWFjdCRjcmVhdGVFbGVtZW50KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIFwiZGF0YS1zdHlsZVwiOiBcImNsZWFuXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtYWxlcnQgZm9ybWtpdC1hbGVydC1lcnJvclwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiZXJyb3JzXCIsXG4gICAgXCJkYXRhLWdyb3VwXCI6IFwiYWxlcnRcIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiZmllbGRzXCIsXG4gICAgXCJkYXRhLXN0YWNrZWRcIjogc3RhY2tlZCxcbiAgICBjbGFzc05hbWU6IFwic2V2YS1maWVsZHMgZm9ybWtpdC1maWVsZHNcIlxuICB9LCAhaGlkZU5hbWUgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIHNob3dMYWJlbHMgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHtcbiAgICBodG1sRm9yOiBcImNrLWZpcnN0LWZvcm1cIlxuICB9LCBuYW1lTGFiZWwpIDogbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWZpZWxkXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtaW5wdXRcIixcbiAgICBcImFyaWEtbGFiZWxcIjogbmFtZUxhYmVsLFxuICAgIG5hbWU6IFwiZmllbGRzW2ZpcnN0X25hbWVdXCIsXG4gICAgcGxhY2Vob2xkZXI6IG5hbWVQbGFjZWhvbGRlcixcbiAgICB0eXBlOiBcInRleHRcIixcbiAgICBzdHlsZToge1xuICAgICAgY29sb3I6ICdyZ2IoMCwgMCwgMCknLFxuICAgICAgYm9yZGVyQ29sb3I6ICdyZ2IoMjI3LCAyMjcsIDIyNyknLFxuICAgICAgYm9yZGVyUmFkaXVzOiAnNHB4JyxcbiAgICAgIGZvbnRXZWlnaHQ6IDQwMFxuICAgIH0sXG4gICAgaWQ6IFwiY2stZmlyc3QtbmFtZVwiXG4gIH0pKSksIHNob3dMYWJlbHMgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHtcbiAgICBodG1sRm9yOiBcImNrLWVtYWlsXCJcbiAgfSwgZW1haWxMYWJlbCkgOiBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtZmllbGRcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1pbnB1dFwiLFxuICAgIFwiYXJpYS1sYWJlbFwiOiBlbWFpbExhYmVsLFxuICAgIG5hbWU6IFwiZW1haWxfYWRkcmVzc1wiLFxuICAgIHBsYWNlaG9sZGVyOiBlbWFpbFBsYWNlaG9sZGVyLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIHR5cGU6IFwiZW1haWxcIixcbiAgICBzdHlsZToge1xuICAgICAgY29sb3I6ICdyZ2IoMCwgMCwgMCknLFxuICAgICAgYm9yZGVyQ29sb3I6ICdyZ2IoMjI3LCAyMjcsIDIyNyknLFxuICAgICAgYm9yZGVyUmFkaXVzOiAnNHB4JyxcbiAgICAgIGZvbnRXZWlnaHQ6IDQwMFxuICAgIH0sXG4gICAgaWQ6IFwiY2stZW1haWxcIlxuICB9KSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHtcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcInN1Ym1pdFwiLFxuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LXN1Ym1pdCBmb3Jta2l0LXN1Ym1pdFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBjb2xvcjogJ3JnYigyNTUsIDI1NSwgMjU1KScsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2IoMjIsIDExOSwgMTkwKScsXG4gICAgICBib3JkZXJSYWRpdXM6ICc0cHgnLFxuICAgICAgZm9udFdlaWdodDogNDAwXG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtc3Bpbm5lclwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgc3VibWl0VGV4dCkpKSwgb3B0aW9ucy5zZXR0aW5ncy5wb3dlcmVkX2J5LnNob3cgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge1xuICAgIGhyZWY6IG9wdGlvbnMuc2V0dGluZ3MucG93ZXJlZF9ieS51cmwsXG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtcG93ZXJlZC1ieVwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwicG93ZXJlZC1ieVwiLFxuICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICByZWw6IFwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gIH0sIFwiUG93ZXJlZCBCeSBDb252ZXJ0S2l0XCIpIDogbnVsbCkpKTtcbn1cblxuY29uc3QgY3NzXzdjMThkNmQ2ID0gXCIuZm9ybWtpdC1mb3JtLm1pbGxzICoge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyB7XFxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgbGVnZW5kIHtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XFxuICBwYWRkaW5nOiAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZGlzcGxheTogdGFibGU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgZmllbGRzZXQge1xcbiAgYm9yZGVyOiAwO1xcbiAgcGFkZGluZzogMC4wMWVtIDAgMCAwO1xcbiAgbWFyZ2luOiAwO1xcbiAgbWluLXdpZHRoOiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIGJvZHk6bm90KDotbW96LWhhbmRsZXItYmxvY2tlZCkgZmllbGRzZXQge1xcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyBoMSxcXG4uZm9ybWtpdC1mb3JtLm1pbGxzIGgyLFxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgaDMsXFxuLmZvcm1raXQtZm9ybS5taWxscyBoNCxcXG4uZm9ybWtpdC1mb3JtLm1pbGxzIGg1LFxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgaDYge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxuICBmb250LXdlaWdodDogaW5oZXJpdDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyBwIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgb2w6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5taWxscyB1bDpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSxcXG4uZm9ybWtpdC1mb3JtLm1pbGxzIGJsb2NrcXVvdGU6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSkge1xcbiAgdGV4dC1hbGlnbjogbGVmdDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyBwOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgaHI6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5taWxscyBibG9ja3F1b3RlOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgb2w6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5taWxscyB1bDpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIGZvbnQtc3R5bGU6IGluaXRpYWw7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHNbZGF0YS1mb3JtYXQ9XFxcIm1vZGFsXFxcIl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxsc1tkYXRhLWZvcm1hdD1cXFwic2xpZGUgaW5cXFwiXSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzW2RhdGEtZm9ybWF0PVxcXCJzdGlja3kgYmFyXFxcIl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtc3RpY2t5LWJhciAuZm9ybWtpdC1mb3JtLm1pbGxzW2RhdGEtZm9ybWF0PVxcXCJzdGlja3kgYmFyXFxcIl0ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtaW5wdXQsXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1zZWxlY3QsXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1jaGVja2JveGVzIHtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LWJ1dHRvbixcXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXN1Ym1pdCB7XFxuICBib3JkZXI6IDA7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBjb2xvcjogI2ZmZmZmZjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMTVweDtcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHBhZGRpbmc6IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LWJ1dHRvbjpob3ZlcixcXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXN1Ym1pdDpob3ZlcixcXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LWJ1dHRvbjpmb2N1cyxcXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXN1Ym1pdDpmb2N1cyB7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LWJ1dHRvbjpob3Zlcj5zcGFuLFxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtc3VibWl0OmhvdmVyPnNwYW4sXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1idXR0b246Zm9jdXM+c3BhbixcXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXN1Ym1pdDpmb2N1cz5zcGFuIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1idXR0b24+c3BhbixcXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXN1Ym1pdD5zcGFuIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxuICBwYWRkaW5nOiAxMnB4IDI0cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtaW5wdXQge1xcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcXG4gIGZvbnQtc2l6ZTogMTVweDtcXG4gIHBhZGRpbmc6IDEycHg7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzO1xcbiAgLXdlYmtpdC1mbGV4OiAxIDAgYXV0bztcXG4gIC1tcy1mbGV4OiAxIDAgYXV0bztcXG4gIGZsZXg6IDEgMCBhdXRvO1xcbiAgbGluZS1oZWlnaHQ6IDEuNDtcXG4gIG1hcmdpbjogMDtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2Utb3V0IDMwMG1zO1xcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2Utb3V0IDMwMG1zO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LWlucHV0OmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICBib3JkZXItY29sb3I6ICMxNjc3YmU7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGJvcmRlci1jb2xvciBlYXNlIDMwMG1zO1xcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2UgMzAwbXM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtaW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBvcGFjaXR5OiAwLjg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBvcGFjaXR5OiAwLjg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtaW5wdXQ6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgb3BhY2l0eTogMC44O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LWlucHV0OjpwbGFjZWhvbGRlciB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIG9wYWNpdHk6IDAuODtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyBbZGF0YS1ncm91cD1cXFwiZHJvcGRvd25cXFwiXSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyBbZGF0YS1ncm91cD1cXFwiZHJvcGRvd25cXFwiXTo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgdG9wOiBjYWxjKDUwJSAtIDIuNXB4KTtcXG4gIHJpZ2h0OiAxMHB4O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICBib3JkZXItY29sb3I6ICM0ZjRmNGYgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XFxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xcbiAgYm9yZGVyLXdpZHRoOiA2cHggNnB4IDAgNnB4O1xcbiAgaGVpZ2h0OiAwO1xcbiAgd2lkdGg6IDA7XFxuICB6LWluZGV4OiA5OTk7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgW2RhdGEtZ3JvdXA9XFxcImRyb3Bkb3duXFxcIl0gc2VsZWN0IHtcXG4gIGhlaWdodDogYXV0bztcXG4gIHdpZHRoOiAxMDAlO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgY29sb3I6ICMzMzMzMzM7XFxuICBsaW5lLWhlaWdodDogMS40O1xcbiAgbWFyZ2luLWJvdHRvbTogMDtcXG4gIHBhZGRpbmc6IDAgNnB4O1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xcbiAgYXBwZWFyYW5jZTogbm9uZTtcXG4gIGZvbnQtc2l6ZTogMTVweDtcXG4gIHBhZGRpbmc6IDEycHg7XFxuICBwYWRkaW5nLXJpZ2h0OiAyNXB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgW2RhdGEtZ3JvdXA9XFxcImRyb3Bkb3duXFxcIl0gc2VsZWN0OmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSB7XFxuICB0ZXh0LWFsaWduOiBsZWZ0O1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0ge1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdICoge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl06bGFzdC1vZi10eXBlIHtcXG4gIG1hcmdpbi1ib3R0b206IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdK2xhYmVsOjphZnRlciB7XFxuICBjb250ZW50OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gaW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXTpjaGVja2VkK2xhYmVsOjphZnRlciB7XFxuICBib3JkZXItY29sb3I6ICNmZmZmZmY7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl06Y2hlY2tlZCtsYWJlbDo6YmVmb3JlIHtcXG4gIGJhY2tncm91bmQ6ICMxMGJmN2E7XFxuICBib3JkZXItY29sb3I6ICMxMGJmN2E7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBwYWRkaW5nLWxlZnQ6IDI4cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbDo6YmVmb3JlLFxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbDo6YWZ0ZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbDo6YmVmb3JlIHtcXG4gIGhlaWdodDogMTZweDtcXG4gIHdpZHRoOiAxNnB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XFxuICBsZWZ0OiAwcHg7XFxuICB0b3A6IDNweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGxhYmVsOjphZnRlciB7XFxuICBoZWlnaHQ6IDRweDtcXG4gIHdpZHRoOiA4cHg7XFxuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICM0ZDRkNGQ7XFxuICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzRkNGQ0ZDtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcXG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcXG4gIGxlZnQ6IDRweDtcXG4gIHRvcDogOHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LWFsZXJ0IHtcXG4gIGJhY2tncm91bmQ6ICNmOWZhZmI7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgLXdlYmtpdC1mbGV4OiAxIDAgYXV0bztcXG4gIC1tcy1mbGV4OiAxIDAgYXV0bztcXG4gIGZsZXg6IDEgMCBhdXRvO1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG4gIG1hcmdpbjogMjVweCBhdXRvO1xcbiAgcGFkZGluZzogMTJweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LWFsZXJ0OmVtcHR5IHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtYWxlcnQtc3VjY2VzcyB7XFxuICBiYWNrZ3JvdW5kOiAjZDNmYmViO1xcbiAgYm9yZGVyLWNvbG9yOiAjMTBiZjdhO1xcbiAgY29sb3I6ICMwYzkwNWM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtYWxlcnQtZXJyb3Ige1xcbiAgYmFja2dyb3VuZDogI2ZkZThlMjtcXG4gIGJvcmRlci1jb2xvcjogI2YyNjQzYjtcXG4gIGNvbG9yOiAjZWE0MTEwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXNwaW5uZXIge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XFxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBoZWlnaHQ6IDBweDtcXG4gIHdpZHRoOiAwcHg7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICByaWdodDogMDtcXG4gIHdpZHRoOiAwcHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtc3Bpbm5lcj5kaXYge1xcbiAgbWFyZ2luOiBhdXRvO1xcbiAgd2lkdGg6IDEycHg7XFxuICBoZWlnaHQ6IDEycHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgb3BhY2l0eTogMC4zO1xcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBmb3Jta2l0LWJvdW5jZWRlbGF5LWZvcm1raXQtZm9ybS1kYXRhLXVpZC01YzNhMzNlZTAyLSAxLjRzIGluZmluaXRlIGVhc2UtaW4tb3V0IGJvdGg7XFxuICBhbmltYXRpb246IGZvcm1raXQtYm91bmNlZGVsYXktZm9ybWtpdC1mb3JtLWRhdGEtdWlkLTVjM2EzM2VlMDItIDEuNHMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYm90aDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1zcGlubmVyPmRpdjpudGgtY2hpbGQoMSkge1xcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0wLjMycztcXG4gIGFuaW1hdGlvbi1kZWxheTogLTAuMzJzO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXNwaW5uZXI+ZGl2Om50aC1jaGlsZCgyKSB7XFxuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuMTZzO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4xNnM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtc3VibWl0W2RhdGEtYWN0aXZlXSAuZm9ybWtpdC1zcGlubmVyIHtcXG4gIG9wYWNpdHk6IDE7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogNTBweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1zdWJtaXRbZGF0YS1hY3RpdmVdIC5mb3Jta2l0LXNwaW5uZXJ+c3BhbiB7XFxuICBvcGFjaXR5OiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXBvd2VyZWQtYnlbZGF0YS1hY3RpdmU9XFxcImZhbHNlXFxcIl0ge1xcbiAgb3BhY2l0eTogMC4zNTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1wb3dlcmVkLWJ5LWNvbnZlcnRraXQtY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICB6LWluZGV4OiA1O1xcbiAgbWFyZ2luOiAxMHB4IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtcG93ZXJlZC1ieS1jb252ZXJ0a2l0LWNvbnRhaW5lcltkYXRhLWFjdGl2ZT1cXFwiZmFsc2VcXFwiXSB7XFxuICBvcGFjaXR5OiAwLjM1O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXBvd2VyZWQtYnktY29udmVydGtpdCB7XFxuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2RjZTFlNTtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIGNvbG9yOiAjMzczZjQ1O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBoZWlnaHQ6IDM2cHg7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIG9wYWNpdHk6IDAuOTU7XFxuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIHRleHQtaW5kZW50OiAxMDAlO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBlYXNlLWluLW91dCBhbGwgMjAwbXM7XFxuICB0cmFuc2l0aW9uOiBlYXNlLWluLW91dCBhbGwgMjAwbXM7XFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICB3aWR0aDogMTkwcHg7XFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGY4LCUzQ3N2ZyB3aWR0aD0nMTYyJyBoZWlnaHQ9JzIwJyB2aWV3Qm94PScwIDAgMTYyIDIwJyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDcGF0aCBkPSdNODMuMDU2MSAxNS4yNDU3Qzg2LjY3NSAxNS4yNDU3IDg5LjQ3MjIgMTIuNTE1NCA4OS40NzIyIDkuMTQ3NDlDODkuNDcyMiA1Ljk5MjExIDg2Ljg0NDMgNC4wNjU2MyA4NS4xMDM4IDQuMDY1NjNDODIuNjgwMSA0LjA2NTYzIDgwLjczNzMgNS43NjQwNyA4MC40NjA1IDguMjg1NTFDODAuNDA5MiA4Ljc1MjQ0IDgwLjAzODcgOS4xNDQwMyA3OS41Njg2IDkuMTQwNjlDNzguNzg3MSA5LjEzNTA5IDc3LjY1MDcgOS4xMjg0MSA3Ni45MzE0IDkuMTMwOTJDNzYuNjIxNyA5LjEzMTk5IDc2LjM2NTggOC44ODEwNiA3Ni4zODEgOC41NzE5NkM3Ni40ODk1IDYuMzg1MTMgNzcuMjIxOCA0LjM0MDQgNzguNjE4IDIuNzY5NzRDODAuMTY5NSAxLjAyNDQ1IDgyLjQyODkgMCA4NS4xMDM4IDBDODkuNTk3OSAwIDkzLjg0MDYgNC4wNzc5MSA5My44NDA2IDkuMTQ3NDlDOTMuODQwNiAxNC43NjA4IDg5LjE4MzIgMTkuMzExMyA4My4xNTE3IDE5LjMxMTNDNzguODUwMiAxOS4zMTEzIDc0LjUxNzkgMTYuNTA0MSA3My4wMDUzIDEyLjU3OTVDNzIuOTk5OSAxMi41NjUgNzIuOTk4NiAxMi41NDkyIDczLjAwMTUgMTIuNTM0QzczLjAyMTggMTIuNDE3OSA3My4wNjE3IDEyLjMxMTggNzMuMTAxMSAxMi4yMDc0QzczLjE1ODMgMTIuMDU1NSA3My4yMTQzIDExLjkwNyA3My4yMDYyIDExLjczNTlMNzMuMTggMTEuMTg5MkM3My4xNzQgMTEuMDU2OSA3My4yMDc1IDEwLjkyNTggNzMuMjc2NCAxMC44MTI3QzczLjM0NTIgMTAuNjk5NSA3My40NDYzIDEwLjYwOTQgNzMuNTY2NiAxMC41NTRMNzMuNzg1MiAxMC40NTIzQzczLjkwNzcgMTAuMzk1NyA3NC4wMTQ4IDEwLjMxMDUgNzQuMDk3NiAxMC4yMDRDNzQuMTgwMyAxMC4wOTc0IDc0LjIzNjMgOS45NzI1MiA3NC4yNjA4IDkuODM5ODNDNzQuMzM0MSA5LjQzODk0IDc0LjY4NjUgOS4xNDc0OSA3NS4wOTc5IDkuMTQ3NDlDNzUuNzQwNCA5LjE0NzQ5IDc2LjI5OSA5LjU3NDEyIDc2LjUwODggMTAuMTgwNkM3Ny41MTg4IDEzLjEgNzkuMTI0NSAxNS4yNDU3IDgzLjA1NjEgMTUuMjQ1N1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTU1Ljc1OCA2LjkxMzY1QzE1NS4wMjggNi45MTM2NSAxNTQuODA0IDYuNDc5MTYgMTU0LjgwNCA1Ljk4ODU3QzE1NC44MDQgNS40Njk5NyAxNTQuOTg2IDUuMDYzNDggMTU1Ljc1OCA1LjA2MzQ4QzE1Ni41MyA1LjA2MzQ4IDE1Ni43MTIgNS40Njk5NyAxNTYuNzEyIDUuOTg4NTdDMTU2LjcxMiA2LjQ3OTA1IDE1Ni41MTYgNi45MTM2NSAxNTUuNzU4IDYuOTEzNjVaTTE0Mi40NDEgMTIuOTMwNFY5LjMyODMzTDE0MS40MTUgOS4zMjMyM1Y4LjkwMzkyQzE0MS40MTUgOC40NDcxOSAxNDEuNzg2IDguMDc3NTggMTQyLjI0NCA4LjA3OTg2TDE0Mi40NDEgOC4wODA5NVY2LjU1MzA2TDE0NC4wODIgNi4wOTA1N1Y4LjA4MDczSDE0NS41NjlWOC41MDQxNkMxNDUuNTY5IDguNjEyNDIgMTQ1LjU0OCA4LjcxOTYxIDE0NS41MDYgOC44MTk2MUMxNDUuNDY1IDguOTE5NjEgMTQ1LjQwNCA5LjAxMDQ3IDE0NS4zMjggOS4wODY5OUMxNDUuMjUxIDkuMTYzNTEgMTQ1LjE2IDkuMjI0MiAxNDUuMDYgOS4yNjU1OUMxNDQuOTYgOS4zMDY5OCAxNDQuODUzIDkuMzI4MjYgMTQ0Ljc0NSA5LjMyODIySDE0NC4wODJWMTIuNzIwMUMxNDQuMDgyIDEzLjI0MjMgMTQ0LjM3OCAxMy40MjU2IDE0NC43NiAxMy40ODg3QzE0NS4yMDkgMTMuNTYyOSAxNDUuNTgzIDEzLjg4OCAxNDUuNTgzIDE0LjM0M1YxNC45NjI2QzE0NC4wMjkgMTQuOTYyNiAxNDIuNDQxIDE0Ljg5NDIgMTQyLjQ0MSAxMi45MzA0WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xMTAuMDU4IDcuOTI1NTRDMTA4LjQxNyA3Ljg4MzQ0IDEwNi4zOTYgOC45MjA2MiAxMDYuMzk2IDExLjUxMzdDMTA2LjM5NiAxNC4wNjQ2IDEwOC40MTcgMTUuMDczOCAxMTAuMDU4IDE1LjAzMThDMTExLjc0MiAxNS4wNzM4IDExMy43NDggMTQuMDY0NiAxMTMuNzQ4IDExLjUxMzdDMTEzLjc0OCA4LjkyMDYyIDExMS43NDIgNy44ODM0NCAxMTAuMDU4IDcuOTI1NTRaTTExMC4wNyAxMy43NTg2QzEwOC44NzggMTMuNzU4NiAxMDguMDMyIDEyLjg5MDUgMTA4LjAzMiAxMS40NjFDMTA4LjAzMiAxMC4xMDEzIDEwOC44NzggOS4yMDU2OSAxMTAuMDcxIDkuMjA1NjlDMTExLjI2MyA5LjIwNTY5IDExMi4xMDEgMTAuMDk5NSAxMTIuMTAxIDExLjQ1OUMxMTIuMTAxIDEyLjg4ODcgMTExLjI2MyAxMy43NTg2IDExMC4wNyAxMy43NTg2WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xMTguMDYgNy45NDA5OEMxMTkuNDkxIDcuOTQwOTggMTIwLjk3OCA4LjMzMzM3IDEyMC45NzggMTEuMTM2NlYxNC44OTNIMTIwLjA2M0MxMTkuNjA4IDE0Ljg5MyAxMTkuMjM4IDE0LjUyNCAxMTkuMjM4IDE0LjA2ODlWMTAuOTk2NUMxMTkuMjM4IDkuNjY1MDYgMTE4Ljc0NyA5LjE2MDQ3IDExNy44OTEgOS4xNjA0N0MxMTcuNDE0IDkuMTYwNDcgMTE2Ljc5NyA5LjUyNDg2IDExNi41MDIgOS44MTkxNVYxNC4wNjlDMTE2LjUwMiAxNC4xNzczIDExNi40ODEgMTQuMjg0NSAxMTYuNDQgMTQuMzg0NUMxMTYuMzk4IDE0LjQ4NDUgMTE2LjMzNyAxNC41NzUzIDExNi4yNjEgMTQuNjUxOUMxMTYuMTg0IDE0LjcyODQgMTE2LjA5MyAxNC43ODkxIDExNS45OTMgMTQuODMwNUMxMTUuODkzIDE0Ljg3MTkgMTE1Ljc4NiAxNC44OTMxIDExNS42NzggMTQuODkzMUgxMTQuODQ3VjguMTA5MThIMTE1Ljc3M0MxMTUuOTMyIDguMTA5MTQgMTE2LjA4NyA4LjE2MzE1IDExNi4yMTIgOC4yNjI0MkMxMTYuMzM3IDguMzYxNjggMTE2LjQyNCA4LjUwMDMzIDExNi40NiA4LjY1NTc3QzExNi44ODEgOC4xOTMyOCAxMTcuNDI4IDcuOTQwOTggMTE4LjA2IDcuOTQwOThaTTEyMi44NTQgOC4wOTcxM0MxMjMuMDI0IDguMDk3MDggMTIzLjE5IDguMTQ5NiAxMjMuMzI5IDguMjQ3NUMxMjMuNDY4IDguMzQ1NDEgMTIzLjU3NCA4LjQ4MzkxIDEyMy42MzEgOC42NDQwNUwxMjUuMTMzIDEyLjg0ODZMMTI2LjYzNSA4LjY0NDE1QzEyNi42OTIgOC40ODQwMiAxMjYuNzk4IDguMzQ1NTEgMTI2LjkzNyA4LjI0NzZDMTI3LjA3NiA4LjE0OTcgMTI3LjI0MiA4LjA5NzE4IDEyNy40MTIgOC4wOTcyNEgxMjguNTk4TDEyNi4xNTIgMTQuMzU2N0MxMjYuMDkxIDE0LjUxMTIgMTI1Ljk4NiAxNC42NDM5IDEyNS44NDkgMTQuNzM3NEMxMjUuNzExIDE0LjgzMSAxMjUuNTQ5IDE0Ljg4MSAxMjUuMzgzIDE0Ljg4MDlIMTI0LjMzM0wxMjEuNjY4IDguMDk3MTNIMTIyLjg1NFonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTM1LjA4NSAxNC41NTE0QzEzNC41NjYgMTQuNzYxNiAxMzMuNTEzIDE1LjA0MTYgMTMyLjQxOCAxNS4wNDE2QzEzMC40OTYgMTUuMDQxNiAxMjkuMDI0IDEzLjkzNDUgMTI5LjAyNCAxMS40Mzk2QzEyOS4wMjQgOS4xOTcwMSAxMzAuNDUxIDcuOTk3OTIgMTMyLjE5MSA3Ljk5NzkyQzEzNC4zMzggNy45OTc5MiAxMzUuMjU0IDkuNDM3OCAxMzUuMTU4IDExLjM5NzlDMTM1LjEzOSAxMS44MDI5IDEzNC43ODYgMTIuMDk4MyAxMzQuMzggMTIuMDk4M0gxMzAuNjc5QzEzMC43NjMgMTMuMTkxNiAxMzEuNTYyIDEzLjc2NjIgMTMyLjYxNSAxMy43NjYyQzEzMy4wMjggMTMuNzY2MiAxMzMuNDYyIDEzLjc0NTIgMTMzLjk4MyAxMy42NDgxQzEzNC41MzUgMTMuNTQ1IDEzNS4wODUgMTMuOTM3NSAxMzUuMDg1IDE0LjQ5ODVWMTQuNTUxNFpNMTMzLjY3MyAxMC45NDlDMTMzLjc4NSA5Ljg3NjIxIDEzMy4wNjEgOS4yODc1MiAxMzIuMTkxIDkuMjg3NTJDMTMxLjMyMSA5LjI4NzUyIDEzMC43MzQgOS45Mzk3OSAxMzAuNjc5IDEwLjk0ODlMMTMzLjY3MyAxMC45NDlaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTEzNy4zNDUgOC4xMTEyMkMxMzcuNDk3IDguMTExMTggMTM3LjY0NSA4LjE2MjI5IDEzNy43NjUgOC4yNTYzNUMxMzcuODg0IDguMzUwNDEgMTM3Ljk2OSA4LjQ4MTk3IDEzOC4wMDUgOC42Mjk5M0MxMzguNTY2IDguMjA5MzIgMTM5LjI2OCA3Ljk0MzAzIDEzOS43NTkgNy45NDMwM0MxMzkuODAxIDcuOTQzMDMgMTQwLjA2OCA3Ljk0MzAzIDE0MC40ODkgNy45OTkxM1Y4LjcyNjVDMTQwLjQ4OSA5LjExNzQ4IDE0MC4xNSA5LjQxNDcgMTM5Ljc1OSA5LjQxNDdDMTM5LjMxIDkuNDE0NyAxMzguNjUxIDkuNTgyOSAxMzguMTMxIDkuODc3M1YxNC44OTUxSDEzNi40NjJWOC4xMTExMkwxMzcuMzQ1IDguMTExMjJaTTE1Ni42IDE0LjA1MDhWOC4wOTEwNEgxNTUuNzY5QzE1NS4zMTQgOC4wOTEwNCAxNTQuOTQ0IDguNDU5OTkgMTU0Ljk0NCA4LjkxNTFWMTQuODc0OEgxNTUuNzc1QzE1Ni4yMyAxNC44NzQ4IDE1Ni42IDE0LjUwNTggMTU2LjYgMTQuMDUwOFpNMTU4Ljg1NyAxMi45NDQ3VjkuMzQyNTRIMTU3Ljc0OVY4LjkxOTEyQzE1Ny43NDkgOC40NjQwMSAxNTguMTE4IDguMDk1MDYgMTU4LjU3NCA4LjA5NTA2SDE1OC44NTdWNi41NjczOUwxNjAuNDk5IDYuMTA0NzlWOC4wOTUwNkgxNjEuOTg2VjguNTE4NDhDMTYxLjk4NiA4Ljk3MzU5IDE2MS42MTcgOS4zNDI1NCAxNjEuMTYxIDkuMzQyNTRIMTYwLjQ5OVYxMi43MzQ1QzE2MC40OTkgMTMuMjU2NiAxNjAuNzk1IDEzLjQ0IDE2MS4xNzcgMTMuNTAzQzE2MS42MjYgMTMuNTc3NCAxNjIgMTMuOTAyNCAxNjIgMTQuMzU3NFYxNC45NzdDMTYwLjQ0NiAxNC45NzcgMTU4Ljg1NyAxNC45MDg2IDE1OC44NTcgMTIuOTQ0N1pNOTguMTkyOSAxMC4xMTI0Qzk4LjIwMzMgNi45NDA0NiAxMDAuNTk4IDUuMTY4MDkgMTAyLjg5NSA1LjE2ODA5QzEwNC4xNzEgNS4xNjgwOSAxMDUuMzQyIDUuNDQyODUgMTA2LjMwNCA2LjEyOTUzTDEwNS45MTQgNi42NjMxQzEwNS42NTQgNy4wMjAxMSAxMDUuMTYgNy4xNjE5NCAxMDQuNzQ5IDYuOTk5NDlDMTA0LjE2OSA2Ljc3MDIgMTAzLjYyMiA2LjcyMTggMTAzLjIxNSA2LjcyMThDMTAxLjMzNSA2LjcyMTggOTkuOTE2OSA3LjkyODQ5IDk5LjkwNjggMTAuMTEyM0M5OS45MTY5IDEyLjI5NTkgMTAxLjMzNSAxMy41MjAxIDEwMy4yMTUgMTMuNTIwMUMxMDMuNjIyIDEzLjUyMDEgMTA0LjE2OSAxMy40NzE3IDEwNC43NDkgMTMuMjQyNEMxMDUuMTYgMTMuMDc5OSAxMDUuNjU0IDEzLjIwNDYgMTA1LjkxNCAxMy41NjE1TDEwNi4zMDQgMTQuMDk1MkMxMDUuMzQyIDE0Ljc4MTkgMTA0LjE3MSAxNS4wNTY2IDEwMi44OTUgMTUuMDU2NkMxMDAuNTk4IDE1LjA1NjYgOTguMjAzMyAxMy4yODQyIDk4LjE5MjkgMTAuMTEyNFpNMTQ3LjYxOSA1LjIxNzY4QzE0OC4wNzQgNS4yMTc2OCAxNDguNDQ0IDUuNTg2NjMgMTQ4LjQ0NCA2LjA0MTc0VjkuODE5NjhMMTUxLjgyIDUuNTgxMzFDMTUxLjg5NyA1LjQ3NzMzIDE1MS45OTcgNS4zOTI4MiAxNTIuMTEyIDUuMzM0NkMxNTIuMjI3IDUuMjc2MzggMTUyLjM1NSA1LjI0NjA3IDE1Mi40ODQgNS4yNDYxMUgxNTMuOTg0TDE1MC4xNjYgMTAuMDYxNUwxNTMuOTg0IDE0Ljg3NDlIMTUyLjQ4NEMxNTIuMzU1IDE0Ljg3NDkgMTUyLjIyNyAxNC44NDQ2IDE1Mi4xMTIgMTQuNzg2NEMxNTEuOTk3IDE0LjcyODEgMTUxLjg5NyAxNC42NDM2IDE1MS44MiAxNC41Mzk3TDE0OC40NDQgMTAuMzAyNVYxNC4wNTA4QzE0OC40NDQgMTQuNTA1OSAxNDguMDc0IDE0Ljg3NDkgMTQ3LjYxOSAxNC44NzQ5SDE0Ni43NDZWNS4yMTc2OEgxNDcuNjE5WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00wLjc3MzQzOCA2LjU3NTJIMi42ODA2NkMzLjU2NTQzIDYuNTc1MiA0LjIwNDEgNi43MDQxIDQuNTk2NjggNi45NjE5MUM0Ljk5MjE5IDcuMjE5NzMgNS4xODk5NCA3LjYyNjk1IDUuMTg5OTQgOC4xODM1OUM1LjE4OTk0IDguNTU4NTkgNS4wOTMyNiA4Ljg3MDYxIDQuODk5OSA5LjExOTYzQzQuNzA2NTQgOS4zNjg2NSA0LjQyODIyIDkuNTI1MzkgNC4wNjQ5NCA5LjU4OTg0VjkuNjMzNzlDNC41MTYxMSA5LjcxODc1IDQuODQ3MTcgOS44ODcyMSA1LjA1ODExIDEwLjEzOTJDNS4yNzE5NyAxMC4zODgyIDUuMzc4OTEgMTAuNzI2NiA1LjM3ODkxIDExLjE1NDNDNS4zNzg5MSAxMS43MzE0IDUuMTc2NzYgMTIuMTg0MSA0Ljc3MjQ2IDEyLjUxMjJDNC4zNzEwOSAxMi44Mzc0IDMuODExNTIgMTMgMy4wOTM3NSAxM0gwLjc3MzQzOFY2LjU3NTJaTTEuODIzNzMgOS4yMjk0OUgyLjgzNDQ3QzMuMjczOTMgOS4yMjk0OSAzLjU5NDczIDkuMTYwNjQgMy43OTY4OCA5LjAyMjk1QzMuOTk5MDIgOC44ODIzMiA0LjEwMDEgOC42NDUwMiA0LjEwMDEgOC4zMTEwNEM0LjEwMDEgOC4wMDkyOCAzLjk5MDIzIDcuNzkxMDIgMy43NzA1MSA3LjY1NjI1QzMuNTUzNzEgNy41MjE0OCAzLjIwODAxIDcuNDU0MSAyLjczMzQgNy40NTQxSDEuODIzNzNWOS4yMjk0OVpNMS44MjM3MyAxMC4wODJWMTIuMTE2N0gyLjkzOTk0QzMuMzc5MzkgMTIuMTE2NyAzLjcxMDQ1IDEyLjAzMzIgMy45MzMxMSAxMS44NjYyQzQuMTU4NjkgMTEuNjk2MyA0LjI3MTQ4IDExLjQyOTcgNC4yNzE0OCAxMS4wNjY0QzQuMjcxNDggMTAuNzMyNCA0LjE1NzIzIDEwLjQ4NDkgMy45Mjg3MSAxMC4zMjM3QzMuNzAwMiAxMC4xNjI2IDMuMzUzMDMgMTAuMDgyIDIuODg3MjEgMTAuMDgySDEuODIzNzNaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTEzLjAxMSA2LjU3NTJWMTAuNzMyNEMxMy4wMTEgMTEuMjA3IDEyLjkwODQgMTEuNjIzIDEyLjcwMzQgMTEuOTgwNUMxMi41MDEyIDEyLjMzNSAxMi4yMDY4IDEyLjYwODkgMTEuODIwMSAxMi44MDIyQzExLjQzNjMgMTIuOTkyNyAxMC45NzYzIDEzLjA4NzkgMTAuNDQwMiAxMy4wODc5QzkuNjQzMyAxMy4wODc5IDkuMDIzNjggMTIuODc3IDguNTgxMyAxMi40NTUxQzguMTM4OTIgMTIuMDMzMiA3LjkxNzcyIDExLjQ1MzEgNy45MTc3MiAxMC43MTQ4VjYuNTc1Mkg4Ljk3MjRWMTAuNjQwMUM4Ljk3MjQgMTEuMTcwNCA5LjA5NTQ2IDExLjU2MTUgOS4zNDE1NSAxMS44MTM1QzkuNTg3NjUgMTIuMDY1NCA5Ljk2NTU3IDEyLjE5MTQgMTAuNDc1MyAxMi4xOTE0QzExLjQ2NTYgMTIuMTkxNCAxMS45NjA3IDExLjY3MTQgMTEuOTYwNyAxMC42MzEzVjYuNTc1MkgxMy4wMTFaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTE1LjkxNDYgMTNWNi41NzUySDE2Ljk2NDlWMTNIMTUuOTE0NlonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTkuOTI1NSAxM1Y2LjU3NTJIMjAuOTc1OFYxMi4wOTkxSDIzLjY5NlYxM0gxOS45MjU1WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00yOC4yODI4IDEzSDI3LjIzMjVWNy40NzYwN0gyNS4zNDI4VjYuNTc1MkgzMC4xNzI0VjcuNDc2MDdIMjguMjgyOFYxM1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNNDEuOTQ3MiAxM0g0MC44MDQ2TDM5LjcxNDggOS4xNjc5NkMzOS42Njc5IDkuMDAwOTcgMzkuNjA5MyA4Ljc2MDc0IDM5LjUzOSA4LjQ0NzI3QzM5LjQ2ODcgOC4xMzA4NiAzOS40MjYyIDcuOTExMTMgMzkuNDExNiA3Ljc4ODA5QzM5LjM4MjMgNy45NzU1OSAzOS4zMzM5IDguMjE4NzUgMzkuMjY2NSA4LjUxNzU4QzM5LjIwMjEgOC44MTY0MSAzOS4xNDc5IDkuMDM5MDUgMzkuMTAzOSA5LjE4NTU0TDM4LjA0MDUgMTNIMzYuODk3OUwzNi4wNjczIDkuNzgzMkwzNS4yMjM2IDYuNTc1MkgzNi4yOTU4TDM3LjIxNDMgMTAuMzE5M0MzNy4zNTc4IDEwLjkxOTkgMzcuNDYwNCAxMS40NTAyIDM3LjUyMTkgMTEuOTEwMkMzNy41NTQxIDExLjY2MTEgMzcuNjAyNSAxMS4zODI4IDM3LjY2NjkgMTEuMDc1MkMzNy43MzE0IDEwLjc2NzYgMzcuNzkgMTAuNTE4NiAzNy44NDI3IDEwLjMyODFMMzguODg4NiA2LjU3NTJIMzkuOTMwMUw0MS4wMDI0IDEwLjM0NTdDNDEuMTA0OSAxMC42OTQzIDQxLjIxMzMgMTEuMjE1OCA0MS4zMjc2IDExLjkxMDJDNDEuMzcxNSAxMS40OTEyIDQxLjQ3NyAxMC45NTggNDEuNjQ0IDEwLjMxMDVMNDIuNTU4IDYuNTc1Mkg0My42MjE1TDQxLjk0NzIgMTNaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTQ1Ljc5NTcgMTNWNi41NzUySDQ2Ljg0NlYxM0g0NS43OTU3WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J001Mi4wMjU4IDEzSDUwLjk3NTVWNy40NzYwN0g0OS4wODU5VjYuNTc1Mkg1My45MTU1VjcuNDc2MDdINTIuMDI1OFYxM1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNNjEuMjMxMiAxM0g2MC4xNzY1VjEwLjEwNEg1Ny4yMTQ2VjEzSDU2LjE2NDNWNi41NzUySDU3LjIxNDZWOS4yMDMxMkg2MC4xNzY1VjYuNTc1Mkg2MS4yMzEyVjEzWicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0Mvc3ZnJTNFXFxcIik7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtcG93ZXJlZC1ieS1jb252ZXJ0a2l0OmhvdmVyLFxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtcG93ZXJlZC1ieS1jb252ZXJ0a2l0OmZvY3VzIHtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjAyNSkgcGVyc3BlY3RpdmUoMXB4KTtcXG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEuMDI1KSBwZXJzcGVjdGl2ZSgxcHgpO1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjAyNSkgcGVyc3BlY3RpdmUoMXB4KTtcXG4gIG9wYWNpdHk6IDE7XFxufVxcblxcbkAtd2Via2l0LWtleWZyYW1lcyBmb3Jta2l0LWJvdW5jZWRlbGF5LWZvcm1raXQtZm9ybS1kYXRhLXVpZC01YzNhMzNlZTAyLSB7XFxuXFxuICAwJSxcXG4gIDgwJSxcXG4gIDEwMCUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgfVxcblxcbiAgNDAlIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gIH1cXG59XFxuXFxuQGtleWZyYW1lcyBmb3Jta2l0LWJvdW5jZWRlbGF5LWZvcm1raXQtZm9ybS1kYXRhLXVpZC01YzNhMzNlZTAyLSB7XFxuXFxuICAwJSxcXG4gIDgwJSxcXG4gIDEwMCUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgfVxcblxcbiAgNDAlIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gIH1cXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyBibG9ja3F1b3RlIHtcXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcXG4gIG1hcmdpbjogMCAwIDIwcHg7XFxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNlMWUxZTE7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMge1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG4gIG1heC13aWR0aDogNzAwcHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LWJhY2tncm91bmQge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG4gIG9wYWNpdHk6IDAuMztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyBbZGF0YS1zdHlsZT1cXFwibWluaW1hbFxcXCJdIHtcXG4gIHBhZGRpbmc6IDIwcHg7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1oZWFkZXIge1xcbiAgbWFyZ2luOiAwIDAgMjdweCAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXN1YmhlYWRlciB7XFxuICBtYXJnaW46IDE4cHggMDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1ndWFyYW50ZWUge1xcbiAgZm9udC1zaXplOiAxM3B4O1xcbiAgbWFyZ2luOiAxMHB4IDAgMTVweCAwO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LWd1YXJhbnRlZT5wIHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1wb3dlcmVkLWJ5IHtcXG4gIGNvbG9yOiAjN2Q3ZDdkO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBmb250LXNpemU6IDEycHg7XFxuICBtYXJnaW46IDEwcHggMCAwIDA7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHMgLmZvcm1raXQtZmllbGRzW2RhdGEtc3RhY2tlZD1cXFwiZmFsc2VcXFwiXSB7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIC13ZWJraXQtZmxleC13cmFwOiB3cmFwO1xcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcXG4gIGZsZXgtd3JhcDogd3JhcDtcXG4gIG1hcmdpbjogMjVweCBhdXRvIDAgYXV0bztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5taWxscyAuZm9ybWtpdC1maWVsZCxcXG4uZm9ybWtpdC1mb3JtLm1pbGxzIC5mb3Jta2l0LXN1Ym1pdCB7XFxuICBtYXJnaW46IDAgMCAxNXB4IDA7XFxuICAtd2Via2l0LWZsZXg6IDEgMCAxMDAlO1xcbiAgLW1zLWZsZXg6IDEgMCAxMDAlO1xcbiAgZmxleDogMSAwIDEwMCU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHNbbWluLXdpZHRofj1cXFwiNjAwXFxcIl0gW2RhdGEtc3R5bGU9XFxcIm1pbmltYWxcXFwiXSB7XFxuICBwYWRkaW5nOiA0MHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLm1pbGxzW21pbi13aWR0aH49XFxcIjYwMFxcXCJdIC5mb3Jta2l0LWZpZWxkc1tkYXRhLXN0YWNrZWQ9XFxcImZhbHNlXFxcIl0ge1xcbiAgbWFyZ2luLWxlZnQ6IC01cHg7XFxuICBtYXJnaW4tcmlnaHQ6IC01cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHNbbWluLXdpZHRofj1cXFwiNjAwXFxcIl0gLmZvcm1raXQtZmllbGRzW2RhdGEtc3RhY2tlZD1cXFwiZmFsc2VcXFwiXSAuZm9ybWtpdC1maWVsZCxcXG4uZm9ybWtpdC1mb3JtLm1pbGxzW21pbi13aWR0aH49XFxcIjYwMFxcXCJdIC5mb3Jta2l0LWZpZWxkc1tkYXRhLXN0YWNrZWQ9XFxcImZhbHNlXFxcIl0gLmZvcm1raXQtc3VibWl0IHtcXG4gIG1hcmdpbjogMCA1cHggMTVweCA1cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHNbbWluLXdpZHRofj1cXFwiNjAwXFxcIl0gLmZvcm1raXQtZmllbGRzW2RhdGEtc3RhY2tlZD1cXFwiZmFsc2VcXFwiXSAuZm9ybWtpdC1maWVsZCB7XFxuICAtd2Via2l0LWZsZXg6IDEwMCAxIGF1dG87XFxuICAtbXMtZmxleDogMTAwIDEgYXV0bztcXG4gIGZsZXg6IDEwMCAxIGF1dG87XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ubWlsbHNbbWluLXdpZHRofj1cXFwiNjAwXFxcIl0gLmZvcm1raXQtZmllbGRzW2RhdGEtc3RhY2tlZD1cXFwiZmFsc2VcXFwiXSAuZm9ybWtpdC1zdWJtaXQge1xcbiAgLXdlYmtpdC1mbGV4OiAxIDEgYXV0bztcXG4gIC1tcy1mbGV4OiAxIDEgYXV0bztcXG4gIGZsZXg6IDEgMSBhdXRvO1xcbn1cXG5cIjtcbmluamVjdG9yX2JmMWJhN2UwKGNzc183YzE4ZDZkNix7XCJzaW5nbGVUYWdcIjp0cnVlfSk7XG5cbnZhciBBTExPV0VEX0ZPUk1BVFMkMSA9IFsnaW5saW5lJywgJ21vZGFsJywgJ3NsaWRlIGluJ107XG5cbmZ1bmN0aW9uIE1pbGxzKF9yZWYpIHtcbiAgdmFyIG9wdGlvbnMgPSBfcmVmLm9wdGlvbnMsXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGFjdGlvbiA9IF9yZWYuYWN0aW9uLFxuICAgICAgc3VibWl0VGV4dCA9IF9yZWYuc3VibWl0VGV4dCxcbiAgICAgIGVtYWlsUGxhY2Vob2xkZXIgPSBfcmVmLmVtYWlsUGxhY2Vob2xkZXIsXG4gICAgICBuYW1lUGxhY2Vob2xkZXIgPSBfcmVmLm5hbWVQbGFjZWhvbGRlcixcbiAgICAgIGhpZGVOYW1lID0gX3JlZi5oaWRlTmFtZSxcbiAgICAgIHNob3dMYWJlbHMgPSBfcmVmLnNob3dMYWJlbHMsXG4gICAgICBuYW1lTGFiZWwgPSBfcmVmLm5hbWVMYWJlbCxcbiAgICAgIGVtYWlsTGFiZWwgPSBfcmVmLmVtYWlsTGFiZWwsXG4gICAgICBuZXdUYWIgPSBfcmVmLm5ld1RhYixcbiAgICAgIGZvcm1JZCA9IF9yZWYuZm9ybUlkLFxuICAgICAgZm9ybWF0ID0gX3JlZi5mb3JtYXQsXG4gICAgICBzdGFja2VkID0gX3JlZi5zdGFja2VkLFxuICAgICAgaGlkZVdhcm5pbmdzID0gX3JlZi5oaWRlV2FybmluZ3M7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgIWhpZGVXYXJuaW5ncyAmJiAhQUxMT1dFRF9GT1JNQVRTJDEuaW5jbHVkZXMoZm9ybWF0KSA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFdhcm5pbmcsIHtcbiAgICBtZXNzYWdlOiBcIlRoaXMgdGVtcGxhdGUgaXMgbm90IGF2YWlsYWJsZSBmb3IgdGhlIGNob3NlbiBmb3JtYXRcIlxuICB9KSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiLCB7XG4gICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgY2xhc3NOYW1lOiBcInNldmEtZm9ybSBmb3Jta2l0LWZvcm0gbWlsbHMgXCIuY29uY2F0KGNsYXNzTmFtZSksXG4gICAgbWV0aG9kOiBcInBvc3RcIixcbiAgICB0YXJnZXQ6IG5ld1RhYiA/ICdfYmxhbmsnIDogJ19zZWxmJyxcbiAgICBcImRhdGEtc3YtZm9ybVwiOiBmb3JtSWQsXG4gICAgXCJkYXRhLXVpZFwiOiBvcHRpb25zLnVpZCxcbiAgICBcImRhdGEtZm9ybWF0XCI6IGZvcm1hdCxcbiAgICBcImRhdGEtdmVyc2lvblwiOiBvcHRpb25zLnZlcnNpb24sXG4gICAgXCJkYXRhLW9wdGlvbnNcIjogSlNPTi5zdHJpbmdpZnkob3B0aW9ucyksXG4gICAgXCJtaW4td2lkdGhcIjogXCI0MDAgNTAwIDYwMCA3MDAgODAwXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYigyNDksIDI1MCwgMjUxKScsXG4gICAgICBib3JkZXJSYWRpdXM6ICc0cHgnXG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtYmFja2dyb3VuZFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBvcGFjaXR5OiAwLjJcbiAgICB9XG4gIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgXCJkYXRhLXN0eWxlXCI6IFwibWluaW1hbFwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1oZWFkZXJcIixcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImhlYWRlclwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBjb2xvcjogJ3JnYig3NywgNzcsIDc3KScsXG4gICAgICBmb250U2l6ZTogJzI3cHgnLFxuICAgICAgZm9udFdlaWdodDogNzAwLFxuICAgICAgdGV4dEFsaWduOiAnY2VudGVyJ1xuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCBudWxsLCBcIkpvaW4gdGhlIE5ld3NsZXR0ZXJcIikpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtc3ViaGVhZGVyXCIsXG4gICAgXCJkYXRhLWVsZW1lbnRcIjogXCJzdWJoZWFkZXJcIixcbiAgICBzdHlsZToge1xuICAgICAgY29sb3I6ICdyZ2IoMTA0LCAxMDQsIDEwNCknLFxuICAgICAgZm9udHNpemU6ICcxOHB4J1xuICAgIH1cbiAgfSwgXCJTdWJzY3JpYmUgdG8gZ2V0IG91ciBsYXRlc3QgY29udGVudCBieSBlbWFpbC5cIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWFsZXJ0IGZvcm1raXQtYWxlcnQtZXJyb3JcIixcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImVycm9yc1wiLFxuICAgIFwiZGF0YS1ncm91cFwiOiBcImFsZXJ0XCJcbiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImZpZWxkc1wiLFxuICAgIFwiZGF0YS1zdGFja2VkXCI6IHN0YWNrZWQsXG4gICAgY2xhc3NOYW1lOiBcInNldmEtZmllbGRzIGZvcm1raXQtZmllbGRzXCJcbiAgfSwgIWhpZGVOYW1lICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBzaG93TGFiZWxzID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB7XG4gICAgaHRtbEZvcjogXCJjay1maXJzdC1uYW1lXCJcbiAgfSwgbmFtZUxhYmVsKSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1maWVsZFwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWlucHV0XCIsXG4gICAgXCJhcmlhLWxhYmVsXCI6IG5hbWVMYWJlbCxcbiAgICBuYW1lOiBcImZpZWxkc1tmaXJzdF9uYW1lXVwiLFxuICAgIHBsYWNlaG9sZGVyOiBuYW1lUGxhY2Vob2xkZXIsXG4gICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDAsIDAsIDApJyxcbiAgICAgIGJvcmRlckNvbG9yOiAncmdiKDIyNywgMjI3LCAyMjcpJyxcbiAgICAgIGJvcmRlclJhZGl1czogJzRweCcsXG4gICAgICBmb250V2VpZ2h0OiA0MDBcbiAgICB9LFxuICAgIGlkOiBcImNrLWZpcnN0LW5hbWVcIlxuICB9KSkpLCBzaG93TGFiZWxzID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB7XG4gICAgaHRtbEZvcjogXCJjay1lbWFpbFwiXG4gIH0sIGVtYWlsTGFiZWwpIDogbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWZpZWxkXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtaW5wdXRcIixcbiAgICBcImFyaWEtbGFiZWxcIjogZW1haWxMYWJlbCxcbiAgICBuYW1lOiBcImVtYWlsX2FkZHJlc3NcIixcbiAgICBwbGFjZWhvbGRlcjogZW1haWxQbGFjZWhvbGRlcixcbiAgICByZXF1aXJlZDogXCJcIixcbiAgICB0eXBlOiBcImVtYWlsXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDAsIDAsIDApJyxcbiAgICAgIGJvcmRlckNvbG9yOiAncmdiKDIyNywgMjI3LCAyMjcpJyxcbiAgICAgIGJvcmRlclJhZGl1czogJzRweCcsXG4gICAgICBmb250V2VpZ2h0OiA0MDBcbiAgICB9LFxuICAgIGlkOiBcImNrLWVtYWlsXCJcbiAgfSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgXCJkYXRhLWVsZW1lbnRcIjogXCJzdWJtaXRcIixcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1zdWJtaXQgZm9ybWtpdC1zdWJtaXRcIixcbiAgICBzdHlsZToge1xuICAgICAgY29sb3I6ICdyZ2IoMjU1LCAyNTUsIDI1NSknLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiKDIyLCAxMTksIDE5MCknLFxuICAgICAgYm9yZGVyUmFkaXVzOiAnNHB4JyxcbiAgICAgIGZvbnRXZWlnaHQ6IDQwMFxuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LXNwaW5uZXJcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIHN1Ym1pdFRleHQpKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1ndWFyYW50ZWVcIixcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImd1YXJhbnRlZVwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBjb2xvcjogJ3JnYig3NywgNzcsIDc3KScsXG4gICAgICBmb250U2l6ZTogJzEzcHgnLFxuICAgICAgZm9udFdlaWdodDogNDAwXG4gICAgfVxuICB9LCBcIldlIHdvbid0IHNlbmQgeW91IHNwYW0uIFVuc3Vic2NyaWJlIGF0IGFueSB0aW1lLlwiKSwgb3B0aW9ucy5zZXR0aW5ncy5wb3dlcmVkX2J5LnNob3cgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge1xuICAgIGhyZWY6IG9wdGlvbnMuc2V0dGluZ3MucG93ZXJlZF9ieS51cmwsXG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtcG93ZXJlZC1ieVwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwicG93ZXJlZC1ieVwiLFxuICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICByZWw6IFwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gIH0sIFwiUG93ZXJlZCBCeSBDb252ZXJ0S2l0XCIpIDogbnVsbCkpKTtcbn1cblxuY29uc3QgY3NzX2E2YzFlZjA2ID0gXCIuZm9ybWtpdC1mb3JtLnJhaW5pZXIgKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIge1xcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xcbiAgY29sb3I6ICMwMDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciBsZWdlbmQge1xcbiAgYm9yZGVyOiBub25lO1xcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG4gIHBhZGRpbmc6IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiB0YWJsZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIGZpZWxkc2V0IHtcXG4gIGJvcmRlcjogMDtcXG4gIHBhZGRpbmc6IDAuMDFlbSAwIDAgMDtcXG4gIG1hcmdpbjogMDtcXG4gIG1pbi13aWR0aDogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIGJvZHk6bm90KDotbW96LWhhbmRsZXItYmxvY2tlZCkgZmllbGRzZXQge1xcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIGgxLFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciBoMixcXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgaDMsXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIGg0LFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciBoNSxcXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgaDYge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxuICBmb250LXdlaWdodDogaW5oZXJpdDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIHAge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxuICBmb250LXdlaWdodDogaW5oZXJpdDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIG9sOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciB1bDpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSxcXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgYmxvY2txdW90ZTpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSB7XFxuICB0ZXh0LWFsaWduOiBsZWZ0O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgcDpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSxcXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgaHI6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIGJsb2NrcXVvdGU6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIG9sOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciB1bDpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIGZvbnQtc3R5bGU6IGluaXRpYWw7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllcltkYXRhLWZvcm1hdD1cXFwibW9kYWxcXFwiXSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXJbZGF0YS1mb3JtYXQ9XFxcInNsaWRlIGluXFxcIl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyW2RhdGEtZm9ybWF0PVxcXCJzdGlja3kgYmFyXFxcIl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtc3RpY2t5LWJhciAuZm9ybWtpdC1mb3JtLnJhaW5pZXJbZGF0YS1mb3JtYXQ9XFxcInN0aWNreSBiYXJcXFwiXSB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWlucHV0LFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1zZWxlY3QsXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWNoZWNrYm94ZXMge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1idXR0b24sXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LXN1Ym1pdCB7XFxuICBib3JkZXI6IDA7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBjb2xvcjogI2ZmZmZmZjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMTVweDtcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHBhZGRpbmc6IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtYnV0dG9uOmhvdmVyLFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1zdWJtaXQ6aG92ZXIsXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWJ1dHRvbjpmb2N1cyxcXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtc3VibWl0OmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1idXR0b246aG92ZXI+c3BhbixcXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtc3VibWl0OmhvdmVyPnNwYW4sXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWJ1dHRvbjpmb2N1cz5zcGFuLFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1zdWJtaXQ6Zm9jdXM+c3BhbiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1idXR0b24+c3BhbixcXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtc3VibWl0PnNwYW4ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluLW91dDtcXG4gIHBhZGRpbmc6IDEycHggMjRweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWlucHV0IHtcXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XFxuICBmb250LXNpemU6IDE1cHg7XFxuICBwYWRkaW5nOiAxMnB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG4gIC13ZWJraXQtZmxleDogMSAwIGF1dG87XFxuICAtbXMtZmxleDogMSAwIGF1dG87XFxuICBmbGV4OiAxIDAgYXV0bztcXG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XFxuICBtYXJnaW46IDA7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGJvcmRlci1jb2xvciBlYXNlLW91dCAzMDBtcztcXG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciBlYXNlLW91dCAzMDBtcztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWlucHV0OmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICBib3JkZXItY29sb3I6ICMxNjc3YmU7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGJvcmRlci1jb2xvciBlYXNlIDMwMG1zO1xcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2UgMzAwbXM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1pbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIG9wYWNpdHk6IDAuODtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWlucHV0OjotbW96LXBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgb3BhY2l0eTogMC44O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtaW5wdXQ6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgb3BhY2l0eTogMC44O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtaW5wdXQ6OnBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgb3BhY2l0eTogMC44O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgW2RhdGEtZ3JvdXA9XFxcImRyb3Bkb3duXFxcIl0ge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciBbZGF0YS1ncm91cD1cXFwiZHJvcGRvd25cXFwiXTo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgdG9wOiBjYWxjKDUwJSAtIDIuNXB4KTtcXG4gIHJpZ2h0OiAxMHB4O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICBib3JkZXItY29sb3I6ICM0ZjRmNGYgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XFxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xcbiAgYm9yZGVyLXdpZHRoOiA2cHggNnB4IDAgNnB4O1xcbiAgaGVpZ2h0OiAwO1xcbiAgd2lkdGg6IDA7XFxuICB6LWluZGV4OiA5OTk7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciBbZGF0YS1ncm91cD1cXFwiZHJvcGRvd25cXFwiXSBzZWxlY3Qge1xcbiAgaGVpZ2h0OiBhdXRvO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBjb2xvcjogIzMzMzMzMztcXG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbiAgcGFkZGluZzogMCA2cHg7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XFxuICBhcHBlYXJhbmNlOiBub25lO1xcbiAgZm9udC1zaXplOiAxNXB4O1xcbiAgcGFkZGluZzogMTJweDtcXG4gIHBhZGRpbmctcmlnaHQ6IDI1cHg7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzO1xcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIFtkYXRhLWdyb3VwPVxcXCJkcm9wZG93blxcXCJdIHNlbGVjdDpmb2N1cyB7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSB7XFxuICB0ZXh0LWFsaWduOiBsZWZ0O1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSB7XFxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSAqIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl06bGFzdC1vZi10eXBlIHtcXG4gIG1hcmdpbi1ib3R0b206IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gaW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXStsYWJlbDo6YWZ0ZXIge1xcbiAgY29udGVudDogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gaW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXTpjaGVja2VkK2xhYmVsOjphZnRlciB7XFxuICBib3JkZXItY29sb3I6ICNmZmZmZmY7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gaW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXTpjaGVja2VkK2xhYmVsOjpiZWZvcmUge1xcbiAgYmFja2dyb3VuZDogIzEwYmY3YTtcXG4gIGJvcmRlci1jb2xvcjogIzEwYmY3YTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWwge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcGFkZGluZy1sZWZ0OiAyOHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbDo6YmVmb3JlLFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGxhYmVsOjphZnRlciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWw6OmJlZm9yZSB7XFxuICBoZWlnaHQ6IDE2cHg7XFxuICB3aWR0aDogMTZweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNlM2UzZTM7XFxuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xcbiAgbGVmdDogMHB4O1xcbiAgdG9wOiAzcHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGxhYmVsOjphZnRlciB7XFxuICBoZWlnaHQ6IDRweDtcXG4gIHdpZHRoOiA4cHg7XFxuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICM0ZDRkNGQ7XFxuICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzRkNGQ0ZDtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcXG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcXG4gIGxlZnQ6IDRweDtcXG4gIHRvcDogOHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtYWxlcnQge1xcbiAgYmFja2dyb3VuZDogI2Y5ZmFmYjtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNlM2UzZTM7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAtd2Via2l0LWZsZXg6IDEgMCBhdXRvO1xcbiAgLW1zLWZsZXg6IDEgMCBhdXRvO1xcbiAgZmxleDogMSAwIGF1dG87XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbiAgbWFyZ2luOiAyNXB4IGF1dG87XFxuICBwYWRkaW5nOiAxMnB4O1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1hbGVydDplbXB0eSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtYWxlcnQtc3VjY2VzcyB7XFxuICBiYWNrZ3JvdW5kOiAjZDNmYmViO1xcbiAgYm9yZGVyLWNvbG9yOiAjMTBiZjdhO1xcbiAgY29sb3I6ICMwYzkwNWM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1hbGVydC1lcnJvciB7XFxuICBiYWNrZ3JvdW5kOiAjZmRlOGUyO1xcbiAgYm9yZGVyLWNvbG9yOiAjZjI2NDNiO1xcbiAgY29sb3I6ICNlYTQxMTA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1zcGlubmVyIHtcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgaGVpZ2h0OiAwcHg7XFxuICB3aWR0aDogMHB4O1xcbiAgbWFyZ2luOiAwIGF1dG87XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgcmlnaHQ6IDA7XFxuICB3aWR0aDogMHB4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtc3Bpbm5lcj5kaXYge1xcbiAgbWFyZ2luOiBhdXRvO1xcbiAgd2lkdGg6IDEycHg7XFxuICBoZWlnaHQ6IDEycHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgb3BhY2l0eTogMC4zO1xcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBmb3Jta2l0LWJvdW5jZWRlbGF5LWZvcm1raXQtZm9ybS1kYXRhLXVpZC01YzNhMzNlZTAyLSAxLjRzIGluZmluaXRlIGVhc2UtaW4tb3V0IGJvdGg7XFxuICBhbmltYXRpb246IGZvcm1raXQtYm91bmNlZGVsYXktZm9ybWtpdC1mb3JtLWRhdGEtdWlkLTVjM2EzM2VlMDItIDEuNHMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYm90aDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LXNwaW5uZXI+ZGl2Om50aC1jaGlsZCgxKSB7XFxuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuMzJzO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4zMnM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1zcGlubmVyPmRpdjpudGgtY2hpbGQoMikge1xcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0wLjE2cztcXG4gIGFuaW1hdGlvbi1kZWxheTogLTAuMTZzO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtc3VibWl0W2RhdGEtYWN0aXZlXSAuZm9ybWtpdC1zcGlubmVyIHtcXG4gIG9wYWNpdHk6IDE7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogNTBweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LXN1Ym1pdFtkYXRhLWFjdGl2ZV0gLmZvcm1raXQtc3Bpbm5lcn5zcGFuIHtcXG4gIG9wYWNpdHk6IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1wb3dlcmVkLWJ5W2RhdGEtYWN0aXZlPVxcXCJmYWxzZVxcXCJdIHtcXG4gIG9wYWNpdHk6IDAuMzU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1wb3dlcmVkLWJ5LWNvbnZlcnRraXQtY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICB6LWluZGV4OiA1O1xcbiAgbWFyZ2luOiAxMHB4IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1wb3dlcmVkLWJ5LWNvbnZlcnRraXQtY29udGFpbmVyW2RhdGEtYWN0aXZlPVxcXCJmYWxzZVxcXCJdIHtcXG4gIG9wYWNpdHk6IDAuMzU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1wb3dlcmVkLWJ5LWNvbnZlcnRraXQge1xcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcXG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkY2UxZTU7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBjb2xvcjogIzM3M2Y0NTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgaGVpZ2h0OiAzNnB4O1xcbiAgbWFyZ2luOiAwIGF1dG87XFxuICBvcGFjaXR5OiAwLjk1O1xcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICB0ZXh0LWluZGVudDogMTAwJTtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogZWFzZS1pbi1vdXQgYWxsIDIwMG1zO1xcbiAgdHJhbnNpdGlvbjogZWFzZS1pbi1vdXQgYWxsIDIwMG1zO1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcXG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcXG4gIHVzZXItc2VsZWN0OiBub25lO1xcbiAgd2lkdGg6IDE5MHB4O1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9dXRmOCwlM0Nzdmcgd2lkdGg9JzE2MicgaGVpZ2h0PScyMCcgdmlld0JveD0nMCAwIDE2MiAyMCcgZmlsbD0nbm9uZScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ3BhdGggZD0nTTgzLjA1NjEgMTUuMjQ1N0M4Ni42NzUgMTUuMjQ1NyA4OS40NzIyIDEyLjUxNTQgODkuNDcyMiA5LjE0NzQ5Qzg5LjQ3MjIgNS45OTIxMSA4Ni44NDQzIDQuMDY1NjMgODUuMTAzOCA0LjA2NTYzQzgyLjY4MDEgNC4wNjU2MyA4MC43MzczIDUuNzY0MDcgODAuNDYwNSA4LjI4NTUxQzgwLjQwOTIgOC43NTI0NCA4MC4wMzg3IDkuMTQ0MDMgNzkuNTY4NiA5LjE0MDY5Qzc4Ljc4NzEgOS4xMzUwOSA3Ny42NTA3IDkuMTI4NDEgNzYuOTMxNCA5LjEzMDkyQzc2LjYyMTcgOS4xMzE5OSA3Ni4zNjU4IDguODgxMDYgNzYuMzgxIDguNTcxOTZDNzYuNDg5NSA2LjM4NTEzIDc3LjIyMTggNC4zNDA0IDc4LjYxOCAyLjc2OTc0QzgwLjE2OTUgMS4wMjQ0NSA4Mi40Mjg5IDAgODUuMTAzOCAwQzg5LjU5NzkgMCA5My44NDA2IDQuMDc3OTEgOTMuODQwNiA5LjE0NzQ5QzkzLjg0MDYgMTQuNzYwOCA4OS4xODMyIDE5LjMxMTMgODMuMTUxNyAxOS4zMTEzQzc4Ljg1MDIgMTkuMzExMyA3NC41MTc5IDE2LjUwNDEgNzMuMDA1MyAxMi41Nzk1QzcyLjk5OTkgMTIuNTY1IDcyLjk5ODYgMTIuNTQ5MiA3My4wMDE1IDEyLjUzNEM3My4wMjE4IDEyLjQxNzkgNzMuMDYxNyAxMi4zMTE4IDczLjEwMTEgMTIuMjA3NEM3My4xNTgzIDEyLjA1NTUgNzMuMjE0MyAxMS45MDcgNzMuMjA2MiAxMS43MzU5TDczLjE4IDExLjE4OTJDNzMuMTc0IDExLjA1NjkgNzMuMjA3NSAxMC45MjU4IDczLjI3NjQgMTAuODEyN0M3My4zNDUyIDEwLjY5OTUgNzMuNDQ2MyAxMC42MDk0IDczLjU2NjYgMTAuNTU0TDczLjc4NTIgMTAuNDUyM0M3My45MDc3IDEwLjM5NTcgNzQuMDE0OCAxMC4zMTA1IDc0LjA5NzYgMTAuMjA0Qzc0LjE4MDMgMTAuMDk3NCA3NC4yMzYzIDkuOTcyNTIgNzQuMjYwOCA5LjgzOTgzQzc0LjMzNDEgOS40Mzg5NCA3NC42ODY1IDkuMTQ3NDkgNzUuMDk3OSA5LjE0NzQ5Qzc1Ljc0MDQgOS4xNDc0OSA3Ni4yOTkgOS41NzQxMiA3Ni41MDg4IDEwLjE4MDZDNzcuNTE4OCAxMy4xIDc5LjEyNDUgMTUuMjQ1NyA4My4wNTYxIDE1LjI0NTdaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTE1NS43NTggNi45MTM2NUMxNTUuMDI4IDYuOTEzNjUgMTU0LjgwNCA2LjQ3OTE2IDE1NC44MDQgNS45ODg1N0MxNTQuODA0IDUuNDY5OTcgMTU0Ljk4NiA1LjA2MzQ4IDE1NS43NTggNS4wNjM0OEMxNTYuNTMgNS4wNjM0OCAxNTYuNzEyIDUuNDY5OTcgMTU2LjcxMiA1Ljk4ODU3QzE1Ni43MTIgNi40NzkwNSAxNTYuNTE2IDYuOTEzNjUgMTU1Ljc1OCA2LjkxMzY1Wk0xNDIuNDQxIDEyLjkzMDRWOS4zMjgzM0wxNDEuNDE1IDkuMzIzMjNWOC45MDM5MkMxNDEuNDE1IDguNDQ3MTkgMTQxLjc4NiA4LjA3NzU4IDE0Mi4yNDQgOC4wNzk4NkwxNDIuNDQxIDguMDgwOTVWNi41NTMwNkwxNDQuMDgyIDYuMDkwNTdWOC4wODA3M0gxNDUuNTY5VjguNTA0MTZDMTQ1LjU2OSA4LjYxMjQyIDE0NS41NDggOC43MTk2MSAxNDUuNTA2IDguODE5NjFDMTQ1LjQ2NSA4LjkxOTYxIDE0NS40MDQgOS4wMTA0NyAxNDUuMzI4IDkuMDg2OTlDMTQ1LjI1MSA5LjE2MzUxIDE0NS4xNiA5LjIyNDIgMTQ1LjA2IDkuMjY1NTlDMTQ0Ljk2IDkuMzA2OTggMTQ0Ljg1MyA5LjMyODI2IDE0NC43NDUgOS4zMjgyMkgxNDQuMDgyVjEyLjcyMDFDMTQ0LjA4MiAxMy4yNDIzIDE0NC4zNzggMTMuNDI1NiAxNDQuNzYgMTMuNDg4N0MxNDUuMjA5IDEzLjU2MjkgMTQ1LjU4MyAxMy44ODggMTQ1LjU4MyAxNC4zNDNWMTQuOTYyNkMxNDQuMDI5IDE0Ljk2MjYgMTQyLjQ0MSAxNC44OTQyIDE0Mi40NDEgMTIuOTMwNFonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTEwLjA1OCA3LjkyNTU0QzEwOC40MTcgNy44ODM0NCAxMDYuMzk2IDguOTIwNjIgMTA2LjM5NiAxMS41MTM3QzEwNi4zOTYgMTQuMDY0NiAxMDguNDE3IDE1LjA3MzggMTEwLjA1OCAxNS4wMzE4QzExMS43NDIgMTUuMDczOCAxMTMuNzQ4IDE0LjA2NDYgMTEzLjc0OCAxMS41MTM3QzExMy43NDggOC45MjA2MiAxMTEuNzQyIDcuODgzNDQgMTEwLjA1OCA3LjkyNTU0Wk0xMTAuMDcgMTMuNzU4NkMxMDguODc4IDEzLjc1ODYgMTA4LjAzMiAxMi44OTA1IDEwOC4wMzIgMTEuNDYxQzEwOC4wMzIgMTAuMTAxMyAxMDguODc4IDkuMjA1NjkgMTEwLjA3MSA5LjIwNTY5QzExMS4yNjMgOS4yMDU2OSAxMTIuMTAxIDEwLjA5OTUgMTEyLjEwMSAxMS40NTlDMTEyLjEwMSAxMi44ODg3IDExMS4yNjMgMTMuNzU4NiAxMTAuMDcgMTMuNzU4NlonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTE4LjA2IDcuOTQwOThDMTE5LjQ5MSA3Ljk0MDk4IDEyMC45NzggOC4zMzMzNyAxMjAuOTc4IDExLjEzNjZWMTQuODkzSDEyMC4wNjNDMTE5LjYwOCAxNC44OTMgMTE5LjIzOCAxNC41MjQgMTE5LjIzOCAxNC4wNjg5VjEwLjk5NjVDMTE5LjIzOCA5LjY2NTA2IDExOC43NDcgOS4xNjA0NyAxMTcuODkxIDkuMTYwNDdDMTE3LjQxNCA5LjE2MDQ3IDExNi43OTcgOS41MjQ4NiAxMTYuNTAyIDkuODE5MTVWMTQuMDY5QzExNi41MDIgMTQuMTc3MyAxMTYuNDgxIDE0LjI4NDUgMTE2LjQ0IDE0LjM4NDVDMTE2LjM5OCAxNC40ODQ1IDExNi4zMzcgMTQuNTc1MyAxMTYuMjYxIDE0LjY1MTlDMTE2LjE4NCAxNC43Mjg0IDExNi4wOTMgMTQuNzg5MSAxMTUuOTkzIDE0LjgzMDVDMTE1Ljg5MyAxNC44NzE5IDExNS43ODYgMTQuODkzMSAxMTUuNjc4IDE0Ljg5MzFIMTE0Ljg0N1Y4LjEwOTE4SDExNS43NzNDMTE1LjkzMiA4LjEwOTE0IDExNi4wODcgOC4xNjMxNSAxMTYuMjEyIDguMjYyNDJDMTE2LjMzNyA4LjM2MTY4IDExNi40MjQgOC41MDAzMyAxMTYuNDYgOC42NTU3N0MxMTYuODgxIDguMTkzMjggMTE3LjQyOCA3Ljk0MDk4IDExOC4wNiA3Ljk0MDk4Wk0xMjIuODU0IDguMDk3MTNDMTIzLjAyNCA4LjA5NzA4IDEyMy4xOSA4LjE0OTYgMTIzLjMyOSA4LjI0NzVDMTIzLjQ2OCA4LjM0NTQxIDEyMy41NzQgOC40ODM5MSAxMjMuNjMxIDguNjQ0MDVMMTI1LjEzMyAxMi44NDg2TDEyNi42MzUgOC42NDQxNUMxMjYuNjkyIDguNDg0MDIgMTI2Ljc5OCA4LjM0NTUxIDEyNi45MzcgOC4yNDc2QzEyNy4wNzYgOC4xNDk3IDEyNy4yNDIgOC4wOTcxOCAxMjcuNDEyIDguMDk3MjRIMTI4LjU5OEwxMjYuMTUyIDE0LjM1NjdDMTI2LjA5MSAxNC41MTEyIDEyNS45ODYgMTQuNjQzOSAxMjUuODQ5IDE0LjczNzRDMTI1LjcxMSAxNC44MzEgMTI1LjU0OSAxNC44ODEgMTI1LjM4MyAxNC44ODA5SDEyNC4zMzNMMTIxLjY2OCA4LjA5NzEzSDEyMi44NTRaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTEzNS4wODUgMTQuNTUxNEMxMzQuNTY2IDE0Ljc2MTYgMTMzLjUxMyAxNS4wNDE2IDEzMi40MTggMTUuMDQxNkMxMzAuNDk2IDE1LjA0MTYgMTI5LjAyNCAxMy45MzQ1IDEyOS4wMjQgMTEuNDM5NkMxMjkuMDI0IDkuMTk3MDEgMTMwLjQ1MSA3Ljk5NzkyIDEzMi4xOTEgNy45OTc5MkMxMzQuMzM4IDcuOTk3OTIgMTM1LjI1NCA5LjQzNzggMTM1LjE1OCAxMS4zOTc5QzEzNS4xMzkgMTEuODAyOSAxMzQuNzg2IDEyLjA5ODMgMTM0LjM4IDEyLjA5ODNIMTMwLjY3OUMxMzAuNzYzIDEzLjE5MTYgMTMxLjU2MiAxMy43NjYyIDEzMi42MTUgMTMuNzY2MkMxMzMuMDI4IDEzLjc2NjIgMTMzLjQ2MiAxMy43NDUyIDEzMy45ODMgMTMuNjQ4MUMxMzQuNTM1IDEzLjU0NSAxMzUuMDg1IDEzLjkzNzUgMTM1LjA4NSAxNC40OTg1VjE0LjU1MTRaTTEzMy42NzMgMTAuOTQ5QzEzMy43ODUgOS44NzYyMSAxMzMuMDYxIDkuMjg3NTIgMTMyLjE5MSA5LjI4NzUyQzEzMS4zMjEgOS4yODc1MiAxMzAuNzM0IDkuOTM5NzkgMTMwLjY3OSAxMC45NDg5TDEzMy42NzMgMTAuOTQ5WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xMzcuMzQ1IDguMTExMjJDMTM3LjQ5NyA4LjExMTE4IDEzNy42NDUgOC4xNjIyOSAxMzcuNzY1IDguMjU2MzVDMTM3Ljg4NCA4LjM1MDQxIDEzNy45NjkgOC40ODE5NyAxMzguMDA1IDguNjI5OTNDMTM4LjU2NiA4LjIwOTMyIDEzOS4yNjggNy45NDMwMyAxMzkuNzU5IDcuOTQzMDNDMTM5LjgwMSA3Ljk0MzAzIDE0MC4wNjggNy45NDMwMyAxNDAuNDg5IDcuOTk5MTNWOC43MjY1QzE0MC40ODkgOS4xMTc0OCAxNDAuMTUgOS40MTQ3IDEzOS43NTkgOS40MTQ3QzEzOS4zMSA5LjQxNDcgMTM4LjY1MSA5LjU4MjkgMTM4LjEzMSA5Ljg3NzNWMTQuODk1MUgxMzYuNDYyVjguMTExMTJMMTM3LjM0NSA4LjExMTIyWk0xNTYuNiAxNC4wNTA4VjguMDkxMDRIMTU1Ljc2OUMxNTUuMzE0IDguMDkxMDQgMTU0Ljk0NCA4LjQ1OTk5IDE1NC45NDQgOC45MTUxVjE0Ljg3NDhIMTU1Ljc3NUMxNTYuMjMgMTQuODc0OCAxNTYuNiAxNC41MDU4IDE1Ni42IDE0LjA1MDhaTTE1OC44NTcgMTIuOTQ0N1Y5LjM0MjU0SDE1Ny43NDlWOC45MTkxMkMxNTcuNzQ5IDguNDY0MDEgMTU4LjExOCA4LjA5NTA2IDE1OC41NzQgOC4wOTUwNkgxNTguODU3VjYuNTY3MzlMMTYwLjQ5OSA2LjEwNDc5VjguMDk1MDZIMTYxLjk4NlY4LjUxODQ4QzE2MS45ODYgOC45NzM1OSAxNjEuNjE3IDkuMzQyNTQgMTYxLjE2MSA5LjM0MjU0SDE2MC40OTlWMTIuNzM0NUMxNjAuNDk5IDEzLjI1NjYgMTYwLjc5NSAxMy40NCAxNjEuMTc3IDEzLjUwM0MxNjEuNjI2IDEzLjU3NzQgMTYyIDEzLjkwMjQgMTYyIDE0LjM1NzRWMTQuOTc3QzE2MC40NDYgMTQuOTc3IDE1OC44NTcgMTQuOTA4NiAxNTguODU3IDEyLjk0NDdaTTk4LjE5MjkgMTAuMTEyNEM5OC4yMDMzIDYuOTQwNDYgMTAwLjU5OCA1LjE2ODA5IDEwMi44OTUgNS4xNjgwOUMxMDQuMTcxIDUuMTY4MDkgMTA1LjM0MiA1LjQ0Mjg1IDEwNi4zMDQgNi4xMjk1M0wxMDUuOTE0IDYuNjYzMUMxMDUuNjU0IDcuMDIwMTEgMTA1LjE2IDcuMTYxOTQgMTA0Ljc0OSA2Ljk5OTQ5QzEwNC4xNjkgNi43NzAyIDEwMy42MjIgNi43MjE4IDEwMy4yMTUgNi43MjE4QzEwMS4zMzUgNi43MjE4IDk5LjkxNjkgNy45Mjg0OSA5OS45MDY4IDEwLjExMjNDOTkuOTE2OSAxMi4yOTU5IDEwMS4zMzUgMTMuNTIwMSAxMDMuMjE1IDEzLjUyMDFDMTAzLjYyMiAxMy41MjAxIDEwNC4xNjkgMTMuNDcxNyAxMDQuNzQ5IDEzLjI0MjRDMTA1LjE2IDEzLjA3OTkgMTA1LjY1NCAxMy4yMDQ2IDEwNS45MTQgMTMuNTYxNUwxMDYuMzA0IDE0LjA5NTJDMTA1LjM0MiAxNC43ODE5IDEwNC4xNzEgMTUuMDU2NiAxMDIuODk1IDE1LjA1NjZDMTAwLjU5OCAxNS4wNTY2IDk4LjIwMzMgMTMuMjg0MiA5OC4xOTI5IDEwLjExMjRaTTE0Ny42MTkgNS4yMTc2OEMxNDguMDc0IDUuMjE3NjggMTQ4LjQ0NCA1LjU4NjYzIDE0OC40NDQgNi4wNDE3NFY5LjgxOTY4TDE1MS44MiA1LjU4MTMxQzE1MS44OTcgNS40NzczMyAxNTEuOTk3IDUuMzkyODIgMTUyLjExMiA1LjMzNDZDMTUyLjIyNyA1LjI3NjM4IDE1Mi4zNTUgNS4yNDYwNyAxNTIuNDg0IDUuMjQ2MTFIMTUzLjk4NEwxNTAuMTY2IDEwLjA2MTVMMTUzLjk4NCAxNC44NzQ5SDE1Mi40ODRDMTUyLjM1NSAxNC44NzQ5IDE1Mi4yMjcgMTQuODQ0NiAxNTIuMTEyIDE0Ljc4NjRDMTUxLjk5NyAxNC43MjgxIDE1MS44OTcgMTQuNjQzNiAxNTEuODIgMTQuNTM5N0wxNDguNDQ0IDEwLjMwMjVWMTQuMDUwOEMxNDguNDQ0IDE0LjUwNTkgMTQ4LjA3NCAxNC44NzQ5IDE0Ny42MTkgMTQuODc0OUgxNDYuNzQ2VjUuMjE3NjhIMTQ3LjYxOVonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMC43NzM0MzggNi41NzUySDIuNjgwNjZDMy41NjU0MyA2LjU3NTIgNC4yMDQxIDYuNzA0MSA0LjU5NjY4IDYuOTYxOTFDNC45OTIxOSA3LjIxOTczIDUuMTg5OTQgNy42MjY5NSA1LjE4OTk0IDguMTgzNTlDNS4xODk5NCA4LjU1ODU5IDUuMDkzMjYgOC44NzA2MSA0Ljg5OTkgOS4xMTk2M0M0LjcwNjU0IDkuMzY4NjUgNC40MjgyMiA5LjUyNTM5IDQuMDY0OTQgOS41ODk4NFY5LjYzMzc5QzQuNTE2MTEgOS43MTg3NSA0Ljg0NzE3IDkuODg3MjEgNS4wNTgxMSAxMC4xMzkyQzUuMjcxOTcgMTAuMzg4MiA1LjM3ODkxIDEwLjcyNjYgNS4zNzg5MSAxMS4xNTQzQzUuMzc4OTEgMTEuNzMxNCA1LjE3Njc2IDEyLjE4NDEgNC43NzI0NiAxMi41MTIyQzQuMzcxMDkgMTIuODM3NCAzLjgxMTUyIDEzIDMuMDkzNzUgMTNIMC43NzM0MzhWNi41NzUyWk0xLjgyMzczIDkuMjI5NDlIMi44MzQ0N0MzLjI3MzkzIDkuMjI5NDkgMy41OTQ3MyA5LjE2MDY0IDMuNzk2ODggOS4wMjI5NUMzLjk5OTAyIDguODgyMzIgNC4xMDAxIDguNjQ1MDIgNC4xMDAxIDguMzExMDRDNC4xMDAxIDguMDA5MjggMy45OTAyMyA3Ljc5MTAyIDMuNzcwNTEgNy42NTYyNUMzLjU1MzcxIDcuNTIxNDggMy4yMDgwMSA3LjQ1NDEgMi43MzM0IDcuNDU0MUgxLjgyMzczVjkuMjI5NDlaTTEuODIzNzMgMTAuMDgyVjEyLjExNjdIMi45Mzk5NEMzLjM3OTM5IDEyLjExNjcgMy43MTA0NSAxMi4wMzMyIDMuOTMzMTEgMTEuODY2MkM0LjE1ODY5IDExLjY5NjMgNC4yNzE0OCAxMS40Mjk3IDQuMjcxNDggMTEuMDY2NEM0LjI3MTQ4IDEwLjczMjQgNC4xNTcyMyAxMC40ODQ5IDMuOTI4NzEgMTAuMzIzN0MzLjcwMDIgMTAuMTYyNiAzLjM1MzAzIDEwLjA4MiAyLjg4NzIxIDEwLjA4MkgxLjgyMzczWicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xMy4wMTEgNi41NzUyVjEwLjczMjRDMTMuMDExIDExLjIwNyAxMi45MDg0IDExLjYyMyAxMi43MDM0IDExLjk4MDVDMTIuNTAxMiAxMi4zMzUgMTIuMjA2OCAxMi42MDg5IDExLjgyMDEgMTIuODAyMkMxMS40MzYzIDEyLjk5MjcgMTAuOTc2MyAxMy4wODc5IDEwLjQ0MDIgMTMuMDg3OUM5LjY0MzMgMTMuMDg3OSA5LjAyMzY4IDEyLjg3NyA4LjU4MTMgMTIuNDU1MUM4LjEzODkyIDEyLjAzMzIgNy45MTc3MiAxMS40NTMxIDcuOTE3NzIgMTAuNzE0OFY2LjU3NTJIOC45NzI0VjEwLjY0MDFDOC45NzI0IDExLjE3MDQgOS4wOTU0NiAxMS41NjE1IDkuMzQxNTUgMTEuODEzNUM5LjU4NzY1IDEyLjA2NTQgOS45NjU1NyAxMi4xOTE0IDEwLjQ3NTMgMTIuMTkxNEMxMS40NjU2IDEyLjE5MTQgMTEuOTYwNyAxMS42NzE0IDExLjk2MDcgMTAuNjMxM1Y2LjU3NTJIMTMuMDExWicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xNS45MTQ2IDEzVjYuNTc1MkgxNi45NjQ5VjEzSDE1LjkxNDZaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTE5LjkyNTUgMTNWNi41NzUySDIwLjk3NThWMTIuMDk5MUgyMy42OTZWMTNIMTkuOTI1NVonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMjguMjgyOCAxM0gyNy4yMzI1VjcuNDc2MDdIMjUuMzQyOFY2LjU3NTJIMzAuMTcyNFY3LjQ3NjA3SDI4LjI4MjhWMTNaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTQxLjk0NzIgMTNINDAuODA0NkwzOS43MTQ4IDkuMTY3OTZDMzkuNjY3OSA5LjAwMDk3IDM5LjYwOTMgOC43NjA3NCAzOS41MzkgOC40NDcyN0MzOS40Njg3IDguMTMwODYgMzkuNDI2MiA3LjkxMTEzIDM5LjQxMTYgNy43ODgwOUMzOS4zODIzIDcuOTc1NTkgMzkuMzMzOSA4LjIxODc1IDM5LjI2NjUgOC41MTc1OEMzOS4yMDIxIDguODE2NDEgMzkuMTQ3OSA5LjAzOTA1IDM5LjEwMzkgOS4xODU1NEwzOC4wNDA1IDEzSDM2Ljg5NzlMMzYuMDY3MyA5Ljc4MzJMMzUuMjIzNiA2LjU3NTJIMzYuMjk1OEwzNy4yMTQzIDEwLjMxOTNDMzcuMzU3OCAxMC45MTk5IDM3LjQ2MDQgMTEuNDUwMiAzNy41MjE5IDExLjkxMDJDMzcuNTU0MSAxMS42NjExIDM3LjYwMjUgMTEuMzgyOCAzNy42NjY5IDExLjA3NTJDMzcuNzMxNCAxMC43Njc2IDM3Ljc5IDEwLjUxODYgMzcuODQyNyAxMC4zMjgxTDM4Ljg4ODYgNi41NzUySDM5LjkzMDFMNDEuMDAyNCAxMC4zNDU3QzQxLjEwNDkgMTAuNjk0MyA0MS4yMTMzIDExLjIxNTggNDEuMzI3NiAxMS45MTAyQzQxLjM3MTUgMTEuNDkxMiA0MS40NzcgMTAuOTU4IDQxLjY0NCAxMC4zMTA1TDQyLjU1OCA2LjU3NTJINDMuNjIxNUw0MS45NDcyIDEzWicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J000NS43OTU3IDEzVjYuNTc1Mkg0Ni44NDZWMTNINDUuNzk1N1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNNTIuMDI1OCAxM0g1MC45NzU1VjcuNDc2MDdINDkuMDg1OVY2LjU3NTJINTMuOTE1NVY3LjQ3NjA3SDUyLjAyNThWMTNaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTYxLjIzMTIgMTNINjAuMTc2NVYxMC4xMDRINTcuMjE0NlYxM0g1Ni4xNjQzVjYuNTc1Mkg1Ny4yMTQ2VjkuMjAzMTJINjAuMTc2NVY2LjU3NTJINjEuMjMxMlYxM1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDL3N2ZyUzRVxcXCIpO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtcG93ZXJlZC1ieS1jb252ZXJ0a2l0OmhvdmVyLFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1wb3dlcmVkLWJ5LWNvbnZlcnRraXQ6Zm9jdXMge1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMDI1KSBwZXJzcGVjdGl2ZSgxcHgpO1xcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMS4wMjUpIHBlcnNwZWN0aXZlKDFweCk7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDI1KSBwZXJzcGVjdGl2ZSgxcHgpO1xcbiAgb3BhY2l0eTogMTtcXG59XFxuXFxuQC13ZWJraXQta2V5ZnJhbWVzIGZvcm1raXQtYm91bmNlZGVsYXktZm9ybWtpdC1mb3JtLWRhdGEtdWlkLTVjM2EzM2VlMDItIHtcXG5cXG4gIDAlLFxcbiAgODAlLFxcbiAgMTAwJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICB9XFxuXFxuICA0MCUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgfVxcbn1cXG5cXG5Aa2V5ZnJhbWVzIGZvcm1raXQtYm91bmNlZGVsYXktZm9ybWtpdC1mb3JtLWRhdGEtdWlkLTVjM2EzM2VlMDItIHtcXG5cXG4gIDAlLFxcbiAgODAlLFxcbiAgMTAwJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICB9XFxuXFxuICA0MCUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgfVxcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgYmxvY2txdW90ZSB7XFxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuICBtYXJnaW46IDAgMCAyMHB4O1xcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjZTFlMWUxO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIge1xcbiAgYm94LXNoYWRvdzogMCAwcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XFxuICBtYXgtd2lkdGg6IDcwMHB4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuXFxuLmZvcm1zLXByZXZpZXdfX2Zvcm0gLmZvcm1raXQtaGVyby1iZy1jb2xvcixcXG4uZm9ybXMtcHJldmlld19fZm9ybSAuZm9ybWtpdC1oZXJvLWJnLWltZyxcXG4uZm9ybXMtcHJldmlld19fZm9ybSAuZm9ybWtpdC1oZWFkZXIsXFxuLmZvcm1zLXByZXZpZXdfX2Zvcm0gLmZvcm1raXQtY29udGVudCB7XFxuICB6LWluZGV4OiB1bnNldCAhaW1wb3J0YW50O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgW2RhdGEtc3R5bGU9XFxcImZ1bGxcXFwiXSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtY29udGFpbmVyIHtcXG4gIGJveC1zaGFkb3c6IDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xcbiAgcGFkZGluZzogMjBweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWhlcm8ge1xcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG4gIHBhZGRpbmc6IDMwcHggNSU7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1oZXJvLWJnLWNvbG9yLFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1oZXJvLWJnLWltZyB7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBsZWZ0OiAwO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgd2lkdGg6IDEwMCU7XFxuICB6LWluZGV4OiAxMDAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtaGVyby1iZy1pbWcge1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1oZWFkZXIsXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWNvbnRlbnQge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgei1pbmRleDogMTAwMTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWhlYWRlciB7XFxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtZmllbGRzW2RhdGEtc3RhY2tlZD1cXFwiZmFsc2VcXFwiXSB7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIC13ZWJraXQtZmxleC13cmFwOiB3cmFwO1xcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcXG4gIGZsZXgtd3JhcDogd3JhcDtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtZmllbGRzIGlucHV0LFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1maWVsZHMgc2VsZWN0IHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWZpZWxkLFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllciAuZm9ybWtpdC1zdWJtaXQge1xcbiAgLXdlYmtpdC1mbGV4OiAxIDAgMTAwJTtcXG4gIC1tcy1mbGV4OiAxIDAgMTAwJTtcXG4gIGZsZXg6IDEgMCAxMDAlO1xcbiAgbWFyZ2luOiAwIDAgMTVweCAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtZmllbGRzW2RhdGEtc3RhY2tlZD1cXFwiZmFsc2VcXFwiXSAuZm9ybWtpdC1maWVsZCxcXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtZmllbGRzW2RhdGEtc3RhY2tlZD1cXFwiZmFsc2VcXFwiXSAuZm9ybWtpdC1zdWJtaXQge1xcbiAgbWFyZ2luOiAwIDAgMCAhaW1wb3J0YW50O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtZmllbGRzW2RhdGEtc3RhY2tlZD1cXFwiZmFsc2VcXFwiXSAuZm9ybWtpdC1maWVsZCB7XFxuICAtd2Via2l0LWZsZXg6IDEwMCAxIGF1dG87XFxuICAtbXMtZmxleDogMTAwIDEgYXV0bztcXG4gIGZsZXg6IDEwMCAxIGF1dG87XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtZmllbGRzW2RhdGEtc3RhY2tlZD1cXFwiZmFsc2VcXFwiXSAuZm9ybWtpdC1maWVsZCBpbnB1dCB7XFxuICBib3JkZXItcmlnaHQ6IG5vbmU7XFxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMCAhaW1wb3J0YW50O1xcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDAgIWltcG9ydGFudDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LWZpZWxkc1tkYXRhLXN0YWNrZWQ9XFxcImZhbHNlXFxcIl0gLmZvcm1raXQtc3VibWl0IHtcXG4gIC13ZWJraXQtZmxleDogMSAxIGF1dG87XFxuICAtbXMtZmxleDogMSAxIGF1dG87XFxuICBmbGV4OiAxIDEgYXV0bztcXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDAgIWltcG9ydGFudDtcXG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDAgIWltcG9ydGFudDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyIC5mb3Jta2l0LXN1Ym1pdCB7XFxuICBsaW5lLWhlaWdodDogMS40O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtc3VibWl0PnNwYW4ge1xcbiAgcGFkZGluZzogMTNweCAyNHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXIgLmZvcm1raXQtcG93ZXJlZC1ieSB7XFxuICBjb2xvcjogIzdkN2Q3ZDtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgbWFyZ2luOiAxNXB4IDAgMDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5yYWluaWVyW21pbi13aWR0aH49XFxcIjcwMFxcXCJdIFtkYXRhLXN0eWxlPVxcXCJjbGVhblxcXCJdLFxcbi5mb3Jta2l0LWZvcm0ucmFpbmllclttaW4td2lkdGh+PVxcXCI4MDBcXFwiXSBbZGF0YS1zdHlsZT1cXFwiY2xlYW5cXFwiXSB7XFxuICBwYWRkaW5nOiAxMHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXJbbWluLXdpZHRofj1cXFwiNzAwXFxcIl0gLmZvcm1raXQtaGVybyxcXG4uZm9ybWtpdC1mb3JtLnJhaW5pZXJbbWluLXdpZHRofj1cXFwiODAwXFxcIl0gLmZvcm1raXQtaGVybyB7XFxuICBwYWRkaW5nOiA4MHB4IDEwJTtcXG59XFxuXCI7XG5pbmplY3Rvcl9iZjFiYTdlMChjc3NfYTZjMWVmMDYse1wic2luZ2xlVGFnXCI6dHJ1ZX0pO1xuXG52YXIgQUxMT1dFRF9GT1JNQVRTJDIgPSBbJ2lubGluZScsICdtb2RhbCcsICdzbGlkZSBpbiddO1xudmFyIGJnSW1hZ2UgPSAnLy9wYWdlcy5jb252ZXJ0a2l0LmNvbS9hc3NldHMvcmFpbmllci9iZy5qcGcnO1xuXG5mdW5jdGlvbiBSYWluaWVyKF9yZWYpIHtcbiAgdmFyIG9wdGlvbnMgPSBfcmVmLm9wdGlvbnMsXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGFjdGlvbiA9IF9yZWYuYWN0aW9uLFxuICAgICAgc3VibWl0VGV4dCA9IF9yZWYuc3VibWl0VGV4dCxcbiAgICAgIGVtYWlsUGxhY2Vob2xkZXIgPSBfcmVmLmVtYWlsUGxhY2Vob2xkZXIsXG4gICAgICBuYW1lUGxhY2Vob2xkZXIgPSBfcmVmLm5hbWVQbGFjZWhvbGRlcixcbiAgICAgIGhpZGVOYW1lID0gX3JlZi5oaWRlTmFtZSxcbiAgICAgIHNob3dMYWJlbHMgPSBfcmVmLnNob3dMYWJlbHMsXG4gICAgICBuYW1lTGFiZWwgPSBfcmVmLm5hbWVMYWJlbCxcbiAgICAgIGVtYWlsTGFiZWwgPSBfcmVmLmVtYWlsTGFiZWwsXG4gICAgICBuZXdUYWIgPSBfcmVmLm5ld1RhYixcbiAgICAgIGZvcm1JZCA9IF9yZWYuZm9ybUlkLFxuICAgICAgZm9ybWF0ID0gX3JlZi5mb3JtYXQsXG4gICAgICBzdGFja2VkID0gX3JlZi5zdGFja2VkLFxuICAgICAgaGlkZVdhcm5pbmdzID0gX3JlZi5oaWRlV2FybmluZ3M7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgIWhpZGVXYXJuaW5ncyAmJiAhQUxMT1dFRF9GT1JNQVRTJDIuaW5jbHVkZXMoZm9ybWF0KSA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFdhcm5pbmcsIHtcbiAgICBtZXNzYWdlOiBcIlRoaXMgdGVtcGxhdGUgaXMgbm90IGF2YWlsYWJsZSBmb3IgdGhlIGNob3NlbiBmb3JtYXRcIlxuICB9KSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiLCB7XG4gICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgY2xhc3NOYW1lOiBcInNldmEtZm9ybSBmb3Jta2l0LWZvcm0gcmFpbmllciBcIi5jb25jYXQoY2xhc3NOYW1lKSxcbiAgICBtZXRob2Q6IFwicG9zdFwiLFxuICAgIHRhcmdldDogbmV3VGFiID8gJ19ibGFuaycgOiAnX3NlbGYnLFxuICAgIFwiZGF0YS1zdi1mb3JtXCI6IGZvcm1JZCxcbiAgICBcImRhdGEtdWlkXCI6IG9wdGlvbnMudWlkLFxuICAgIFwiZGF0YS1mb3JtYXRcIjogZm9ybWF0LFxuICAgIFwiZGF0YS12ZXJzaW9uXCI6IG9wdGlvbnMudmVyc2lvbixcbiAgICBcImRhdGEtb3B0aW9uc1wiOiBKU09OLnN0cmluZ2lmeShvcHRpb25zKSxcbiAgICBcIm1pbi13aWR0aFwiOiBcIjQwMCA1MDAgNjAwIDcwMCA4MDBcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtY29udGFpbmVyXCIsXG4gICAgXCJkYXRhLXN0eWxlXCI6IFwiZnVsbFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2IoMjU1LCAyNTUsIDI1NSknXG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtaGVyb1wiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1oZXJvLWJnLWNvbG9yXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGJhY2tncm91bmQ6IFwibGluZWFyLWdyYWRpZW50KHJnYmEoMTYsIDE2LCAxNiwgLjgpLCByZ2JhKDE2LCAxNiwgMTYsIC44KSksIHVybChcIi5jb25jYXQoYmdJbWFnZSwgXCIpXCIpLFxuICAgICAgYmFja2dyb3VuZFNpemU6ICdjb3ZlcicsXG4gICAgICBiYWNrZ3JvdW5kUG9zaXRpb246ICdjZW50ZXInXG4gICAgfVxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWhlYWRlclwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiaGVhZGVyXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGZvbnRTaXplOiAnMjdweCcsXG4gICAgICBmb250V2VpZ2h0OiA3MDAsXG4gICAgICBtYXJnaW5Cb3R0b206ICcyMHB4JyxcbiAgICAgIGNvbG9yOiAncmdiKDI1NSwyNTUsMjU1KSdcbiAgICB9XG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaDFcIiwgbnVsbCwgXCJKb2luIHRoZSBOZXdzbGV0dGVyXCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgbnVsbCwgXCJcXHUyMDBCXCIpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWNvbnRlbnRcIixcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImNvbnRlbnRcIixcbiAgICBzdHlsZToge1xuICAgICAgY29sb3I6ICdyZ2IoMjU1LCAyNTUsIDI1NSknLFxuICAgICAgZm9udFNpemU6ICcxOHB4JyxcbiAgICAgIGZvbnRXZWlnaHQ6IDQwMFxuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIFwiUmVjZWl2ZSB0aXBzIGFuZCB0cmlja3Mgb24gaG93IHRvIHRyYXZlbCB0aGUgd29ybGRcIikpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtYWxlcnQgZm9ybWtpdC1hbGVydC1lcnJvclwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiZXJyb3JzXCIsXG4gICAgXCJkYXRhLWdyb3VwXCI6IFwiYWxlcnRcIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiZmllbGRzXCIsXG4gICAgXCJkYXRhLXN0YWNrZWRcIjogc3RhY2tlZCxcbiAgICBjbGFzc05hbWU6IFwic2V2YS1maWVsZHMgZm9ybWtpdC1maWVsZHNcIlxuICB9LCAhaGlkZU5hbWUgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIHNob3dMYWJlbHMgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHtcbiAgICBodG1sRm9yOiBcImNrLWZpcnN0LWZvcm1cIlxuICB9LCBuYW1lTGFiZWwpIDogbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWZpZWxkXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtaW5wdXRcIixcbiAgICBcImFyaWEtbGFiZWxcIjogbmFtZUxhYmVsLFxuICAgIG5hbWU6IFwiZmllbGRzW2ZpcnN0X25hbWVdXCIsXG4gICAgcGxhY2Vob2xkZXI6IG5hbWVQbGFjZWhvbGRlcixcbiAgICB0eXBlOiBcInRleHRcIixcbiAgICBzdHlsZToge1xuICAgICAgY29sb3I6ICdyZ2IoMTQ2LCAxNDYsIDE0NiknLFxuICAgICAgYm9yZGVyQ29sb3I6ICdyZ2IoMjI4LCAyMzEsIDIzNCknLFxuICAgICAgYm9yZGVyUmFkaXVzOiAwLFxuICAgICAgZm9udFdlaWdodDogNDAwXG4gICAgfSxcbiAgICBpZDogXCJjay1maXJzdC1uYW1lXCJcbiAgfSkpKSwgc2hvd0xhYmVscyA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge1xuICAgIGh0bWxGb3I6IFwiY2stZW1haWxcIlxuICB9LCBlbWFpbExhYmVsKSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1maWVsZFwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWlucHV0XCIsXG4gICAgXCJhcmlhLWxhYmVsXCI6IGVtYWlsTGFiZWwsXG4gICAgbmFtZTogXCJlbWFpbF9hZGRyZXNzXCIsXG4gICAgcGxhY2Vob2xkZXI6IGVtYWlsUGxhY2Vob2xkZXIsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgdHlwZTogXCJlbWFpbFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBjb2xvcjogJ3JnYigxNDYsIDE0NiwgMTQ2KScsXG4gICAgICBib3JkZXJDb2xvcjogJ3JnYigyMjgsIDIzMSwgMjM0KScsXG4gICAgICBib3JkZXJSYWRpdXM6IDAsXG4gICAgICBmb250V2VpZ2h0OiA0MDBcbiAgICB9LFxuICAgIGlkOiBcImNrLWVtYWlsXCJcbiAgfSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgXCJkYXRhLWVsZW1lbnRcIjogXCJzdWJtaXRcIixcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1zdWJtaXQgZm9ybWtpdC1zdWJtaXRcIixcbiAgICBzdHlsZToge1xuICAgICAgY29sb3I6ICdyZ2IoMjU1LCAyNTUsIDI1NSknLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiKDE5OSwgOTIsIDg2KScsXG4gICAgICBib3JkZXJSYWRpdXM6IDAsXG4gICAgICBmb250V2VpZ2h0OiA3MDBcbiAgICB9LFxuICAgIHR5cGU6IFwic3VibWl0XCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LXNwaW5uZXJcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIHN1Ym1pdFRleHQpKSksIG9wdGlvbnMuc2V0dGluZ3MucG93ZXJlZF9ieS5zaG93ID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtcbiAgICBocmVmOiBvcHRpb25zLnNldHRpbmdzLnBvd2VyZWRfYnkudXJsLFxuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LXBvd2VyZWQtYnlcIixcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcInBvd2VyZWQtYnlcIixcbiAgICB0YXJnZXQ6IFwiX2JsYW5rXCIsXG4gICAgcmVsOiBcIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICB9LCBcIlBvd2VyZWQgQnkgQ29udmVydEtpdFwiKSA6IG51bGwpKSkpO1xufVxuXG5jb25zdCBjc3NfMzk0MDdiYjIgPSBcIi5mb3Jta2l0LWZvcm0ucG93ZWxsICoge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwge1xcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBsZWdlbmQge1xcbiAgYm9yZGVyOiBub25lO1xcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG4gIHBhZGRpbmc6IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiB0YWJsZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgZmllbGRzZXQge1xcbiAgYm9yZGVyOiAwO1xcbiAgcGFkZGluZzogMC4wMWVtIDAgMCAwO1xcbiAgbWFyZ2luOiAwO1xcbiAgbWluLXdpZHRoOiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBib2R5Om5vdCg6LW1vei1oYW5kbGVyLWJsb2NrZWQpIGZpZWxkc2V0IHtcXG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIGgxLFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIGgyLFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIGgzLFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIGg0LFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIGg1LFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIGg2IHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIHAge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxuICBmb250LXdlaWdodDogaW5oZXJpdDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgb2w6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgdWw6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgYmxvY2txdW90ZTpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSB7XFxuICB0ZXh0LWFsaWduOiBsZWZ0O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBwOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIGhyOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIGJsb2NrcXVvdGU6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgb2w6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgdWw6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSkge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBmb250LXN0eWxlOiBpbml0aWFsO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbFtkYXRhLWZvcm1hdD1cXFwibW9kYWxcXFwiXSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbFtkYXRhLWZvcm1hdD1cXFwic2xpZGUgaW5cXFwiXSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbFtkYXRhLWZvcm1hdD1cXFwic3RpY2t5IGJhclxcXCJdIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LXN0aWNreS1iYXIgLmZvcm1raXQtZm9ybS5wb3dlbGxbZGF0YS1mb3JtYXQ9XFxcInN0aWNreSBiYXJcXFwiXSB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtaW5wdXQsXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtc2VsZWN0LFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LWNoZWNrYm94ZXMge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LWJ1dHRvbixcXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1zdWJtaXQge1xcbiAgYm9yZGVyOiAwO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgY29sb3I6ICNmZmZmZmY7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBmb250LXNpemU6IDE1cHg7XFxuICBmb250LXdlaWdodDogNTAwO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICBwYWRkaW5nOiAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtYnV0dG9uOmhvdmVyLFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXN1Ym1pdDpob3ZlcixcXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1idXR0b246Zm9jdXMsXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtc3VibWl0OmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LWJ1dHRvbjpob3Zlcj5zcGFuLFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXN1Ym1pdDpob3Zlcj5zcGFuLFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LWJ1dHRvbjpmb2N1cz5zcGFuLFxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXN1Ym1pdDpmb2N1cz5zcGFuIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtYnV0dG9uPnNwYW4sXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtc3VibWl0PnNwYW4ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluLW91dDtcXG4gIHBhZGRpbmc6IDEycHggMjRweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtaW5wdXQge1xcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcXG4gIGZvbnQtc2l6ZTogMTVweDtcXG4gIHBhZGRpbmc6IDEycHg7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzO1xcbiAgLXdlYmtpdC1mbGV4OiAxIDAgYXV0bztcXG4gIC1tcy1mbGV4OiAxIDAgYXV0bztcXG4gIGZsZXg6IDEgMCBhdXRvO1xcbiAgbGluZS1oZWlnaHQ6IDEuNDtcXG4gIG1hcmdpbjogMDtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2Utb3V0IDMwMG1zO1xcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2Utb3V0IDMwMG1zO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1pbnB1dDpmb2N1cyB7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgYm9yZGVyLWNvbG9yOiAjMTY3N2JlO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBib3JkZXItY29sb3IgZWFzZSAzMDBtcztcXG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciBlYXNlIDMwMG1zO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1pbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIG9wYWNpdHk6IDAuODtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBvcGFjaXR5OiAwLjg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LWlucHV0Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIG9wYWNpdHk6IDAuODtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtaW5wdXQ6OnBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgb3BhY2l0eTogMC44O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBbZGF0YS1ncm91cD1cXFwiZHJvcGRvd25cXFwiXSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgW2RhdGEtZ3JvdXA9XFxcImRyb3Bkb3duXFxcIl06OmJlZm9yZSB7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG4gIHRvcDogY2FsYyg1MCUgLSAyLjVweCk7XFxuICByaWdodDogMTBweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgYm9yZGVyLWNvbG9yOiAjNGY0ZjRmIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXG4gIGJvcmRlci13aWR0aDogNnB4IDZweCAwIDZweDtcXG4gIGhlaWdodDogMDtcXG4gIHdpZHRoOiAwO1xcbiAgei1pbmRleDogOTk5O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBbZGF0YS1ncm91cD1cXFwiZHJvcGRvd25cXFwiXSBzZWxlY3Qge1xcbiAgaGVpZ2h0OiBhdXRvO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBjb2xvcjogIzMzMzMzMztcXG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbiAgcGFkZGluZzogMCA2cHg7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XFxuICBhcHBlYXJhbmNlOiBub25lO1xcbiAgZm9udC1zaXplOiAxNXB4O1xcbiAgcGFkZGluZzogMTJweDtcXG4gIHBhZGRpbmctcmlnaHQ6IDI1cHg7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzO1xcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgW2RhdGEtZ3JvdXA9XFxcImRyb3Bkb3duXFxcIl0gc2VsZWN0OmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0ge1xcbiAgdGV4dC1hbGlnbjogbGVmdDtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSB7XFxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdICoge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdOmxhc3Qtb2YtdHlwZSB7XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdK2xhYmVsOjphZnRlciB7XFxuICBjb250ZW50OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl06Y2hlY2tlZCtsYWJlbDo6YWZ0ZXIge1xcbiAgYm9yZGVyLWNvbG9yOiAjZmZmZmZmO1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gaW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXTpjaGVja2VkK2xhYmVsOjpiZWZvcmUge1xcbiAgYmFja2dyb3VuZDogIzEwYmY3YTtcXG4gIGJvcmRlci1jb2xvcjogIzEwYmY3YTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBwYWRkaW5nLWxlZnQ6IDI4cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWw6OmJlZm9yZSxcXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGxhYmVsOjphZnRlciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbDo6YmVmb3JlIHtcXG4gIGhlaWdodDogMTZweDtcXG4gIHdpZHRoOiAxNnB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XFxuICBsZWZ0OiAwcHg7XFxuICB0b3A6IDNweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbDo6YWZ0ZXIge1xcbiAgaGVpZ2h0OiA0cHg7XFxuICB3aWR0aDogOHB4O1xcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjNGQ0ZDRkO1xcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM0ZDRkNGQ7XFxuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XFxuICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcXG4gIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XFxuICBsZWZ0OiA0cHg7XFxuICB0b3A6IDhweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtYWxlcnQge1xcbiAgYmFja2dyb3VuZDogI2Y5ZmFmYjtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNlM2UzZTM7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAtd2Via2l0LWZsZXg6IDEgMCBhdXRvO1xcbiAgLW1zLWZsZXg6IDEgMCBhdXRvO1xcbiAgZmxleDogMSAwIGF1dG87XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbiAgbWFyZ2luOiAyNXB4IGF1dG87XFxuICBwYWRkaW5nOiAxMnB4O1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LWFsZXJ0OmVtcHR5IHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LWFsZXJ0LXN1Y2Nlc3Mge1xcbiAgYmFja2dyb3VuZDogI2QzZmJlYjtcXG4gIGJvcmRlci1jb2xvcjogIzEwYmY3YTtcXG4gIGNvbG9yOiAjMGM5MDVjO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1hbGVydC1lcnJvciB7XFxuICBiYWNrZ3JvdW5kOiAjZmRlOGUyO1xcbiAgYm9yZGVyLWNvbG9yOiAjZjI2NDNiO1xcbiAgY29sb3I6ICNlYTQxMTA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXNwaW5uZXIge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XFxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBoZWlnaHQ6IDBweDtcXG4gIHdpZHRoOiAwcHg7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICByaWdodDogMDtcXG4gIHdpZHRoOiAwcHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXNwaW5uZXI+ZGl2IHtcXG4gIG1hcmdpbjogYXV0bztcXG4gIHdpZHRoOiAxMnB4O1xcbiAgaGVpZ2h0OiAxMnB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIG9wYWNpdHk6IDAuMztcXG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAtd2Via2l0LWFuaW1hdGlvbjogZm9ybWtpdC1ib3VuY2VkZWxheS1mb3Jta2l0LWZvcm0tZGF0YS11aWQtNGU5YWQ0OWRiYS0gMS40cyBpbmZpbml0ZSBlYXNlLWluLW91dCBib3RoO1xcbiAgYW5pbWF0aW9uOiBmb3Jta2l0LWJvdW5jZWRlbGF5LWZvcm1raXQtZm9ybS1kYXRhLXVpZC00ZTlhZDQ5ZGJhLSAxLjRzIGluZmluaXRlIGVhc2UtaW4tb3V0IGJvdGg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXNwaW5uZXI+ZGl2Om50aC1jaGlsZCgxKSB7XFxuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuMzJzO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4zMnM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXNwaW5uZXI+ZGl2Om50aC1jaGlsZCgyKSB7XFxuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuMTZzO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4xNnM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXN1Ym1pdFtkYXRhLWFjdGl2ZV0gLmZvcm1raXQtc3Bpbm5lciB7XFxuICBvcGFjaXR5OiAxO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgd2lkdGg6IDUwcHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXN1Ym1pdFtkYXRhLWFjdGl2ZV0gLmZvcm1raXQtc3Bpbm5lcn5zcGFuIHtcXG4gIG9wYWNpdHk6IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXBvd2VyZWQtYnlbZGF0YS1hY3RpdmU9XFxcImZhbHNlXFxcIl0ge1xcbiAgb3BhY2l0eTogMC4zNTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtcG93ZXJlZC1ieS1jb252ZXJ0a2l0LWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgei1pbmRleDogNTtcXG4gIG1hcmdpbjogMTBweCAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1wb3dlcmVkLWJ5LWNvbnZlcnRraXQtY29udGFpbmVyW2RhdGEtYWN0aXZlPVxcXCJmYWxzZVxcXCJdIHtcXG4gIG9wYWNpdHk6IDAuMzU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXBvd2VyZWQtYnktY29udmVydGtpdCB7XFxuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2RjZTFlNTtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIGNvbG9yOiAjMzczZjQ1O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBoZWlnaHQ6IDM2cHg7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIG9wYWNpdHk6IDAuOTU7XFxuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIHRleHQtaW5kZW50OiAxMDAlO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBlYXNlLWluLW91dCBhbGwgMjAwbXM7XFxuICB0cmFuc2l0aW9uOiBlYXNlLWluLW91dCBhbGwgMjAwbXM7XFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICB3aWR0aDogMTkwcHg7XFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGY4LCUzQ3N2ZyB3aWR0aD0nMTYyJyBoZWlnaHQ9JzIwJyB2aWV3Qm94PScwIDAgMTYyIDIwJyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDcGF0aCBkPSdNODMuMDU2MSAxNS4yNDU3Qzg2LjY3NSAxNS4yNDU3IDg5LjQ3MjIgMTIuNTE1NCA4OS40NzIyIDkuMTQ3NDlDODkuNDcyMiA1Ljk5MjExIDg2Ljg0NDMgNC4wNjU2MyA4NS4xMDM4IDQuMDY1NjNDODIuNjgwMSA0LjA2NTYzIDgwLjczNzMgNS43NjQwNyA4MC40NjA1IDguMjg1NTFDODAuNDA5MiA4Ljc1MjQ0IDgwLjAzODcgOS4xNDQwMyA3OS41Njg2IDkuMTQwNjlDNzguNzg3MSA5LjEzNTA5IDc3LjY1MDcgOS4xMjg0MSA3Ni45MzE0IDkuMTMwOTJDNzYuNjIxNyA5LjEzMTk5IDc2LjM2NTggOC44ODEwNiA3Ni4zODEgOC41NzE5NkM3Ni40ODk1IDYuMzg1MTMgNzcuMjIxOCA0LjM0MDQgNzguNjE4IDIuNzY5NzRDODAuMTY5NSAxLjAyNDQ1IDgyLjQyODkgMCA4NS4xMDM4IDBDODkuNTk3OSAwIDkzLjg0MDYgNC4wNzc5MSA5My44NDA2IDkuMTQ3NDlDOTMuODQwNiAxNC43NjA4IDg5LjE4MzIgMTkuMzExMyA4My4xNTE3IDE5LjMxMTNDNzguODUwMiAxOS4zMTEzIDc0LjUxNzkgMTYuNTA0MSA3My4wMDUzIDEyLjU3OTVDNzIuOTk5OSAxMi41NjUgNzIuOTk4NiAxMi41NDkyIDczLjAwMTUgMTIuNTM0QzczLjAyMTggMTIuNDE3OSA3My4wNjE3IDEyLjMxMTggNzMuMTAxMSAxMi4yMDc0QzczLjE1ODMgMTIuMDU1NSA3My4yMTQzIDExLjkwNyA3My4yMDYyIDExLjczNTlMNzMuMTggMTEuMTg5MkM3My4xNzQgMTEuMDU2OSA3My4yMDc1IDEwLjkyNTggNzMuMjc2NCAxMC44MTI3QzczLjM0NTIgMTAuNjk5NSA3My40NDYzIDEwLjYwOTQgNzMuNTY2NiAxMC41NTRMNzMuNzg1MiAxMC40NTIzQzczLjkwNzcgMTAuMzk1NyA3NC4wMTQ4IDEwLjMxMDUgNzQuMDk3NiAxMC4yMDRDNzQuMTgwMyAxMC4wOTc0IDc0LjIzNjMgOS45NzI1MiA3NC4yNjA4IDkuODM5ODNDNzQuMzM0MSA5LjQzODk0IDc0LjY4NjUgOS4xNDc0OSA3NS4wOTc5IDkuMTQ3NDlDNzUuNzQwNCA5LjE0NzQ5IDc2LjI5OSA5LjU3NDEyIDc2LjUwODggMTAuMTgwNkM3Ny41MTg4IDEzLjEgNzkuMTI0NSAxNS4yNDU3IDgzLjA1NjEgMTUuMjQ1N1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTU1Ljc1OCA2LjkxMzY1QzE1NS4wMjggNi45MTM2NSAxNTQuODA0IDYuNDc5MTYgMTU0LjgwNCA1Ljk4ODU3QzE1NC44MDQgNS40Njk5NyAxNTQuOTg2IDUuMDYzNDggMTU1Ljc1OCA1LjA2MzQ4QzE1Ni41MyA1LjA2MzQ4IDE1Ni43MTIgNS40Njk5NyAxNTYuNzEyIDUuOTg4NTdDMTU2LjcxMiA2LjQ3OTA1IDE1Ni41MTYgNi45MTM2NSAxNTUuNzU4IDYuOTEzNjVaTTE0Mi40NDEgMTIuOTMwNFY5LjMyODMzTDE0MS40MTUgOS4zMjMyM1Y4LjkwMzkyQzE0MS40MTUgOC40NDcxOSAxNDEuNzg2IDguMDc3NTggMTQyLjI0NCA4LjA3OTg2TDE0Mi40NDEgOC4wODA5NVY2LjU1MzA2TDE0NC4wODIgNi4wOTA1N1Y4LjA4MDczSDE0NS41NjlWOC41MDQxNkMxNDUuNTY5IDguNjEyNDIgMTQ1LjU0OCA4LjcxOTYxIDE0NS41MDYgOC44MTk2MUMxNDUuNDY1IDguOTE5NjEgMTQ1LjQwNCA5LjAxMDQ3IDE0NS4zMjggOS4wODY5OUMxNDUuMjUxIDkuMTYzNTEgMTQ1LjE2IDkuMjI0MiAxNDUuMDYgOS4yNjU1OUMxNDQuOTYgOS4zMDY5OCAxNDQuODUzIDkuMzI4MjYgMTQ0Ljc0NSA5LjMyODIySDE0NC4wODJWMTIuNzIwMUMxNDQuMDgyIDEzLjI0MjMgMTQ0LjM3OCAxMy40MjU2IDE0NC43NiAxMy40ODg3QzE0NS4yMDkgMTMuNTYyOSAxNDUuNTgzIDEzLjg4OCAxNDUuNTgzIDE0LjM0M1YxNC45NjI2QzE0NC4wMjkgMTQuOTYyNiAxNDIuNDQxIDE0Ljg5NDIgMTQyLjQ0MSAxMi45MzA0WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xMTAuMDU4IDcuOTI1NTRDMTA4LjQxNyA3Ljg4MzQ0IDEwNi4zOTYgOC45MjA2MiAxMDYuMzk2IDExLjUxMzdDMTA2LjM5NiAxNC4wNjQ2IDEwOC40MTcgMTUuMDczOCAxMTAuMDU4IDE1LjAzMThDMTExLjc0MiAxNS4wNzM4IDExMy43NDggMTQuMDY0NiAxMTMuNzQ4IDExLjUxMzdDMTEzLjc0OCA4LjkyMDYyIDExMS43NDIgNy44ODM0NCAxMTAuMDU4IDcuOTI1NTRaTTExMC4wNyAxMy43NTg2QzEwOC44NzggMTMuNzU4NiAxMDguMDMyIDEyLjg5MDUgMTA4LjAzMiAxMS40NjFDMTA4LjAzMiAxMC4xMDEzIDEwOC44NzggOS4yMDU2OSAxMTAuMDcxIDkuMjA1NjlDMTExLjI2MyA5LjIwNTY5IDExMi4xMDEgMTAuMDk5NSAxMTIuMTAxIDExLjQ1OUMxMTIuMTAxIDEyLjg4ODcgMTExLjI2MyAxMy43NTg2IDExMC4wNyAxMy43NTg2WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xMTguMDYgNy45NDA5OEMxMTkuNDkxIDcuOTQwOTggMTIwLjk3OCA4LjMzMzM3IDEyMC45NzggMTEuMTM2NlYxNC44OTNIMTIwLjA2M0MxMTkuNjA4IDE0Ljg5MyAxMTkuMjM4IDE0LjUyNCAxMTkuMjM4IDE0LjA2ODlWMTAuOTk2NUMxMTkuMjM4IDkuNjY1MDYgMTE4Ljc0NyA5LjE2MDQ3IDExNy44OTEgOS4xNjA0N0MxMTcuNDE0IDkuMTYwNDcgMTE2Ljc5NyA5LjUyNDg2IDExNi41MDIgOS44MTkxNVYxNC4wNjlDMTE2LjUwMiAxNC4xNzczIDExNi40ODEgMTQuMjg0NSAxMTYuNDQgMTQuMzg0NUMxMTYuMzk4IDE0LjQ4NDUgMTE2LjMzNyAxNC41NzUzIDExNi4yNjEgMTQuNjUxOUMxMTYuMTg0IDE0LjcyODQgMTE2LjA5MyAxNC43ODkxIDExNS45OTMgMTQuODMwNUMxMTUuODkzIDE0Ljg3MTkgMTE1Ljc4NiAxNC44OTMxIDExNS42NzggMTQuODkzMUgxMTQuODQ3VjguMTA5MThIMTE1Ljc3M0MxMTUuOTMyIDguMTA5MTQgMTE2LjA4NyA4LjE2MzE1IDExNi4yMTIgOC4yNjI0MkMxMTYuMzM3IDguMzYxNjggMTE2LjQyNCA4LjUwMDMzIDExNi40NiA4LjY1NTc3QzExNi44ODEgOC4xOTMyOCAxMTcuNDI4IDcuOTQwOTggMTE4LjA2IDcuOTQwOThaTTEyMi44NTQgOC4wOTcxM0MxMjMuMDI0IDguMDk3MDggMTIzLjE5IDguMTQ5NiAxMjMuMzI5IDguMjQ3NUMxMjMuNDY4IDguMzQ1NDEgMTIzLjU3NCA4LjQ4MzkxIDEyMy42MzEgOC42NDQwNUwxMjUuMTMzIDEyLjg0ODZMMTI2LjYzNSA4LjY0NDE1QzEyNi42OTIgOC40ODQwMiAxMjYuNzk4IDguMzQ1NTEgMTI2LjkzNyA4LjI0NzZDMTI3LjA3NiA4LjE0OTcgMTI3LjI0MiA4LjA5NzE4IDEyNy40MTIgOC4wOTcyNEgxMjguNTk4TDEyNi4xNTIgMTQuMzU2N0MxMjYuMDkxIDE0LjUxMTIgMTI1Ljk4NiAxNC42NDM5IDEyNS44NDkgMTQuNzM3NEMxMjUuNzExIDE0LjgzMSAxMjUuNTQ5IDE0Ljg4MSAxMjUuMzgzIDE0Ljg4MDlIMTI0LjMzM0wxMjEuNjY4IDguMDk3MTNIMTIyLjg1NFonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTM1LjA4NSAxNC41NTE0QzEzNC41NjYgMTQuNzYxNiAxMzMuNTEzIDE1LjA0MTYgMTMyLjQxOCAxNS4wNDE2QzEzMC40OTYgMTUuMDQxNiAxMjkuMDI0IDEzLjkzNDUgMTI5LjAyNCAxMS40Mzk2QzEyOS4wMjQgOS4xOTcwMSAxMzAuNDUxIDcuOTk3OTIgMTMyLjE5MSA3Ljk5NzkyQzEzNC4zMzggNy45OTc5MiAxMzUuMjU0IDkuNDM3OCAxMzUuMTU4IDExLjM5NzlDMTM1LjEzOSAxMS44MDI5IDEzNC43ODYgMTIuMDk4MyAxMzQuMzggMTIuMDk4M0gxMzAuNjc5QzEzMC43NjMgMTMuMTkxNiAxMzEuNTYyIDEzLjc2NjIgMTMyLjYxNSAxMy43NjYyQzEzMy4wMjggMTMuNzY2MiAxMzMuNDYyIDEzLjc0NTIgMTMzLjk4MyAxMy42NDgxQzEzNC41MzUgMTMuNTQ1IDEzNS4wODUgMTMuOTM3NSAxMzUuMDg1IDE0LjQ5ODVWMTQuNTUxNFpNMTMzLjY3MyAxMC45NDlDMTMzLjc4NSA5Ljg3NjIxIDEzMy4wNjEgOS4yODc1MiAxMzIuMTkxIDkuMjg3NTJDMTMxLjMyMSA5LjI4NzUyIDEzMC43MzQgOS45Mzk3OSAxMzAuNjc5IDEwLjk0ODlMMTMzLjY3MyAxMC45NDlaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTEzNy4zNDUgOC4xMTEyMkMxMzcuNDk3IDguMTExMTggMTM3LjY0NSA4LjE2MjI5IDEzNy43NjUgOC4yNTYzNUMxMzcuODg0IDguMzUwNDEgMTM3Ljk2OSA4LjQ4MTk3IDEzOC4wMDUgOC42Mjk5M0MxMzguNTY2IDguMjA5MzIgMTM5LjI2OCA3Ljk0MzAzIDEzOS43NTkgNy45NDMwM0MxMzkuODAxIDcuOTQzMDMgMTQwLjA2OCA3Ljk0MzAzIDE0MC40ODkgNy45OTkxM1Y4LjcyNjVDMTQwLjQ4OSA5LjExNzQ4IDE0MC4xNSA5LjQxNDcgMTM5Ljc1OSA5LjQxNDdDMTM5LjMxIDkuNDE0NyAxMzguNjUxIDkuNTgyOSAxMzguMTMxIDkuODc3M1YxNC44OTUxSDEzNi40NjJWOC4xMTExMkwxMzcuMzQ1IDguMTExMjJaTTE1Ni42IDE0LjA1MDhWOC4wOTEwNEgxNTUuNzY5QzE1NS4zMTQgOC4wOTEwNCAxNTQuOTQ0IDguNDU5OTkgMTU0Ljk0NCA4LjkxNTFWMTQuODc0OEgxNTUuNzc1QzE1Ni4yMyAxNC44NzQ4IDE1Ni42IDE0LjUwNTggMTU2LjYgMTQuMDUwOFpNMTU4Ljg1NyAxMi45NDQ3VjkuMzQyNTRIMTU3Ljc0OVY4LjkxOTEyQzE1Ny43NDkgOC40NjQwMSAxNTguMTE4IDguMDk1MDYgMTU4LjU3NCA4LjA5NTA2SDE1OC44NTdWNi41NjczOUwxNjAuNDk5IDYuMTA0NzlWOC4wOTUwNkgxNjEuOTg2VjguNTE4NDhDMTYxLjk4NiA4Ljk3MzU5IDE2MS42MTcgOS4zNDI1NCAxNjEuMTYxIDkuMzQyNTRIMTYwLjQ5OVYxMi43MzQ1QzE2MC40OTkgMTMuMjU2NiAxNjAuNzk1IDEzLjQ0IDE2MS4xNzcgMTMuNTAzQzE2MS42MjYgMTMuNTc3NCAxNjIgMTMuOTAyNCAxNjIgMTQuMzU3NFYxNC45NzdDMTYwLjQ0NiAxNC45NzcgMTU4Ljg1NyAxNC45MDg2IDE1OC44NTcgMTIuOTQ0N1pNOTguMTkyOSAxMC4xMTI0Qzk4LjIwMzMgNi45NDA0NiAxMDAuNTk4IDUuMTY4MDkgMTAyLjg5NSA1LjE2ODA5QzEwNC4xNzEgNS4xNjgwOSAxMDUuMzQyIDUuNDQyODUgMTA2LjMwNCA2LjEyOTUzTDEwNS45MTQgNi42NjMxQzEwNS42NTQgNy4wMjAxMSAxMDUuMTYgNy4xNjE5NCAxMDQuNzQ5IDYuOTk5NDlDMTA0LjE2OSA2Ljc3MDIgMTAzLjYyMiA2LjcyMTggMTAzLjIxNSA2LjcyMThDMTAxLjMzNSA2LjcyMTggOTkuOTE2OSA3LjkyODQ5IDk5LjkwNjggMTAuMTEyM0M5OS45MTY5IDEyLjI5NTkgMTAxLjMzNSAxMy41MjAxIDEwMy4yMTUgMTMuNTIwMUMxMDMuNjIyIDEzLjUyMDEgMTA0LjE2OSAxMy40NzE3IDEwNC43NDkgMTMuMjQyNEMxMDUuMTYgMTMuMDc5OSAxMDUuNjU0IDEzLjIwNDYgMTA1LjkxNCAxMy41NjE1TDEwNi4zMDQgMTQuMDk1MkMxMDUuMzQyIDE0Ljc4MTkgMTA0LjE3MSAxNS4wNTY2IDEwMi44OTUgMTUuMDU2NkMxMDAuNTk4IDE1LjA1NjYgOTguMjAzMyAxMy4yODQyIDk4LjE5MjkgMTAuMTEyNFpNMTQ3LjYxOSA1LjIxNzY4QzE0OC4wNzQgNS4yMTc2OCAxNDguNDQ0IDUuNTg2NjMgMTQ4LjQ0NCA2LjA0MTc0VjkuODE5NjhMMTUxLjgyIDUuNTgxMzFDMTUxLjg5NyA1LjQ3NzMzIDE1MS45OTcgNS4zOTI4MiAxNTIuMTEyIDUuMzM0NkMxNTIuMjI3IDUuMjc2MzggMTUyLjM1NSA1LjI0NjA3IDE1Mi40ODQgNS4yNDYxMUgxNTMuOTg0TDE1MC4xNjYgMTAuMDYxNUwxNTMuOTg0IDE0Ljg3NDlIMTUyLjQ4NEMxNTIuMzU1IDE0Ljg3NDkgMTUyLjIyNyAxNC44NDQ2IDE1Mi4xMTIgMTQuNzg2NEMxNTEuOTk3IDE0LjcyODEgMTUxLjg5NyAxNC42NDM2IDE1MS44MiAxNC41Mzk3TDE0OC40NDQgMTAuMzAyNVYxNC4wNTA4QzE0OC40NDQgMTQuNTA1OSAxNDguMDc0IDE0Ljg3NDkgMTQ3LjYxOSAxNC44NzQ5SDE0Ni43NDZWNS4yMTc2OEgxNDcuNjE5WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00wLjc3MzQzOCA2LjU3NTJIMi42ODA2NkMzLjU2NTQzIDYuNTc1MiA0LjIwNDEgNi43MDQxIDQuNTk2NjggNi45NjE5MUM0Ljk5MjE5IDcuMjE5NzMgNS4xODk5NCA3LjYyNjk1IDUuMTg5OTQgOC4xODM1OUM1LjE4OTk0IDguNTU4NTkgNS4wOTMyNiA4Ljg3MDYxIDQuODk5OSA5LjExOTYzQzQuNzA2NTQgOS4zNjg2NSA0LjQyODIyIDkuNTI1MzkgNC4wNjQ5NCA5LjU4OTg0VjkuNjMzNzlDNC41MTYxMSA5LjcxODc1IDQuODQ3MTcgOS44ODcyMSA1LjA1ODExIDEwLjEzOTJDNS4yNzE5NyAxMC4zODgyIDUuMzc4OTEgMTAuNzI2NiA1LjM3ODkxIDExLjE1NDNDNS4zNzg5MSAxMS43MzE0IDUuMTc2NzYgMTIuMTg0MSA0Ljc3MjQ2IDEyLjUxMjJDNC4zNzEwOSAxMi44Mzc0IDMuODExNTIgMTMgMy4wOTM3NSAxM0gwLjc3MzQzOFY2LjU3NTJaTTEuODIzNzMgOS4yMjk0OUgyLjgzNDQ3QzMuMjczOTMgOS4yMjk0OSAzLjU5NDczIDkuMTYwNjQgMy43OTY4OCA5LjAyMjk1QzMuOTk5MDIgOC44ODIzMiA0LjEwMDEgOC42NDUwMiA0LjEwMDEgOC4zMTEwNEM0LjEwMDEgOC4wMDkyOCAzLjk5MDIzIDcuNzkxMDIgMy43NzA1MSA3LjY1NjI1QzMuNTUzNzEgNy41MjE0OCAzLjIwODAxIDcuNDU0MSAyLjczMzQgNy40NTQxSDEuODIzNzNWOS4yMjk0OVpNMS44MjM3MyAxMC4wODJWMTIuMTE2N0gyLjkzOTk0QzMuMzc5MzkgMTIuMTE2NyAzLjcxMDQ1IDEyLjAzMzIgMy45MzMxMSAxMS44NjYyQzQuMTU4NjkgMTEuNjk2MyA0LjI3MTQ4IDExLjQyOTcgNC4yNzE0OCAxMS4wNjY0QzQuMjcxNDggMTAuNzMyNCA0LjE1NzIzIDEwLjQ4NDkgMy45Mjg3MSAxMC4zMjM3QzMuNzAwMiAxMC4xNjI2IDMuMzUzMDMgMTAuMDgyIDIuODg3MjEgMTAuMDgySDEuODIzNzNaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTEzLjAxMSA2LjU3NTJWMTAuNzMyNEMxMy4wMTEgMTEuMjA3IDEyLjkwODQgMTEuNjIzIDEyLjcwMzQgMTEuOTgwNUMxMi41MDEyIDEyLjMzNSAxMi4yMDY4IDEyLjYwODkgMTEuODIwMSAxMi44MDIyQzExLjQzNjMgMTIuOTkyNyAxMC45NzYzIDEzLjA4NzkgMTAuNDQwMiAxMy4wODc5QzkuNjQzMyAxMy4wODc5IDkuMDIzNjggMTIuODc3IDguNTgxMyAxMi40NTUxQzguMTM4OTIgMTIuMDMzMiA3LjkxNzcyIDExLjQ1MzEgNy45MTc3MiAxMC43MTQ4VjYuNTc1Mkg4Ljk3MjRWMTAuNjQwMUM4Ljk3MjQgMTEuMTcwNCA5LjA5NTQ2IDExLjU2MTUgOS4zNDE1NSAxMS44MTM1QzkuNTg3NjUgMTIuMDY1NCA5Ljk2NTU3IDEyLjE5MTQgMTAuNDc1MyAxMi4xOTE0QzExLjQ2NTYgMTIuMTkxNCAxMS45NjA3IDExLjY3MTQgMTEuOTYwNyAxMC42MzEzVjYuNTc1MkgxMy4wMTFaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTE1LjkxNDYgMTNWNi41NzUySDE2Ljk2NDlWMTNIMTUuOTE0NlonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTkuOTI1NSAxM1Y2LjU3NTJIMjAuOTc1OFYxMi4wOTkxSDIzLjY5NlYxM0gxOS45MjU1WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00yOC4yODI4IDEzSDI3LjIzMjVWNy40NzYwN0gyNS4zNDI4VjYuNTc1MkgzMC4xNzI0VjcuNDc2MDdIMjguMjgyOFYxM1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNNDEuOTQ3MiAxM0g0MC44MDQ2TDM5LjcxNDggOS4xNjc5NkMzOS42Njc5IDkuMDAwOTcgMzkuNjA5MyA4Ljc2MDc0IDM5LjUzOSA4LjQ0NzI3QzM5LjQ2ODcgOC4xMzA4NiAzOS40MjYyIDcuOTExMTMgMzkuNDExNiA3Ljc4ODA5QzM5LjM4MjMgNy45NzU1OSAzOS4zMzM5IDguMjE4NzUgMzkuMjY2NSA4LjUxNzU4QzM5LjIwMjEgOC44MTY0MSAzOS4xNDc5IDkuMDM5MDUgMzkuMTAzOSA5LjE4NTU0TDM4LjA0MDUgMTNIMzYuODk3OUwzNi4wNjczIDkuNzgzMkwzNS4yMjM2IDYuNTc1MkgzNi4yOTU4TDM3LjIxNDMgMTAuMzE5M0MzNy4zNTc4IDEwLjkxOTkgMzcuNDYwNCAxMS40NTAyIDM3LjUyMTkgMTEuOTEwMkMzNy41NTQxIDExLjY2MTEgMzcuNjAyNSAxMS4zODI4IDM3LjY2NjkgMTEuMDc1MkMzNy43MzE0IDEwLjc2NzYgMzcuNzkgMTAuNTE4NiAzNy44NDI3IDEwLjMyODFMMzguODg4NiA2LjU3NTJIMzkuOTMwMUw0MS4wMDI0IDEwLjM0NTdDNDEuMTA0OSAxMC42OTQzIDQxLjIxMzMgMTEuMjE1OCA0MS4zMjc2IDExLjkxMDJDNDEuMzcxNSAxMS40OTEyIDQxLjQ3NyAxMC45NTggNDEuNjQ0IDEwLjMxMDVMNDIuNTU4IDYuNTc1Mkg0My42MjE1TDQxLjk0NzIgMTNaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTQ1Ljc5NTcgMTNWNi41NzUySDQ2Ljg0NlYxM0g0NS43OTU3WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J001Mi4wMjU4IDEzSDUwLjk3NTVWNy40NzYwN0g0OS4wODU5VjYuNTc1Mkg1My45MTU1VjcuNDc2MDdINTIuMDI1OFYxM1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNNjEuMjMxMiAxM0g2MC4xNzY1VjEwLjEwNEg1Ny4yMTQ2VjEzSDU2LjE2NDNWNi41NzUySDU3LjIxNDZWOS4yMDMxMkg2MC4xNzY1VjYuNTc1Mkg2MS4yMzEyVjEzWicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0Mvc3ZnJTNFXFxcIik7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LXBvd2VyZWQtYnktY29udmVydGtpdDpob3ZlcixcXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1wb3dlcmVkLWJ5LWNvbnZlcnRraXQ6Zm9jdXMge1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMDI1KSBwZXJzcGVjdGl2ZSgxcHgpO1xcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMS4wMjUpIHBlcnNwZWN0aXZlKDFweCk7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDI1KSBwZXJzcGVjdGl2ZSgxcHgpO1xcbiAgb3BhY2l0eTogMTtcXG59XFxuXFxuQC13ZWJraXQta2V5ZnJhbWVzIGZvcm1raXQtYm91bmNlZGVsYXktZm9ybWtpdC1mb3JtLWRhdGEtdWlkLTRlOWFkNDlkYmEtIHtcXG5cXG4gIDAlLFxcbiAgODAlLFxcbiAgMTAwJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICB9XFxuXFxuICA0MCUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgfVxcbn1cXG5cXG5Aa2V5ZnJhbWVzIGZvcm1raXQtYm91bmNlZGVsYXktZm9ybWtpdC1mb3JtLWRhdGEtdWlkLTRlOWFkNDlkYmEtIHtcXG5cXG4gIDAlLFxcbiAgODAlLFxcbiAgMTAwJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICB9XFxuXFxuICA0MCUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgfVxcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCBibG9ja3F1b3RlIHtcXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcXG4gIG1hcmdpbjogMCAwIDIwcHg7XFxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNlMWUxZTE7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIHtcXG4gIGJveC1zaGFkb3c6IDAgMnB4IDE1cHggMCByZ2JhKDUxLCA1MSwgNTEsIDAuMSk7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCxcXG4uZm9ybWtpdC1tb2RhbCxcXG4uZm9ybWtpdC1zbGlkZS1pbiB7XFxuICBtYXgtd2lkdGg6IDQ2MHB4ICFpbXBvcnRhbnQ7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIFtkYXRhLXN0eWxlPVxcXCJjYXJkXFxcIl0ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtaGVhZGVyIHtcXG4gIG1hcmdpbi10b3A6IDQwcHg7XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1oZWFkZXIgcCB7XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1zdWJoZWFkZXIge1xcbiAgbWFyZ2luLWJvdHRvbTogMjVweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtY29sdW1uIHtcXG4gIHBhZGRpbmc6IDMwcHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LWZpZWxkIHtcXG4gIG1hcmdpbjogMCAwIDE1cHggMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtZmllbGQ6bGFzdC1vZi10eXBlIGlucHV0IHtcXG4gIHBhZGRpbmctcmlnaHQ6IDExMHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1pbnB1dCxcXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1zdWJtaXQge1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBvd2VsbCAuZm9ybWtpdC1pbnB1dCB7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBhZGRpbmc6IDE1cHggMTJweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtc3VibWl0IHtcXG4gIG1hcmdpbi10b3A6IDVweDtcXG4gIG1hcmdpbi1ib3R0b206IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LWd1YXJhbnRlZSB7XFxuICBmb250LXNpemU6IDEzcHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBtYXJnaW46IDI1cHggMCAwIDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucG93ZWxsIC5mb3Jta2l0LWd1YXJhbnRlZT5wIHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5wb3dlbGwgLmZvcm1raXQtcG93ZXJlZC1ieSB7XFxuICBjb2xvcjogIzdkN2Q3ZDtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgbWFyZ2luLXRvcDogMTVweDtcXG4gIG1hcmdpbi1ib3R0b206IDA7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblwiO1xuaW5qZWN0b3JfYmYxYmE3ZTAoY3NzXzM5NDA3YmIyLHtcInNpbmdsZVRhZ1wiOnRydWV9KTtcblxudmFyIEFMTE9XRURfRk9STUFUUyQzID0gWydpbmxpbmUnLCAnbW9kYWwnLCAnc2xpZGUgaW4nXTtcbnZhciBiZ0ltYWdlJDEgPSAnLy9wYWdlcy5jb252ZXJ0a2l0LmNvbS9hc3NldHMvcG93ZWxsL2JnLmpwZyc7XG5cbmZ1bmN0aW9uIFBvd2VsbChfcmVmKSB7XG4gIHZhciBvcHRpb25zID0gX3JlZi5vcHRpb25zLFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBhY3Rpb24gPSBfcmVmLmFjdGlvbixcbiAgICAgIHN1Ym1pdFRleHQgPSBfcmVmLnN1Ym1pdFRleHQsXG4gICAgICBlbWFpbFBsYWNlaG9sZGVyID0gX3JlZi5lbWFpbFBsYWNlaG9sZGVyLFxuICAgICAgbmFtZVBsYWNlaG9sZGVyID0gX3JlZi5uYW1lUGxhY2Vob2xkZXIsXG4gICAgICBoaWRlTmFtZSA9IF9yZWYuaGlkZU5hbWUsXG4gICAgICBzaG93TGFiZWxzID0gX3JlZi5zaG93TGFiZWxzLFxuICAgICAgbmFtZUxhYmVsID0gX3JlZi5uYW1lTGFiZWwsXG4gICAgICBlbWFpbExhYmVsID0gX3JlZi5lbWFpbExhYmVsLFxuICAgICAgbmV3VGFiID0gX3JlZi5uZXdUYWIsXG4gICAgICBmb3JtSWQgPSBfcmVmLmZvcm1JZCxcbiAgICAgIGZvcm1hdCA9IF9yZWYuZm9ybWF0LFxuICAgICAgaGlkZVdhcm5pbmdzID0gX3JlZi5oaWRlV2FybmluZ3M7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgIWhpZGVXYXJuaW5ncyAmJiAhQUxMT1dFRF9GT1JNQVRTJDMuaW5jbHVkZXMoZm9ybWF0KSA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFdhcm5pbmcsIHtcbiAgICBtZXNzYWdlOiBcIlRoaXMgdGVtcGxhdGUgaXMgbm90IGF2YWlsYWJsZSBmb3IgdGhlIGNob3NlbiBmb3JtYXRcIlxuICB9KSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiLCB7XG4gICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgY2xhc3NOYW1lOiBcInNldmEtZm9ybSBmb3Jta2l0LWZvcm0gcG93ZWxsIFwiLmNvbmNhdChjbGFzc05hbWUpLFxuICAgIG1ldGhvZDogXCJwb3N0XCIsXG4gICAgdGFyZ2V0OiBuZXdUYWIgPyAnX2JsYW5rJyA6ICdfc2VsZicsXG4gICAgXCJkYXRhLXN2LWZvcm1cIjogZm9ybUlkLFxuICAgIFwiZGF0YS11aWRcIjogb3B0aW9ucy51aWQsXG4gICAgXCJkYXRhLWZvcm1hdFwiOiBmb3JtYXQsXG4gICAgXCJkYXRhLXZlcnNpb25cIjogb3B0aW9ucy52ZXJzaW9uLFxuICAgIFwiZGF0YS1vcHRpb25zXCI6IEpTT04uc3RyaW5naWZ5KG9wdGlvbnMpLFxuICAgIFwibWluLXdpZHRoXCI6IFwiNDAwIDUwMCA2MDAgNzAwIDgwMFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2IoMjU1LCAyNTUsIDI1NSknLFxuICAgICAgYm9yZGVyUmFkaXVzOiAnOHB4J1xuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIFwiZGF0YS1zdHlsZVwiOiBcImNhcmRcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgXCJkYXRhLWVsZW1lbnRcIjogXCJjb2x1bW5cIixcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1jb2x1bW5cIixcbiAgICBzdHlsZToge1xuICAgICAgYmFja2dyb3VuZDogXCJsaW5lYXItZ3JhZGllbnQocmdiYSgyNTEsIDEwNSwgMTEyLCAuOCksIHJnYmEoMjUxLCAxMDUsIDExMiwgLjgpKSwgdXJsKFwiLmNvbmNhdChiZ0ltYWdlJDEsIFwiKVwiKSxcbiAgICAgIGJhY2tncm91bmRTaXplOiAnY292ZXInLFxuICAgICAgYmFja2dyb3VuZFBvc2l0aW9uOiAnY2VudGVyJyxcbiAgICAgIGNvbG9yOiAncmdiKDI1NSwgMjU1LCAyNTUpJyxcbiAgICAgIGZvbnRTaXplOiAnMjJweCcsXG4gICAgICBmb250V2VpZ2h0OiA3MDBcbiAgICB9XG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1oZWFkZXJcIixcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImhlYWRlclwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaDFcIiwgbnVsbCwgXCJKb2luIHRoZSBuZXdzbGV0dGVyXCIpKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImNvbHVtblwiLFxuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWNvbHVtblwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1zdWJoZWFkZXJcIixcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcInN1YmhlYWRlclwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBjb2xvcjogJ3JnYigxMjUsIDEyNSwgMTI1KScsXG4gICAgICBmb250U2l6ZTogJzE2cHgnXG4gICAgfVxuICB9LCBcIlN1YnNjcmliZSB0byBnZXQgb3VyIGxhdGVzdCBjb250ZW50IGJ5IGVtYWlsLlwiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtYWxlcnQgZm9ybWtpdC1hbGVydC1lcnJvclwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiZXJyb3JzXCIsXG4gICAgXCJkYXRhLWdyb3VwXCI6IFwiYWxlcnRcIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiZmllbGRzXCIsXG4gICAgY2xhc3NOYW1lOiBcInNldmEtZmllbGRzIGZvcm1raXQtZmllbGRzXCJcbiAgfSwgIWhpZGVOYW1lICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBzaG93TGFiZWxzID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB7XG4gICAgaHRtbEZvcjogXCJjay1maXJzdC1uYW1lXCJcbiAgfSwgbmFtZUxhYmVsKSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1maWVsZFwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWlucHV0XCIsXG4gICAgXCJhcmlhLWxhYmVsXCI6IG5hbWVMYWJlbCxcbiAgICBuYW1lOiBcImZpZWxkc1tmaXJzdF9uYW1lXVwiLFxuICAgIHBsYWNlaG9sZGVyOiBuYW1lUGxhY2Vob2xkZXIsXG4gICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDc3LCA3NywgNzcpJyxcbiAgICAgIGJvcmRlckNvbG9yOiAncmdiKDIyNywgMjI3LCAyMjcpJyxcbiAgICAgIGJvcmRlclJhZGl1czogJzRweCcsXG4gICAgICBmb250V2VpZ2h0OiA0MDBcbiAgICB9LFxuICAgIGlkOiBcImNrLWZpcnN0LW5hbWVcIlxuICB9KSkpLCBzaG93TGFiZWxzID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB7XG4gICAgaHRtbEZvcjogXCJjay1lbWFpbFwiXG4gIH0sIGVtYWlsTGFiZWwpIDogbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWZpZWxkXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtaW5wdXRcIixcbiAgICBcImFyaWEtbGFiZWxcIjogZW1haWxMYWJlbCxcbiAgICBuYW1lOiBcImVtYWlsX2FkZHJlc3NcIixcbiAgICBwbGFjZWhvbGRlcjogZW1haWxQbGFjZWhvbGRlcixcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB0eXBlOiBcImVtYWlsXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDc3LCA3NywgNzcpJyxcbiAgICAgIGJvcmRlckNvbG9yOiAncmdiKDIyNywgMjI3LCAyMjcpJyxcbiAgICAgIGJvcmRlclJhZGl1czogJzRweCcsXG4gICAgICBmb250V2VpZ2h0OiA0MDBcbiAgICB9LFxuICAgIGlkOiBcImNrLWVtYWlsXCJcbiAgfSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgXCJkYXRhLWVsZW1lbnRcIjogXCJzdWJtaXRcIixcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1zdWJtaXQgZm9ybWtpdC1zdWJtaXRcIixcbiAgICBzdHlsZToge1xuICAgICAgY29sb3I6ICdyZ2IoMjU1LCAyNTUsIDI1NSknLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiKDI1MSwgMTA1LCAxMTIpJyxcbiAgICAgIGJvcmRlclJhZGl1czogJzI0cHgnLFxuICAgICAgZm9udFdlaWdodDogNzAwXG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtc3Bpbm5lclwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgc3VibWl0VGV4dCkpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWd1YXJhbnRlZVwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiZ3VhcmFudGVlXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDEyNSwgMTI1LCAxMjUpJyxcbiAgICAgIGZvbnRTaXplOiAnMTNweCcsXG4gICAgICBmb250V2VpZ2h0OiA0MDBcbiAgICB9XG4gIH0sIFwiV2Ugd29uJ3Qgc2VuZCB5b3Ugc3BhbS4gVW5zdWJzY3JpYmUgYXQgYW55IHRpbWUuXCIpLCBvcHRpb25zLnNldHRpbmdzLnBvd2VyZWRfYnkuc2hvdyA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7XG4gICAgaHJlZjogb3B0aW9ucy5zZXR0aW5ncy5wb3dlcmVkX2J5LnVybCxcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1wb3dlcmVkLWJ5XCIsXG4gICAgXCJkYXRhLWVsZW1lbnRcIjogXCJwb3dlcmVkLWJ5XCIsXG4gICAgdGFyZ2V0OiBcIl9ibGFua1wiLFxuICAgIHJlbDogXCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgfSwgXCJQb3dlcmVkIEJ5IENvbnZlcnRLaXRcIikgOiBudWxsKSkpKTtcbn1cblxuY29uc3QgY3NzXzYwNWVjOTczID0gXCIuZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAqIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIHtcXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgbGVnZW5kIHtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XFxuICBwYWRkaW5nOiAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZGlzcGxheTogdGFibGU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIGZpZWxkc2V0IHtcXG4gIGJvcmRlcjogMDtcXG4gIHBhZGRpbmc6IDAuMDFlbSAwIDAgMDtcXG4gIG1hcmdpbjogMDtcXG4gIG1pbi13aWR0aDogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgYm9keTpub3QoOi1tb3otaGFuZGxlci1ibG9ja2VkKSBmaWVsZHNldCB7XFxuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBoMSxcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBoMixcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBoMyxcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBoNCxcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBoNSxcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBoNiB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcXG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBwIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIG9sOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIHVsOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIGJsb2NrcXVvdGU6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSkge1xcbiAgdGV4dC1hbGlnbjogbGVmdDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgcDpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSxcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBocjpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSxcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBibG9ja3F1b3RlOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIG9sOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIHVsOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgZm9udC1zdHlsZTogaW5pdGlhbDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGVbZGF0YS1mb3JtYXQ9XFxcIm1vZGFsXFxcIl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGVbZGF0YS1mb3JtYXQ9XFxcInNsaWRlIGluXFxcIl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGVbZGF0YS1mb3JtYXQ9XFxcInN0aWNreSBiYXJcXFwiXSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1zdGlja3ktYmFyIC5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlW2RhdGEtZm9ybWF0PVxcXCJzdGlja3kgYmFyXFxcIl0ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LWlucHV0LFxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LXNlbGVjdCxcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1jaGVja2JveGVzIHtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1idXR0b24sXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgLmZvcm1raXQtc3VibWl0IHtcXG4gIGJvcmRlcjogMDtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIGNvbG9yOiAjZmZmZmZmO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZm9udC1zaXplOiAxNXB4O1xcbiAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcGFkZGluZzogMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LWJ1dHRvbjpob3ZlcixcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1zdWJtaXQ6aG92ZXIsXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgLmZvcm1raXQtYnV0dG9uOmZvY3VzLFxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LXN1Ym1pdDpmb2N1cyB7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1idXR0b246aG92ZXI+c3BhbixcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1zdWJtaXQ6aG92ZXI+c3BhbixcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1idXR0b246Zm9jdXM+c3BhbixcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1zdWJtaXQ6Zm9jdXM+c3BhbiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LWJ1dHRvbj5zcGFuLFxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LXN1Ym1pdD5zcGFuIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxuICBwYWRkaW5nOiAxMnB4IDI0cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LWlucHV0IHtcXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XFxuICBmb250LXNpemU6IDE1cHg7XFxuICBwYWRkaW5nOiAxMnB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG4gIC13ZWJraXQtZmxleDogMSAwIGF1dG87XFxuICAtbXMtZmxleDogMSAwIGF1dG87XFxuICBmbGV4OiAxIDAgYXV0bztcXG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XFxuICBtYXJnaW46IDA7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGJvcmRlci1jb2xvciBlYXNlLW91dCAzMDBtcztcXG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciBlYXNlLW91dCAzMDBtcztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgLmZvcm1raXQtaW5wdXQ6Zm9jdXMge1xcbiAgb3V0bGluZTogbm9uZTtcXG4gIGJvcmRlci1jb2xvcjogIzE2NzdiZTtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2UgMzAwbXM7XFxuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgZWFzZSAzMDBtcztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgLmZvcm1raXQtaW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBvcGFjaXR5OiAwLjg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LWlucHV0OjotbW96LXBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgb3BhY2l0eTogMC44O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBvcGFjaXR5OiAwLjg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LWlucHV0OjpwbGFjZWhvbGRlciB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIG9wYWNpdHk6IDAuODtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgW2RhdGEtZ3JvdXA9XFxcImRyb3Bkb3duXFxcIl0ge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIFtkYXRhLWdyb3VwPVxcXCJkcm9wZG93blxcXCJdOjpiZWZvcmUge1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICB0b3A6IGNhbGMoNTAlIC0gMi41cHgpO1xcbiAgcmlnaHQ6IDEwcHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gIGJvcmRlci1jb2xvcjogIzRmNGY0ZiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XFxuICBib3JkZXItd2lkdGg6IDZweCA2cHggMCA2cHg7XFxuICBoZWlnaHQ6IDA7XFxuICB3aWR0aDogMDtcXG4gIHotaW5kZXg6IDk5OTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgW2RhdGEtZ3JvdXA9XFxcImRyb3Bkb3duXFxcIl0gc2VsZWN0IHtcXG4gIGhlaWdodDogYXV0bztcXG4gIHdpZHRoOiAxMDAlO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgY29sb3I6ICMzMzMzMzM7XFxuICBsaW5lLWhlaWdodDogMS40O1xcbiAgbWFyZ2luLWJvdHRvbTogMDtcXG4gIHBhZGRpbmc6IDAgNnB4O1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xcbiAgYXBwZWFyYW5jZTogbm9uZTtcXG4gIGZvbnQtc2l6ZTogMTVweDtcXG4gIHBhZGRpbmc6IDEycHg7XFxuICBwYWRkaW5nLXJpZ2h0OiAyNXB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIFtkYXRhLWdyb3VwPVxcXCJkcm9wZG93blxcXCJdIHNlbGVjdDpmb2N1cyB7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIHtcXG4gIHRleHQtYWxpZ246IGxlZnQ7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0ge1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSAqIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXTpsYXN0LW9mLXR5cGUge1xcbiAgbWFyZ2luLWJvdHRvbTogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gaW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXStsYWJlbDo6YWZ0ZXIge1xcbiAgY29udGVudDogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdOmNoZWNrZWQrbGFiZWw6OmFmdGVyIHtcXG4gIGJvcmRlci1jb2xvcjogI2ZmZmZmZjtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl06Y2hlY2tlZCtsYWJlbDo6YmVmb3JlIHtcXG4gIGJhY2tncm91bmQ6ICMxMGJmN2E7XFxuICBib3JkZXItY29sb3I6ICMxMGJmN2E7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWwge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcGFkZGluZy1sZWZ0OiAyOHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGxhYmVsOjpiZWZvcmUsXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbDo6YWZ0ZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWw6OmJlZm9yZSB7XFxuICBoZWlnaHQ6IDE2cHg7XFxuICB3aWR0aDogMTZweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNlM2UzZTM7XFxuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xcbiAgbGVmdDogMHB4O1xcbiAgdG9wOiAzcHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWw6OmFmdGVyIHtcXG4gIGhlaWdodDogNHB4O1xcbiAgd2lkdGg6IDhweDtcXG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzRkNGQ0ZDtcXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjNGQ0ZDRkO1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XFxuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xcbiAgbGVmdDogNHB4O1xcbiAgdG9wOiA4cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LWFsZXJ0IHtcXG4gIGJhY2tncm91bmQ6ICNmOWZhZmI7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgLXdlYmtpdC1mbGV4OiAxIDAgYXV0bztcXG4gIC1tcy1mbGV4OiAxIDAgYXV0bztcXG4gIGZsZXg6IDEgMCBhdXRvO1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG4gIG1hcmdpbjogMjVweCBhdXRvO1xcbiAgcGFkZGluZzogMTJweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1hbGVydDplbXB0eSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1hbGVydC1zdWNjZXNzIHtcXG4gIGJhY2tncm91bmQ6ICNkM2ZiZWI7XFxuICBib3JkZXItY29sb3I6ICMxMGJmN2E7XFxuICBjb2xvcjogIzBjOTA1YztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgLmZvcm1raXQtYWxlcnQtZXJyb3Ige1xcbiAgYmFja2dyb3VuZDogI2ZkZThlMjtcXG4gIGJvcmRlci1jb2xvcjogI2YyNjQzYjtcXG4gIGNvbG9yOiAjZWE0MTEwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1zcGlubmVyIHtcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgaGVpZ2h0OiAwcHg7XFxuICB3aWR0aDogMHB4O1xcbiAgbWFyZ2luOiAwIGF1dG87XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgcmlnaHQ6IDA7XFxuICB3aWR0aDogMHB4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1zcGlubmVyPmRpdiB7XFxuICBtYXJnaW46IGF1dG87XFxuICB3aWR0aDogMTJweDtcXG4gIGhlaWdodDogMTJweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICBvcGFjaXR5OiAwLjM7XFxuICBib3JkZXItcmFkaXVzOiAxMDAlO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgLXdlYmtpdC1hbmltYXRpb246IGZvcm1raXQtYm91bmNlZGVsYXktZm9ybWtpdC1mb3JtLWRhdGEtdWlkLWJhZDBkODJiODMtIDEuNHMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYm90aDtcXG4gIGFuaW1hdGlvbjogZm9ybWtpdC1ib3VuY2VkZWxheS1mb3Jta2l0LWZvcm0tZGF0YS11aWQtYmFkMGQ4MmI4My0gMS40cyBpbmZpbml0ZSBlYXNlLWluLW91dCBib3RoO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1zcGlubmVyPmRpdjpudGgtY2hpbGQoMSkge1xcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0wLjMycztcXG4gIGFuaW1hdGlvbi1kZWxheTogLTAuMzJzO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1zcGlubmVyPmRpdjpudGgtY2hpbGQoMikge1xcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0wLjE2cztcXG4gIGFuaW1hdGlvbi1kZWxheTogLTAuMTZzO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1zdWJtaXRbZGF0YS1hY3RpdmVdIC5mb3Jta2l0LXNwaW5uZXIge1xcbiAgb3BhY2l0eTogMTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiA1MHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1zdWJtaXRbZGF0YS1hY3RpdmVdIC5mb3Jta2l0LXNwaW5uZXJ+c3BhbiB7XFxuICBvcGFjaXR5OiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1wb3dlcmVkLWJ5W2RhdGEtYWN0aXZlPVxcXCJmYWxzZVxcXCJdIHtcXG4gIG9wYWNpdHk6IDAuMzU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LXBvd2VyZWQtYnktY29udmVydGtpdC1jb250YWluZXIge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XFxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICB3aWR0aDogMTAwJTtcXG4gIHotaW5kZXg6IDU7XFxuICBtYXJnaW46IDEwcHggMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgLmZvcm1raXQtcG93ZXJlZC1ieS1jb252ZXJ0a2l0LWNvbnRhaW5lcltkYXRhLWFjdGl2ZT1cXFwiZmFsc2VcXFwiXSB7XFxuICBvcGFjaXR5OiAwLjM1O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1wb3dlcmVkLWJ5LWNvbnZlcnRraXQge1xcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcXG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkY2UxZTU7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBjb2xvcjogIzM3M2Y0NTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgaGVpZ2h0OiAzNnB4O1xcbiAgbWFyZ2luOiAwIGF1dG87XFxuICBvcGFjaXR5OiAwLjk1O1xcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICB0ZXh0LWluZGVudDogMTAwJTtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogZWFzZS1pbi1vdXQgYWxsIDIwMG1zO1xcbiAgdHJhbnNpdGlvbjogZWFzZS1pbi1vdXQgYWxsIDIwMG1zO1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcXG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcXG4gIHVzZXItc2VsZWN0OiBub25lO1xcbiAgd2lkdGg6IDE5MHB4O1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9dXRmOCwlM0Nzdmcgd2lkdGg9JzE2MicgaGVpZ2h0PScyMCcgdmlld0JveD0nMCAwIDE2MiAyMCcgZmlsbD0nbm9uZScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ3BhdGggZD0nTTgzLjA1NjEgMTUuMjQ1N0M4Ni42NzUgMTUuMjQ1NyA4OS40NzIyIDEyLjUxNTQgODkuNDcyMiA5LjE0NzQ5Qzg5LjQ3MjIgNS45OTIxMSA4Ni44NDQzIDQuMDY1NjMgODUuMTAzOCA0LjA2NTYzQzgyLjY4MDEgNC4wNjU2MyA4MC43MzczIDUuNzY0MDcgODAuNDYwNSA4LjI4NTUxQzgwLjQwOTIgOC43NTI0NCA4MC4wMzg3IDkuMTQ0MDMgNzkuNTY4NiA5LjE0MDY5Qzc4Ljc4NzEgOS4xMzUwOSA3Ny42NTA3IDkuMTI4NDEgNzYuOTMxNCA5LjEzMDkyQzc2LjYyMTcgOS4xMzE5OSA3Ni4zNjU4IDguODgxMDYgNzYuMzgxIDguNTcxOTZDNzYuNDg5NSA2LjM4NTEzIDc3LjIyMTggNC4zNDA0IDc4LjYxOCAyLjc2OTc0QzgwLjE2OTUgMS4wMjQ0NSA4Mi40Mjg5IDAgODUuMTAzOCAwQzg5LjU5NzkgMCA5My44NDA2IDQuMDc3OTEgOTMuODQwNiA5LjE0NzQ5QzkzLjg0MDYgMTQuNzYwOCA4OS4xODMyIDE5LjMxMTMgODMuMTUxNyAxOS4zMTEzQzc4Ljg1MDIgMTkuMzExMyA3NC41MTc5IDE2LjUwNDEgNzMuMDA1MyAxMi41Nzk1QzcyLjk5OTkgMTIuNTY1IDcyLjk5ODYgMTIuNTQ5MiA3My4wMDE1IDEyLjUzNEM3My4wMjE4IDEyLjQxNzkgNzMuMDYxNyAxMi4zMTE4IDczLjEwMTEgMTIuMjA3NEM3My4xNTgzIDEyLjA1NTUgNzMuMjE0MyAxMS45MDcgNzMuMjA2MiAxMS43MzU5TDczLjE4IDExLjE4OTJDNzMuMTc0IDExLjA1NjkgNzMuMjA3NSAxMC45MjU4IDczLjI3NjQgMTAuODEyN0M3My4zNDUyIDEwLjY5OTUgNzMuNDQ2MyAxMC42MDk0IDczLjU2NjYgMTAuNTU0TDczLjc4NTIgMTAuNDUyM0M3My45MDc3IDEwLjM5NTcgNzQuMDE0OCAxMC4zMTA1IDc0LjA5NzYgMTAuMjA0Qzc0LjE4MDMgMTAuMDk3NCA3NC4yMzYzIDkuOTcyNTIgNzQuMjYwOCA5LjgzOTgzQzc0LjMzNDEgOS40Mzg5NCA3NC42ODY1IDkuMTQ3NDkgNzUuMDk3OSA5LjE0NzQ5Qzc1Ljc0MDQgOS4xNDc0OSA3Ni4yOTkgOS41NzQxMiA3Ni41MDg4IDEwLjE4MDZDNzcuNTE4OCAxMy4xIDc5LjEyNDUgMTUuMjQ1NyA4My4wNTYxIDE1LjI0NTdaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTE1NS43NTggNi45MTM2NUMxNTUuMDI4IDYuOTEzNjUgMTU0LjgwNCA2LjQ3OTE2IDE1NC44MDQgNS45ODg1N0MxNTQuODA0IDUuNDY5OTcgMTU0Ljk4NiA1LjA2MzQ4IDE1NS43NTggNS4wNjM0OEMxNTYuNTMgNS4wNjM0OCAxNTYuNzEyIDUuNDY5OTcgMTU2LjcxMiA1Ljk4ODU3QzE1Ni43MTIgNi40NzkwNSAxNTYuNTE2IDYuOTEzNjUgMTU1Ljc1OCA2LjkxMzY1Wk0xNDIuNDQxIDEyLjkzMDRWOS4zMjgzM0wxNDEuNDE1IDkuMzIzMjNWOC45MDM5MkMxNDEuNDE1IDguNDQ3MTkgMTQxLjc4NiA4LjA3NzU4IDE0Mi4yNDQgOC4wNzk4NkwxNDIuNDQxIDguMDgwOTVWNi41NTMwNkwxNDQuMDgyIDYuMDkwNTdWOC4wODA3M0gxNDUuNTY5VjguNTA0MTZDMTQ1LjU2OSA4LjYxMjQyIDE0NS41NDggOC43MTk2MSAxNDUuNTA2IDguODE5NjFDMTQ1LjQ2NSA4LjkxOTYxIDE0NS40MDQgOS4wMTA0NyAxNDUuMzI4IDkuMDg2OTlDMTQ1LjI1MSA5LjE2MzUxIDE0NS4xNiA5LjIyNDIgMTQ1LjA2IDkuMjY1NTlDMTQ0Ljk2IDkuMzA2OTggMTQ0Ljg1MyA5LjMyODI2IDE0NC43NDUgOS4zMjgyMkgxNDQuMDgyVjEyLjcyMDFDMTQ0LjA4MiAxMy4yNDIzIDE0NC4zNzggMTMuNDI1NiAxNDQuNzYgMTMuNDg4N0MxNDUuMjA5IDEzLjU2MjkgMTQ1LjU4MyAxMy44ODggMTQ1LjU4MyAxNC4zNDNWMTQuOTYyNkMxNDQuMDI5IDE0Ljk2MjYgMTQyLjQ0MSAxNC44OTQyIDE0Mi40NDEgMTIuOTMwNFonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTEwLjA1OCA3LjkyNTU0QzEwOC40MTcgNy44ODM0NCAxMDYuMzk2IDguOTIwNjIgMTA2LjM5NiAxMS41MTM3QzEwNi4zOTYgMTQuMDY0NiAxMDguNDE3IDE1LjA3MzggMTEwLjA1OCAxNS4wMzE4QzExMS43NDIgMTUuMDczOCAxMTMuNzQ4IDE0LjA2NDYgMTEzLjc0OCAxMS41MTM3QzExMy43NDggOC45MjA2MiAxMTEuNzQyIDcuODgzNDQgMTEwLjA1OCA3LjkyNTU0Wk0xMTAuMDcgMTMuNzU4NkMxMDguODc4IDEzLjc1ODYgMTA4LjAzMiAxMi44OTA1IDEwOC4wMzIgMTEuNDYxQzEwOC4wMzIgMTAuMTAxMyAxMDguODc4IDkuMjA1NjkgMTEwLjA3MSA5LjIwNTY5QzExMS4yNjMgOS4yMDU2OSAxMTIuMTAxIDEwLjA5OTUgMTEyLjEwMSAxMS40NTlDMTEyLjEwMSAxMi44ODg3IDExMS4yNjMgMTMuNzU4NiAxMTAuMDcgMTMuNzU4NlonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTE4LjA2IDcuOTQwOThDMTE5LjQ5MSA3Ljk0MDk4IDEyMC45NzggOC4zMzMzNyAxMjAuOTc4IDExLjEzNjZWMTQuODkzSDEyMC4wNjNDMTE5LjYwOCAxNC44OTMgMTE5LjIzOCAxNC41MjQgMTE5LjIzOCAxNC4wNjg5VjEwLjk5NjVDMTE5LjIzOCA5LjY2NTA2IDExOC43NDcgOS4xNjA0NyAxMTcuODkxIDkuMTYwNDdDMTE3LjQxNCA5LjE2MDQ3IDExNi43OTcgOS41MjQ4NiAxMTYuNTAyIDkuODE5MTVWMTQuMDY5QzExNi41MDIgMTQuMTc3MyAxMTYuNDgxIDE0LjI4NDUgMTE2LjQ0IDE0LjM4NDVDMTE2LjM5OCAxNC40ODQ1IDExNi4zMzcgMTQuNTc1MyAxMTYuMjYxIDE0LjY1MTlDMTE2LjE4NCAxNC43Mjg0IDExNi4wOTMgMTQuNzg5MSAxMTUuOTkzIDE0LjgzMDVDMTE1Ljg5MyAxNC44NzE5IDExNS43ODYgMTQuODkzMSAxMTUuNjc4IDE0Ljg5MzFIMTE0Ljg0N1Y4LjEwOTE4SDExNS43NzNDMTE1LjkzMiA4LjEwOTE0IDExNi4wODcgOC4xNjMxNSAxMTYuMjEyIDguMjYyNDJDMTE2LjMzNyA4LjM2MTY4IDExNi40MjQgOC41MDAzMyAxMTYuNDYgOC42NTU3N0MxMTYuODgxIDguMTkzMjggMTE3LjQyOCA3Ljk0MDk4IDExOC4wNiA3Ljk0MDk4Wk0xMjIuODU0IDguMDk3MTNDMTIzLjAyNCA4LjA5NzA4IDEyMy4xOSA4LjE0OTYgMTIzLjMyOSA4LjI0NzVDMTIzLjQ2OCA4LjM0NTQxIDEyMy41NzQgOC40ODM5MSAxMjMuNjMxIDguNjQ0MDVMMTI1LjEzMyAxMi44NDg2TDEyNi42MzUgOC42NDQxNUMxMjYuNjkyIDguNDg0MDIgMTI2Ljc5OCA4LjM0NTUxIDEyNi45MzcgOC4yNDc2QzEyNy4wNzYgOC4xNDk3IDEyNy4yNDIgOC4wOTcxOCAxMjcuNDEyIDguMDk3MjRIMTI4LjU5OEwxMjYuMTUyIDE0LjM1NjdDMTI2LjA5MSAxNC41MTEyIDEyNS45ODYgMTQuNjQzOSAxMjUuODQ5IDE0LjczNzRDMTI1LjcxMSAxNC44MzEgMTI1LjU0OSAxNC44ODEgMTI1LjM4MyAxNC44ODA5SDEyNC4zMzNMMTIxLjY2OCA4LjA5NzEzSDEyMi44NTRaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTEzNS4wODUgMTQuNTUxNEMxMzQuNTY2IDE0Ljc2MTYgMTMzLjUxMyAxNS4wNDE2IDEzMi40MTggMTUuMDQxNkMxMzAuNDk2IDE1LjA0MTYgMTI5LjAyNCAxMy45MzQ1IDEyOS4wMjQgMTEuNDM5NkMxMjkuMDI0IDkuMTk3MDEgMTMwLjQ1MSA3Ljk5NzkyIDEzMi4xOTEgNy45OTc5MkMxMzQuMzM4IDcuOTk3OTIgMTM1LjI1NCA5LjQzNzggMTM1LjE1OCAxMS4zOTc5QzEzNS4xMzkgMTEuODAyOSAxMzQuNzg2IDEyLjA5ODMgMTM0LjM4IDEyLjA5ODNIMTMwLjY3OUMxMzAuNzYzIDEzLjE5MTYgMTMxLjU2MiAxMy43NjYyIDEzMi42MTUgMTMuNzY2MkMxMzMuMDI4IDEzLjc2NjIgMTMzLjQ2MiAxMy43NDUyIDEzMy45ODMgMTMuNjQ4MUMxMzQuNTM1IDEzLjU0NSAxMzUuMDg1IDEzLjkzNzUgMTM1LjA4NSAxNC40OTg1VjE0LjU1MTRaTTEzMy42NzMgMTAuOTQ5QzEzMy43ODUgOS44NzYyMSAxMzMuMDYxIDkuMjg3NTIgMTMyLjE5MSA5LjI4NzUyQzEzMS4zMjEgOS4yODc1MiAxMzAuNzM0IDkuOTM5NzkgMTMwLjY3OSAxMC45NDg5TDEzMy42NzMgMTAuOTQ5WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xMzcuMzQ1IDguMTExMjJDMTM3LjQ5NyA4LjExMTE4IDEzNy42NDUgOC4xNjIyOSAxMzcuNzY1IDguMjU2MzVDMTM3Ljg4NCA4LjM1MDQxIDEzNy45NjkgOC40ODE5NyAxMzguMDA1IDguNjI5OTNDMTM4LjU2NiA4LjIwOTMyIDEzOS4yNjggNy45NDMwMyAxMzkuNzU5IDcuOTQzMDNDMTM5LjgwMSA3Ljk0MzAzIDE0MC4wNjggNy45NDMwMyAxNDAuNDg5IDcuOTk5MTNWOC43MjY1QzE0MC40ODkgOS4xMTc0OCAxNDAuMTUgOS40MTQ3IDEzOS43NTkgOS40MTQ3QzEzOS4zMSA5LjQxNDcgMTM4LjY1MSA5LjU4MjkgMTM4LjEzMSA5Ljg3NzNWMTQuODk1MUgxMzYuNDYyVjguMTExMTJMMTM3LjM0NSA4LjExMTIyWk0xNTYuNiAxNC4wNTA4VjguMDkxMDRIMTU1Ljc2OUMxNTUuMzE0IDguMDkxMDQgMTU0Ljk0NCA4LjQ1OTk5IDE1NC45NDQgOC45MTUxVjE0Ljg3NDhIMTU1Ljc3NUMxNTYuMjMgMTQuODc0OCAxNTYuNiAxNC41MDU4IDE1Ni42IDE0LjA1MDhaTTE1OC44NTcgMTIuOTQ0N1Y5LjM0MjU0SDE1Ny43NDlWOC45MTkxMkMxNTcuNzQ5IDguNDY0MDEgMTU4LjExOCA4LjA5NTA2IDE1OC41NzQgOC4wOTUwNkgxNTguODU3VjYuNTY3MzlMMTYwLjQ5OSA2LjEwNDc5VjguMDk1MDZIMTYxLjk4NlY4LjUxODQ4QzE2MS45ODYgOC45NzM1OSAxNjEuNjE3IDkuMzQyNTQgMTYxLjE2MSA5LjM0MjU0SDE2MC40OTlWMTIuNzM0NUMxNjAuNDk5IDEzLjI1NjYgMTYwLjc5NSAxMy40NCAxNjEuMTc3IDEzLjUwM0MxNjEuNjI2IDEzLjU3NzQgMTYyIDEzLjkwMjQgMTYyIDE0LjM1NzRWMTQuOTc3QzE2MC40NDYgMTQuOTc3IDE1OC44NTcgMTQuOTA4NiAxNTguODU3IDEyLjk0NDdaTTk4LjE5MjkgMTAuMTEyNEM5OC4yMDMzIDYuOTQwNDYgMTAwLjU5OCA1LjE2ODA5IDEwMi44OTUgNS4xNjgwOUMxMDQuMTcxIDUuMTY4MDkgMTA1LjM0MiA1LjQ0Mjg1IDEwNi4zMDQgNi4xMjk1M0wxMDUuOTE0IDYuNjYzMUMxMDUuNjU0IDcuMDIwMTEgMTA1LjE2IDcuMTYxOTQgMTA0Ljc0OSA2Ljk5OTQ5QzEwNC4xNjkgNi43NzAyIDEwMy42MjIgNi43MjE4IDEwMy4yMTUgNi43MjE4QzEwMS4zMzUgNi43MjE4IDk5LjkxNjkgNy45Mjg0OSA5OS45MDY4IDEwLjExMjNDOTkuOTE2OSAxMi4yOTU5IDEwMS4zMzUgMTMuNTIwMSAxMDMuMjE1IDEzLjUyMDFDMTAzLjYyMiAxMy41MjAxIDEwNC4xNjkgMTMuNDcxNyAxMDQuNzQ5IDEzLjI0MjRDMTA1LjE2IDEzLjA3OTkgMTA1LjY1NCAxMy4yMDQ2IDEwNS45MTQgMTMuNTYxNUwxMDYuMzA0IDE0LjA5NTJDMTA1LjM0MiAxNC43ODE5IDEwNC4xNzEgMTUuMDU2NiAxMDIuODk1IDE1LjA1NjZDMTAwLjU5OCAxNS4wNTY2IDk4LjIwMzMgMTMuMjg0MiA5OC4xOTI5IDEwLjExMjRaTTE0Ny42MTkgNS4yMTc2OEMxNDguMDc0IDUuMjE3NjggMTQ4LjQ0NCA1LjU4NjYzIDE0OC40NDQgNi4wNDE3NFY5LjgxOTY4TDE1MS44MiA1LjU4MTMxQzE1MS44OTcgNS40NzczMyAxNTEuOTk3IDUuMzkyODIgMTUyLjExMiA1LjMzNDZDMTUyLjIyNyA1LjI3NjM4IDE1Mi4zNTUgNS4yNDYwNyAxNTIuNDg0IDUuMjQ2MTFIMTUzLjk4NEwxNTAuMTY2IDEwLjA2MTVMMTUzLjk4NCAxNC44NzQ5SDE1Mi40ODRDMTUyLjM1NSAxNC44NzQ5IDE1Mi4yMjcgMTQuODQ0NiAxNTIuMTEyIDE0Ljc4NjRDMTUxLjk5NyAxNC43MjgxIDE1MS44OTcgMTQuNjQzNiAxNTEuODIgMTQuNTM5N0wxNDguNDQ0IDEwLjMwMjVWMTQuMDUwOEMxNDguNDQ0IDE0LjUwNTkgMTQ4LjA3NCAxNC44NzQ5IDE0Ny42MTkgMTQuODc0OUgxNDYuNzQ2VjUuMjE3NjhIMTQ3LjYxOVonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMC43NzM0MzggNi41NzUySDIuNjgwNjZDMy41NjU0MyA2LjU3NTIgNC4yMDQxIDYuNzA0MSA0LjU5NjY4IDYuOTYxOTFDNC45OTIxOSA3LjIxOTczIDUuMTg5OTQgNy42MjY5NSA1LjE4OTk0IDguMTgzNTlDNS4xODk5NCA4LjU1ODU5IDUuMDkzMjYgOC44NzA2MSA0Ljg5OTkgOS4xMTk2M0M0LjcwNjU0IDkuMzY4NjUgNC40MjgyMiA5LjUyNTM5IDQuMDY0OTQgOS41ODk4NFY5LjYzMzc5QzQuNTE2MTEgOS43MTg3NSA0Ljg0NzE3IDkuODg3MjEgNS4wNTgxMSAxMC4xMzkyQzUuMjcxOTcgMTAuMzg4MiA1LjM3ODkxIDEwLjcyNjYgNS4zNzg5MSAxMS4xNTQzQzUuMzc4OTEgMTEuNzMxNCA1LjE3Njc2IDEyLjE4NDEgNC43NzI0NiAxMi41MTIyQzQuMzcxMDkgMTIuODM3NCAzLjgxMTUyIDEzIDMuMDkzNzUgMTNIMC43NzM0MzhWNi41NzUyWk0xLjgyMzczIDkuMjI5NDlIMi44MzQ0N0MzLjI3MzkzIDkuMjI5NDkgMy41OTQ3MyA5LjE2MDY0IDMuNzk2ODggOS4wMjI5NUMzLjk5OTAyIDguODgyMzIgNC4xMDAxIDguNjQ1MDIgNC4xMDAxIDguMzExMDRDNC4xMDAxIDguMDA5MjggMy45OTAyMyA3Ljc5MTAyIDMuNzcwNTEgNy42NTYyNUMzLjU1MzcxIDcuNTIxNDggMy4yMDgwMSA3LjQ1NDEgMi43MzM0IDcuNDU0MUgxLjgyMzczVjkuMjI5NDlaTTEuODIzNzMgMTAuMDgyVjEyLjExNjdIMi45Mzk5NEMzLjM3OTM5IDEyLjExNjcgMy43MTA0NSAxMi4wMzMyIDMuOTMzMTEgMTEuODY2MkM0LjE1ODY5IDExLjY5NjMgNC4yNzE0OCAxMS40Mjk3IDQuMjcxNDggMTEuMDY2NEM0LjI3MTQ4IDEwLjczMjQgNC4xNTcyMyAxMC40ODQ5IDMuOTI4NzEgMTAuMzIzN0MzLjcwMDIgMTAuMTYyNiAzLjM1MzAzIDEwLjA4MiAyLjg4NzIxIDEwLjA4MkgxLjgyMzczWicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xMy4wMTEgNi41NzUyVjEwLjczMjRDMTMuMDExIDExLjIwNyAxMi45MDg0IDExLjYyMyAxMi43MDM0IDExLjk4MDVDMTIuNTAxMiAxMi4zMzUgMTIuMjA2OCAxMi42MDg5IDExLjgyMDEgMTIuODAyMkMxMS40MzYzIDEyLjk5MjcgMTAuOTc2MyAxMy4wODc5IDEwLjQ0MDIgMTMuMDg3OUM5LjY0MzMgMTMuMDg3OSA5LjAyMzY4IDEyLjg3NyA4LjU4MTMgMTIuNDU1MUM4LjEzODkyIDEyLjAzMzIgNy45MTc3MiAxMS40NTMxIDcuOTE3NzIgMTAuNzE0OFY2LjU3NTJIOC45NzI0VjEwLjY0MDFDOC45NzI0IDExLjE3MDQgOS4wOTU0NiAxMS41NjE1IDkuMzQxNTUgMTEuODEzNUM5LjU4NzY1IDEyLjA2NTQgOS45NjU1NyAxMi4xOTE0IDEwLjQ3NTMgMTIuMTkxNEMxMS40NjU2IDEyLjE5MTQgMTEuOTYwNyAxMS42NzE0IDExLjk2MDcgMTAuNjMxM1Y2LjU3NTJIMTMuMDExWicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xNS45MTQ2IDEzVjYuNTc1MkgxNi45NjQ5VjEzSDE1LjkxNDZaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTE5LjkyNTUgMTNWNi41NzUySDIwLjk3NThWMTIuMDk5MUgyMy42OTZWMTNIMTkuOTI1NVonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMjguMjgyOCAxM0gyNy4yMzI1VjcuNDc2MDdIMjUuMzQyOFY2LjU3NTJIMzAuMTcyNFY3LjQ3NjA3SDI4LjI4MjhWMTNaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTQxLjk0NzIgMTNINDAuODA0NkwzOS43MTQ4IDkuMTY3OTZDMzkuNjY3OSA5LjAwMDk3IDM5LjYwOTMgOC43NjA3NCAzOS41MzkgOC40NDcyN0MzOS40Njg3IDguMTMwODYgMzkuNDI2MiA3LjkxMTEzIDM5LjQxMTYgNy43ODgwOUMzOS4zODIzIDcuOTc1NTkgMzkuMzMzOSA4LjIxODc1IDM5LjI2NjUgOC41MTc1OEMzOS4yMDIxIDguODE2NDEgMzkuMTQ3OSA5LjAzOTA1IDM5LjEwMzkgOS4xODU1NEwzOC4wNDA1IDEzSDM2Ljg5NzlMMzYuMDY3MyA5Ljc4MzJMMzUuMjIzNiA2LjU3NTJIMzYuMjk1OEwzNy4yMTQzIDEwLjMxOTNDMzcuMzU3OCAxMC45MTk5IDM3LjQ2MDQgMTEuNDUwMiAzNy41MjE5IDExLjkxMDJDMzcuNTU0MSAxMS42NjExIDM3LjYwMjUgMTEuMzgyOCAzNy42NjY5IDExLjA3NTJDMzcuNzMxNCAxMC43Njc2IDM3Ljc5IDEwLjUxODYgMzcuODQyNyAxMC4zMjgxTDM4Ljg4ODYgNi41NzUySDM5LjkzMDFMNDEuMDAyNCAxMC4zNDU3QzQxLjEwNDkgMTAuNjk0MyA0MS4yMTMzIDExLjIxNTggNDEuMzI3NiAxMS45MTAyQzQxLjM3MTUgMTEuNDkxMiA0MS40NzcgMTAuOTU4IDQxLjY0NCAxMC4zMTA1TDQyLjU1OCA2LjU3NTJINDMuNjIxNUw0MS45NDcyIDEzWicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J000NS43OTU3IDEzVjYuNTc1Mkg0Ni44NDZWMTNINDUuNzk1N1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNNTIuMDI1OCAxM0g1MC45NzU1VjcuNDc2MDdINDkuMDg1OVY2LjU3NTJINTMuOTE1NVY3LjQ3NjA3SDUyLjAyNThWMTNaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTYxLjIzMTIgMTNINjAuMTc2NVYxMC4xMDRINTcuMjE0NlYxM0g1Ni4xNjQzVjYuNTc1Mkg1Ny4yMTQ2VjkuMjAzMTJINjAuMTc2NVY2LjU3NTJINjEuMjMxMlYxM1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDL3N2ZyUzRVxcXCIpO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1wb3dlcmVkLWJ5LWNvbnZlcnRraXQ6aG92ZXIsXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgLmZvcm1raXQtcG93ZXJlZC1ieS1jb252ZXJ0a2l0OmZvY3VzIHtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjAyNSkgcGVyc3BlY3RpdmUoMXB4KTtcXG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEuMDI1KSBwZXJzcGVjdGl2ZSgxcHgpO1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjAyNSkgcGVyc3BlY3RpdmUoMXB4KTtcXG4gIG9wYWNpdHk6IDE7XFxufVxcblxcbkAtd2Via2l0LWtleWZyYW1lcyBmb3Jta2l0LWJvdW5jZWRlbGF5LWZvcm1raXQtZm9ybS1kYXRhLXVpZC1iYWQwZDgyYjgzLSB7XFxuXFxuICAwJSxcXG4gIDgwJSxcXG4gIDEwMCUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgfVxcblxcbiAgNDAlIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gIH1cXG59XFxuXFxuQGtleWZyYW1lcyBmb3Jta2l0LWJvdW5jZWRlbGF5LWZvcm1raXQtZm9ybS1kYXRhLXVpZC1iYWQwZDgyYjgzLSB7XFxuXFxuICAwJSxcXG4gIDgwJSxcXG4gIDEwMCUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCk7XFxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgfVxcblxcbiAgNDAlIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gIH1cXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgYmxvY2txdW90ZSB7XFxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuICBtYXJnaW46IDAgMCAyMHB4O1xcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjZTFlMWUxO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSB7XFxuICBib3gtc2hhZG93OiAwIDBweCAycHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcXG4gIG1heC13aWR0aDogNzAwcHggIWltcG9ydGFudDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIFtkYXRhLXN0eWxlPVxcXCJmdWxsXFxcIl0ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgLmZvcm1raXQtYmFja2dyb3VuZCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgbWluLWhlaWdodDogMjAwcHg7XFxuICB3aWR0aDogYXV0bztcXG4gIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgLmZvcm1raXQtY29sdW1uIHtcXG4gIHBhZGRpbmc6IDIwcHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LWhlYWRlciB7XFxuICBtYXJnaW4tdG9wOiAwO1xcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGUgLmZvcm1raXQtZmllbGQge1xcbiAgbWFyZ2luOiAwIDAgMTBweCAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1maWVsZHMgLmZvcm1raXQtc3VibWl0IHtcXG4gIG1hcmdpbi10b3A6IDE1cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlIC5mb3Jta2l0LWRpc2NsYWltZXIge1xcbiAgbWFyZ2luOiAwIDAgMTVweCAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1kaXNjbGFpbWVyPnAge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZSAuZm9ybWtpdC1wb3dlcmVkLWJ5IHtcXG4gIGNvbG9yOiAjN2Q3ZDdkO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBmb250LXNpemU6IDExcHg7XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbiAgbWFyZ2luLXRvcDogMjBweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGVbbWluLXdpZHRofj1cXFwiNjAwXFxcIl0gW2RhdGEtc3R5bGU9XFxcImZ1bGxcXFwiXSxcXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZVttaW4td2lkdGh+PVxcXCI3MDBcXFwiXSBbZGF0YS1zdHlsZT1cXFwiZnVsbFxcXCJdLFxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlW21pbi13aWR0aH49XFxcIjgwMFxcXCJdIFtkYXRhLXN0eWxlPVxcXCJmdWxsXFxcIl0ge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMjAwcHgsIDFmcikpO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLmNoYXJsb3R0ZVttaW4td2lkdGh+PVxcXCI2MDBcXFwiXSAuZm9ybWtpdC1jb2x1bW4sXFxuLmZvcm1raXQtZm9ybS5jaGFybG90dGVbbWluLXdpZHRofj1cXFwiNzAwXFxcIl0gLmZvcm1raXQtY29sdW1uLFxcbi5mb3Jta2l0LWZvcm0uY2hhcmxvdHRlW21pbi13aWR0aH49XFxcIjgwMFxcXCJdIC5mb3Jta2l0LWNvbHVtbiB7XFxuICBwYWRkaW5nOiA0MHB4O1xcbn1cXG5cIjtcbmluamVjdG9yX2JmMWJhN2UwKGNzc182MDVlYzk3Myx7XCJzaW5nbGVUYWdcIjp0cnVlfSk7XG5cbnZhciBBTExPV0VEX0ZPUk1BVFMkNCA9IFsnaW5saW5lJywgJ21vZGFsJywgJ3NsaWRlIGluJ107XG52YXIgYmdJbWFnZSQyID0gJy8vcGFnZXMuY29udmVydGtpdC5jb20vYXNzZXRzL2NoYXJsb3R0ZS9iZy5qcGcnO1xuXG5mdW5jdGlvbiBDaGFybG90dGUoX3JlZikge1xuICB2YXIgb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgYWN0aW9uID0gX3JlZi5hY3Rpb24sXG4gICAgICBzdWJtaXRUZXh0ID0gX3JlZi5zdWJtaXRUZXh0LFxuICAgICAgZW1haWxQbGFjZWhvbGRlciA9IF9yZWYuZW1haWxQbGFjZWhvbGRlcixcbiAgICAgIG5hbWVQbGFjZWhvbGRlciA9IF9yZWYubmFtZVBsYWNlaG9sZGVyLFxuICAgICAgaGlkZU5hbWUgPSBfcmVmLmhpZGVOYW1lLFxuICAgICAgc2hvd0xhYmVscyA9IF9yZWYuc2hvd0xhYmVscyxcbiAgICAgIG5hbWVMYWJlbCA9IF9yZWYubmFtZUxhYmVsLFxuICAgICAgZW1haWxMYWJlbCA9IF9yZWYuZW1haWxMYWJlbCxcbiAgICAgIG5ld1RhYiA9IF9yZWYubmV3VGFiLFxuICAgICAgZm9ybUlkID0gX3JlZi5mb3JtSWQsXG4gICAgICBmb3JtYXQgPSBfcmVmLmZvcm1hdCxcbiAgICAgIGhpZGVXYXJuaW5ncyA9IF9yZWYuaGlkZVdhcm5pbmdzO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsICFoaWRlV2FybmluZ3MgJiYgIUFMTE9XRURfRk9STUFUUyQ0LmluY2x1ZGVzKGZvcm1hdCkgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChXYXJuaW5nLCB7XG4gICAgbWVzc2FnZTogXCJUaGlzIHRlbXBsYXRlIGlzIG5vdCBhdmFpbGFibGUgZm9yIHRoZSBjaG9zZW4gZm9ybWF0XCJcbiAgfSkgOiBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImZvcm1cIiwge1xuICAgIGFjdGlvbjogYWN0aW9uLFxuICAgIGNsYXNzTmFtZTogXCJzZXZhLWZvcm0gZm9ybWtpdC1mb3JtIGNoYXJsb3R0ZSBcIi5jb25jYXQoY2xhc3NOYW1lKSxcbiAgICBtZXRob2Q6IFwicG9zdFwiLFxuICAgIHRhcmdldDogbmV3VGFiID8gJ19ibGFuaycgOiAnX3NlbGYnLFxuICAgIFwiZGF0YS1zdi1mb3JtXCI6IGZvcm1JZCxcbiAgICBcImRhdGEtdWlkXCI6IG9wdGlvbnMudWlkLFxuICAgIFwiZGF0YS1mb3JtYXRcIjogZm9ybWF0LFxuICAgIFwiZGF0YS12ZXJzaW9uXCI6IG9wdGlvbnMudmVyc2lvbixcbiAgICBcImRhdGEtb3B0aW9uc1wiOiBKU09OLnN0cmluZ2lmeShvcHRpb25zKSxcbiAgICBcIm1pbi13aWR0aFwiOiBcIjQwMCA1MDAgNjAwIDcwMCA4MDBcIixcbiAgICBzdHlsZToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiKDI1NSwgMjU1LCAyNTUpJyxcbiAgICAgIGJvcmRlclJhZGl1czogJzZweCdcbiAgICB9XG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBcImRhdGEtc3R5bGVcIjogXCJmdWxsXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiY29sdW1uXCIsXG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtYmFja2dyb3VuZFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IFwidXJsKFwiLmNvbmNhdChiZ0ltYWdlJDIsIFwiKVwiKVxuICAgIH1cbiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImNvbHVtblwiLFxuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWNvbHVtblwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1oZWFkZXJcIixcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImhlYWRlclwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBjb2xvcjogJ3JnYig4MywgODMsIDgzKScsXG4gICAgICBmb250U2l6ZTogJzI4cHgnLFxuICAgICAgZm9udFdlaWdodDogNzAwXG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImgxXCIsIG51bGwsIFwiR2V0IG91ciBob3cgdG8gZ3VpZGVcIikpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1hbGVydCBmb3Jta2l0LWFsZXJ0LWVycm9yXCIsXG4gICAgXCJkYXRhLWVsZW1lbnRcIjogXCJlcnJvcnNcIixcbiAgICBcImRhdGEtZ3JvdXBcIjogXCJhbGVydFwiXG4gIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgXCJkYXRhLWVsZW1lbnRcIjogXCJmaWVsZHNcIixcbiAgICBjbGFzc05hbWU6IFwic2V2YS1maWVsZHMgZm9ybWtpdC1maWVsZHNcIlxuICB9LCAhaGlkZU5hbWUgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIHNob3dMYWJlbHMgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHtcbiAgICBodG1sRm9yOiBcImNrLWZpcnN0LW5hbWVcIlxuICB9LCBuYW1lTGFiZWwpIDogbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWZpZWxkXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtaW5wdXRcIixcbiAgICBcImFyaWEtbGFiZWxcIjogbmFtZUxhYmVsLFxuICAgIG5hbWU6IFwiZmllbGRzW2ZpcnN0X25hbWVdXCIsXG4gICAgcGxhY2Vob2xkZXI6IG5hbWVQbGFjZWhvbGRlcixcbiAgICB0eXBlOiBcInRleHRcIixcbiAgICBzdHlsZToge1xuICAgICAgY29sb3I6ICdyZ2IoMTM5LCAxMzksIDEzOSknLFxuICAgICAgYm9yZGVyQ29sb3I6ICdyZ2IoMjIxLCAyMjQsIDIyOCknLFxuICAgICAgZm9udFdlaWdodDogNDAwLFxuICAgICAgYm9yZGVyTGVmdDogMCxcbiAgICAgIGJvcmRlclJpZ2h0OiAwLFxuICAgICAgYm9yZGVyVG9wOiAwLFxuICAgICAgcGFkZGluZ0xlZnQ6IDAsXG4gICAgICBwYWRkaW5nUmlnaHQ6IDBcbiAgICB9LFxuICAgIGlkOiBcImNrLWZpcnN0LW5hbWVcIlxuICB9KSkpLCBzaG93TGFiZWxzID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB7XG4gICAgaHRtbEZvcjogXCJjay1lbWFpbFwiXG4gIH0sIGVtYWlsTGFiZWwpIDogbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWZpZWxkXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtaW5wdXRcIixcbiAgICBcImFyaWEtbGFiZWxcIjogZW1haWxMYWJlbCxcbiAgICBuYW1lOiBcImVtYWlsX2FkZHJlc3NcIixcbiAgICBwbGFjZWhvbGRlcjogZW1haWxQbGFjZWhvbGRlcixcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB0eXBlOiBcImVtYWlsXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDEzOSwgMTM5LCAxMzkpJyxcbiAgICAgIGJvcmRlckNvbG9yOiAncmdiKDIyMSwgMjI0LCAyMjgpJyxcbiAgICAgIGZvbnRXZWlnaHQ6IDQwMCxcbiAgICAgIGJvcmRlckxlZnQ6IDAsXG4gICAgICBib3JkZXJSaWdodDogMCxcbiAgICAgIGJvcmRlclRvcDogMCxcbiAgICAgIHBhZGRpbmdMZWZ0OiAwLFxuICAgICAgcGFkZGluZ1JpZ2h0OiAwXG4gICAgfSxcbiAgICBpZDogXCJjay1lbWFpbFwiXG4gIH0pKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwge1xuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwic3VibWl0XCIsXG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtc3VibWl0XCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICBjb2xvcjogJ3JnYigyNTUsIDI1NSwgMjU1KScsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2IoMjQ2LCAxNjYsIDE3MSknLFxuICAgICAgYm9yZGVyUmFkaXVzOiAnM3B4JyxcbiAgICAgIGZvbnRXZWlnaHQ6IDcwMFxuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LXNwaW5uZXJcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIHN1Ym1pdFRleHQpKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1kaXNjbGFpbWVyXCIsXG4gICAgXCJkYXRhLWVsZW1lbnRcIjogXCJkaXNjbGFpbWVyXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDEzOSwgMTM5LCAxMzkpJyxcbiAgICAgIGZvbnRTaXplOiAnMTNweCdcbiAgICB9XG4gIH0sIFwiV2UgcmVzcGVjdCB5b3VyIHByaXZhY3kuIFVuc3Vic2NyaWJlIGF0IGFueSB0aW1lLlwiKSwgb3B0aW9ucy5zZXR0aW5ncy5wb3dlcmVkX2J5LnNob3cgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge1xuICAgIGhyZWY6IG9wdGlvbnMuc2V0dGluZ3MucG93ZXJlZF9ieS51cmwsXG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtcG93ZXJlZC1ieVwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwicG93ZXJlZC1ieVwiLFxuICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICByZWw6IFwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gIH0sIFwiUG93ZXJlZCBCeSBDb252ZXJ0S2l0XCIpIDogbnVsbCkpKSk7XG59XG5cbmNvbnN0IGNzc18xZmI3NTk5ZCA9IFwiLmZvcm1raXQtZm9ybS5waW5lICoge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIHtcXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIGxlZ2VuZCB7XFxuICBib3JkZXI6IG5vbmU7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbiAgcGFkZGluZzogMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGRpc3BsYXk6IHRhYmxlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgZmllbGRzZXQge1xcbiAgYm9yZGVyOiAwO1xcbiAgcGFkZGluZzogMC4wMWVtIDAgMCAwO1xcbiAgbWFyZ2luOiAwO1xcbiAgbWluLXdpZHRoOiAwO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgYm9keTpub3QoOi1tb3otaGFuZGxlci1ibG9ja2VkKSBmaWVsZHNldCB7XFxuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgaDEsXFxuLmZvcm1raXQtZm9ybS5waW5lIGgyLFxcbi5mb3Jta2l0LWZvcm0ucGluZSBoMyxcXG4uZm9ybWtpdC1mb3JtLnBpbmUgaDQsXFxuLmZvcm1raXQtZm9ybS5waW5lIGg1LFxcbi5mb3Jta2l0LWZvcm0ucGluZSBoNiB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcXG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgcCB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcXG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgb2w6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5waW5lIHVsOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0ucGluZSBibG9ja3F1b3RlOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pIHtcXG4gIHRleHQtYWxpZ246IGxlZnQ7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSBwOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pLFxcbi5mb3Jta2l0LWZvcm0ucGluZSBocjpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSxcXG4uZm9ybWtpdC1mb3JtLnBpbmUgYmxvY2txdW90ZTpub3QoW3RlbXBsYXRlLWRlZmF1bHRdKSxcXG4uZm9ybWtpdC1mb3JtLnBpbmUgb2w6bm90KFt0ZW1wbGF0ZS1kZWZhdWx0XSksXFxuLmZvcm1raXQtZm9ybS5waW5lIHVsOm5vdChbdGVtcGxhdGUtZGVmYXVsdF0pIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgZm9udC1zdHlsZTogaW5pdGlhbDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lW2RhdGEtZm9ybWF0PVxcXCJtb2RhbFxcXCJdIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZVtkYXRhLWZvcm1hdD1cXFwic2xpZGUgaW5cXFwiXSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmVbZGF0YS1mb3JtYXQ9XFxcInN0aWNreSBiYXJcXFwiXSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1zdGlja3ktYmFyIC5mb3Jta2l0LWZvcm0ucGluZVtkYXRhLWZvcm1hdD1cXFwic3RpY2t5IGJhclxcXCJdIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtaW5wdXQsXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXNlbGVjdCxcXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtY2hlY2tib3hlcyB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LWJ1dHRvbixcXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtc3VibWl0IHtcXG4gIGJvcmRlcjogMDtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIGNvbG9yOiAjZmZmZmZmO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZm9udC1zaXplOiAxNXB4O1xcbiAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcGFkZGluZzogMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1idXR0b246aG92ZXIsXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXN1Ym1pdDpob3ZlcixcXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtYnV0dG9uOmZvY3VzLFxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1zdWJtaXQ6Zm9jdXMge1xcbiAgb3V0bGluZTogbm9uZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LWJ1dHRvbjpob3Zlcj5zcGFuLFxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1zdWJtaXQ6aG92ZXI+c3BhbixcXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtYnV0dG9uOmZvY3VzPnNwYW4sXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXN1Ym1pdDpmb2N1cz5zcGFuIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LWJ1dHRvbj5zcGFuLFxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1zdWJtaXQ+c3BhbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW4tb3V0O1xcbiAgcGFkZGluZzogMTJweCAyNHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtaW5wdXQge1xcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcXG4gIGZvbnQtc2l6ZTogMTVweDtcXG4gIHBhZGRpbmc6IDEycHg7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzO1xcbiAgLXdlYmtpdC1mbGV4OiAxIDAgYXV0bztcXG4gIC1tcy1mbGV4OiAxIDAgYXV0bztcXG4gIGZsZXg6IDEgMCBhdXRvO1xcbiAgbGluZS1oZWlnaHQ6IDEuNDtcXG4gIG1hcmdpbjogMDtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2Utb3V0IDMwMG1zO1xcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2Utb3V0IDMwMG1zO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtaW5wdXQ6Zm9jdXMge1xcbiAgb3V0bGluZTogbm9uZTtcXG4gIGJvcmRlci1jb2xvcjogIzE2NzdiZTtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIGVhc2UgMzAwbXM7XFxuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgZWFzZSAzMDBtcztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LWlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgb3BhY2l0eTogMC44O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBvcGFjaXR5OiAwLjg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBvcGFjaXR5OiAwLjg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1pbnB1dDo6cGxhY2Vob2xkZXIge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBvcGFjaXR5OiAwLjg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSBbZGF0YS1ncm91cD1cXFwiZHJvcGRvd25cXFwiXSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIFtkYXRhLWdyb3VwPVxcXCJkcm9wZG93blxcXCJdOjpiZWZvcmUge1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICB0b3A6IGNhbGMoNTAlIC0gMi41cHgpO1xcbiAgcmlnaHQ6IDEwcHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gIGJvcmRlci1jb2xvcjogIzRmNGY0ZiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XFxuICBib3JkZXItd2lkdGg6IDZweCA2cHggMCA2cHg7XFxuICBoZWlnaHQ6IDA7XFxuICB3aWR0aDogMDtcXG4gIHotaW5kZXg6IDk5OTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIFtkYXRhLWdyb3VwPVxcXCJkcm9wZG93blxcXCJdIHNlbGVjdCB7XFxuICBoZWlnaHQ6IGF1dG87XFxuICB3aWR0aDogMTAwJTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGNvbG9yOiAjMzMzMzMzO1xcbiAgbGluZS1oZWlnaHQ6IDEuNDtcXG4gIG1hcmdpbi1ib3R0b206IDA7XFxuICBwYWRkaW5nOiAwIDZweDtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcXG4gIGFwcGVhcmFuY2U6IG5vbmU7XFxuICBmb250LXNpemU6IDE1cHg7XFxuICBwYWRkaW5nOiAxMnB4O1xcbiAgcGFkZGluZy1yaWdodDogMjVweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNlM2UzZTM7XFxuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgW2RhdGEtZ3JvdXA9XFxcImRyb3Bkb3duXFxcIl0gc2VsZWN0OmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIHtcXG4gIHRleHQtYWxpZ246IGxlZnQ7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIHtcXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdICoge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXTpsYXN0LW9mLXR5cGUge1xcbiAgbWFyZ2luLWJvdHRvbTogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gaW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdK2xhYmVsOjphZnRlciB7XFxuICBjb250ZW50OiBub25lO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdOmNoZWNrZWQrbGFiZWw6OmFmdGVyIHtcXG4gIGJvcmRlci1jb2xvcjogI2ZmZmZmZjtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdOmNoZWNrZWQrbGFiZWw6OmJlZm9yZSB7XFxuICBiYWNrZ3JvdW5kOiAjMTBiZjdhO1xcbiAgYm9yZGVyLWNvbG9yOiAjMTBiZjdhO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBwYWRkaW5nLWxlZnQ6IDI4cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hlc1xcXCJdIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveFxcXCJdIGxhYmVsOjpiZWZvcmUsXFxuLmZvcm1raXQtZm9ybS5waW5lIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWw6OmFmdGVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94ZXNcXFwiXSBbZGF0YS1ncm91cD1cXFwiY2hlY2tib3hcXFwiXSBsYWJlbDo6YmVmb3JlIHtcXG4gIGhlaWdodDogMTZweDtcXG4gIHdpZHRoOiAxNnB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XFxuICBsZWZ0OiAwcHg7XFxuICB0b3A6IDNweDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIFtkYXRhLWdyb3VwPVxcXCJjaGVja2JveGVzXFxcIl0gW2RhdGEtZ3JvdXA9XFxcImNoZWNrYm94XFxcIl0gbGFiZWw6OmFmdGVyIHtcXG4gIGhlaWdodDogNHB4O1xcbiAgd2lkdGg6IDhweDtcXG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzRkNGQ0ZDtcXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjNGQ0ZDRkO1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XFxuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xcbiAgbGVmdDogNHB4O1xcbiAgdG9wOiA4cHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1hbGVydCB7XFxuICBiYWNrZ3JvdW5kOiAjZjlmYWZiO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UzZTNlMztcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIC13ZWJraXQtZmxleDogMSAwIGF1dG87XFxuICAtbXMtZmxleDogMSAwIGF1dG87XFxuICBmbGV4OiAxIDAgYXV0bztcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICBtYXJnaW46IDI1cHggYXV0bztcXG4gIHBhZGRpbmc6IDEycHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LWFsZXJ0OmVtcHR5IHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1hbGVydC1zdWNjZXNzIHtcXG4gIGJhY2tncm91bmQ6ICNkM2ZiZWI7XFxuICBib3JkZXItY29sb3I6ICMxMGJmN2E7XFxuICBjb2xvcjogIzBjOTA1YztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LWFsZXJ0LWVycm9yIHtcXG4gIGJhY2tncm91bmQ6ICNmZGU4ZTI7XFxuICBib3JkZXItY29sb3I6ICNmMjY0M2I7XFxuICBjb2xvcjogI2VhNDExMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXNwaW5uZXIge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XFxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBoZWlnaHQ6IDBweDtcXG4gIHdpZHRoOiAwcHg7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICByaWdodDogMDtcXG4gIHdpZHRoOiAwcHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1zcGlubmVyPmRpdiB7XFxuICBtYXJnaW46IGF1dG87XFxuICB3aWR0aDogMTJweDtcXG4gIGhlaWdodDogMTJweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICBvcGFjaXR5OiAwLjM7XFxuICBib3JkZXItcmFkaXVzOiAxMDAlO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgLXdlYmtpdC1hbmltYXRpb246IGZvcm1raXQtYm91bmNlZGVsYXktZm9ybWtpdC1mb3JtLWRhdGEtdWlkLWY5YmIxZmJhZDgtIDEuNHMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYm90aDtcXG4gIGFuaW1hdGlvbjogZm9ybWtpdC1ib3VuY2VkZWxheS1mb3Jta2l0LWZvcm0tZGF0YS11aWQtZjliYjFmYmFkOC0gMS40cyBpbmZpbml0ZSBlYXNlLWluLW91dCBib3RoO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtc3Bpbm5lcj5kaXY6bnRoLWNoaWxkKDEpIHtcXG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAtMC4zMnM7XFxuICBhbmltYXRpb24tZGVsYXk6IC0wLjMycztcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXNwaW5uZXI+ZGl2Om50aC1jaGlsZCgyKSB7XFxuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuMTZzO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4xNnM7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1zdWJtaXRbZGF0YS1hY3RpdmVdIC5mb3Jta2l0LXNwaW5uZXIge1xcbiAgb3BhY2l0eTogMTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiA1MHB4O1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtc3VibWl0W2RhdGEtYWN0aXZlXSAuZm9ybWtpdC1zcGlubmVyfnNwYW4ge1xcbiAgb3BhY2l0eTogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXBvd2VyZWQtYnlbZGF0YS1hY3RpdmU9XFxcImZhbHNlXFxcIl0ge1xcbiAgb3BhY2l0eTogMC4zNTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXBvd2VyZWQtYnktY29udmVydGtpdC1jb250YWluZXIge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XFxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICB3aWR0aDogMTAwJTtcXG4gIHotaW5kZXg6IDU7XFxuICBtYXJnaW46IDEwcHggMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXBvd2VyZWQtYnktY29udmVydGtpdC1jb250YWluZXJbZGF0YS1hY3RpdmU9XFxcImZhbHNlXFxcIl0ge1xcbiAgb3BhY2l0eTogMC4zNTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXBvd2VyZWQtYnktY29udmVydGtpdCB7XFxuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2RjZTFlNTtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIGNvbG9yOiAjMzczZjQ1O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBoZWlnaHQ6IDM2cHg7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIG9wYWNpdHk6IDAuOTU7XFxuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIHRleHQtaW5kZW50OiAxMDAlO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBlYXNlLWluLW91dCBhbGwgMjAwbXM7XFxuICB0cmFuc2l0aW9uOiBlYXNlLWluLW91dCBhbGwgMjAwbXM7XFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICB3aWR0aDogMTkwcHg7XFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGY4LCUzQ3N2ZyB3aWR0aD0nMTYyJyBoZWlnaHQ9JzIwJyB2aWV3Qm94PScwIDAgMTYyIDIwJyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDcGF0aCBkPSdNODMuMDU2MSAxNS4yNDU3Qzg2LjY3NSAxNS4yNDU3IDg5LjQ3MjIgMTIuNTE1NCA4OS40NzIyIDkuMTQ3NDlDODkuNDcyMiA1Ljk5MjExIDg2Ljg0NDMgNC4wNjU2MyA4NS4xMDM4IDQuMDY1NjNDODIuNjgwMSA0LjA2NTYzIDgwLjczNzMgNS43NjQwNyA4MC40NjA1IDguMjg1NTFDODAuNDA5MiA4Ljc1MjQ0IDgwLjAzODcgOS4xNDQwMyA3OS41Njg2IDkuMTQwNjlDNzguNzg3MSA5LjEzNTA5IDc3LjY1MDcgOS4xMjg0MSA3Ni45MzE0IDkuMTMwOTJDNzYuNjIxNyA5LjEzMTk5IDc2LjM2NTggOC44ODEwNiA3Ni4zODEgOC41NzE5NkM3Ni40ODk1IDYuMzg1MTMgNzcuMjIxOCA0LjM0MDQgNzguNjE4IDIuNzY5NzRDODAuMTY5NSAxLjAyNDQ1IDgyLjQyODkgMCA4NS4xMDM4IDBDODkuNTk3OSAwIDkzLjg0MDYgNC4wNzc5MSA5My44NDA2IDkuMTQ3NDlDOTMuODQwNiAxNC43NjA4IDg5LjE4MzIgMTkuMzExMyA4My4xNTE3IDE5LjMxMTNDNzguODUwMiAxOS4zMTEzIDc0LjUxNzkgMTYuNTA0MSA3My4wMDUzIDEyLjU3OTVDNzIuOTk5OSAxMi41NjUgNzIuOTk4NiAxMi41NDkyIDczLjAwMTUgMTIuNTM0QzczLjAyMTggMTIuNDE3OSA3My4wNjE3IDEyLjMxMTggNzMuMTAxMSAxMi4yMDc0QzczLjE1ODMgMTIuMDU1NSA3My4yMTQzIDExLjkwNyA3My4yMDYyIDExLjczNTlMNzMuMTggMTEuMTg5MkM3My4xNzQgMTEuMDU2OSA3My4yMDc1IDEwLjkyNTggNzMuMjc2NCAxMC44MTI3QzczLjM0NTIgMTAuNjk5NSA3My40NDYzIDEwLjYwOTQgNzMuNTY2NiAxMC41NTRMNzMuNzg1MiAxMC40NTIzQzczLjkwNzcgMTAuMzk1NyA3NC4wMTQ4IDEwLjMxMDUgNzQuMDk3NiAxMC4yMDRDNzQuMTgwMyAxMC4wOTc0IDc0LjIzNjMgOS45NzI1MiA3NC4yNjA4IDkuODM5ODNDNzQuMzM0MSA5LjQzODk0IDc0LjY4NjUgOS4xNDc0OSA3NS4wOTc5IDkuMTQ3NDlDNzUuNzQwNCA5LjE0NzQ5IDc2LjI5OSA5LjU3NDEyIDc2LjUwODggMTAuMTgwNkM3Ny41MTg4IDEzLjEgNzkuMTI0NSAxNS4yNDU3IDgzLjA1NjEgMTUuMjQ1N1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTU1Ljc1OCA2LjkxMzY1QzE1NS4wMjggNi45MTM2NSAxNTQuODA0IDYuNDc5MTYgMTU0LjgwNCA1Ljk4ODU3QzE1NC44MDQgNS40Njk5NyAxNTQuOTg2IDUuMDYzNDggMTU1Ljc1OCA1LjA2MzQ4QzE1Ni41MyA1LjA2MzQ4IDE1Ni43MTIgNS40Njk5NyAxNTYuNzEyIDUuOTg4NTdDMTU2LjcxMiA2LjQ3OTA1IDE1Ni41MTYgNi45MTM2NSAxNTUuNzU4IDYuOTEzNjVaTTE0Mi40NDEgMTIuOTMwNFY5LjMyODMzTDE0MS40MTUgOS4zMjMyM1Y4LjkwMzkyQzE0MS40MTUgOC40NDcxOSAxNDEuNzg2IDguMDc3NTggMTQyLjI0NCA4LjA3OTg2TDE0Mi40NDEgOC4wODA5NVY2LjU1MzA2TDE0NC4wODIgNi4wOTA1N1Y4LjA4MDczSDE0NS41NjlWOC41MDQxNkMxNDUuNTY5IDguNjEyNDIgMTQ1LjU0OCA4LjcxOTYxIDE0NS41MDYgOC44MTk2MUMxNDUuNDY1IDguOTE5NjEgMTQ1LjQwNCA5LjAxMDQ3IDE0NS4zMjggOS4wODY5OUMxNDUuMjUxIDkuMTYzNTEgMTQ1LjE2IDkuMjI0MiAxNDUuMDYgOS4yNjU1OUMxNDQuOTYgOS4zMDY5OCAxNDQuODUzIDkuMzI4MjYgMTQ0Ljc0NSA5LjMyODIySDE0NC4wODJWMTIuNzIwMUMxNDQuMDgyIDEzLjI0MjMgMTQ0LjM3OCAxMy40MjU2IDE0NC43NiAxMy40ODg3QzE0NS4yMDkgMTMuNTYyOSAxNDUuNTgzIDEzLjg4OCAxNDUuNTgzIDE0LjM0M1YxNC45NjI2QzE0NC4wMjkgMTQuOTYyNiAxNDIuNDQxIDE0Ljg5NDIgMTQyLjQ0MSAxMi45MzA0WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xMTAuMDU4IDcuOTI1NTRDMTA4LjQxNyA3Ljg4MzQ0IDEwNi4zOTYgOC45MjA2MiAxMDYuMzk2IDExLjUxMzdDMTA2LjM5NiAxNC4wNjQ2IDEwOC40MTcgMTUuMDczOCAxMTAuMDU4IDE1LjAzMThDMTExLjc0MiAxNS4wNzM4IDExMy43NDggMTQuMDY0NiAxMTMuNzQ4IDExLjUxMzdDMTEzLjc0OCA4LjkyMDYyIDExMS43NDIgNy44ODM0NCAxMTAuMDU4IDcuOTI1NTRaTTExMC4wNyAxMy43NTg2QzEwOC44NzggMTMuNzU4NiAxMDguMDMyIDEyLjg5MDUgMTA4LjAzMiAxMS40NjFDMTA4LjAzMiAxMC4xMDEzIDEwOC44NzggOS4yMDU2OSAxMTAuMDcxIDkuMjA1NjlDMTExLjI2MyA5LjIwNTY5IDExMi4xMDEgMTAuMDk5NSAxMTIuMTAxIDExLjQ1OUMxMTIuMTAxIDEyLjg4ODcgMTExLjI2MyAxMy43NTg2IDExMC4wNyAxMy43NTg2WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00xMTguMDYgNy45NDA5OEMxMTkuNDkxIDcuOTQwOTggMTIwLjk3OCA4LjMzMzM3IDEyMC45NzggMTEuMTM2NlYxNC44OTNIMTIwLjA2M0MxMTkuNjA4IDE0Ljg5MyAxMTkuMjM4IDE0LjUyNCAxMTkuMjM4IDE0LjA2ODlWMTAuOTk2NUMxMTkuMjM4IDkuNjY1MDYgMTE4Ljc0NyA5LjE2MDQ3IDExNy44OTEgOS4xNjA0N0MxMTcuNDE0IDkuMTYwNDcgMTE2Ljc5NyA5LjUyNDg2IDExNi41MDIgOS44MTkxNVYxNC4wNjlDMTE2LjUwMiAxNC4xNzczIDExNi40ODEgMTQuMjg0NSAxMTYuNDQgMTQuMzg0NUMxMTYuMzk4IDE0LjQ4NDUgMTE2LjMzNyAxNC41NzUzIDExNi4yNjEgMTQuNjUxOUMxMTYuMTg0IDE0LjcyODQgMTE2LjA5MyAxNC43ODkxIDExNS45OTMgMTQuODMwNUMxMTUuODkzIDE0Ljg3MTkgMTE1Ljc4NiAxNC44OTMxIDExNS42NzggMTQuODkzMUgxMTQuODQ3VjguMTA5MThIMTE1Ljc3M0MxMTUuOTMyIDguMTA5MTQgMTE2LjA4NyA4LjE2MzE1IDExNi4yMTIgOC4yNjI0MkMxMTYuMzM3IDguMzYxNjggMTE2LjQyNCA4LjUwMDMzIDExNi40NiA4LjY1NTc3QzExNi44ODEgOC4xOTMyOCAxMTcuNDI4IDcuOTQwOTggMTE4LjA2IDcuOTQwOThaTTEyMi44NTQgOC4wOTcxM0MxMjMuMDI0IDguMDk3MDggMTIzLjE5IDguMTQ5NiAxMjMuMzI5IDguMjQ3NUMxMjMuNDY4IDguMzQ1NDEgMTIzLjU3NCA4LjQ4MzkxIDEyMy42MzEgOC42NDQwNUwxMjUuMTMzIDEyLjg0ODZMMTI2LjYzNSA4LjY0NDE1QzEyNi42OTIgOC40ODQwMiAxMjYuNzk4IDguMzQ1NTEgMTI2LjkzNyA4LjI0NzZDMTI3LjA3NiA4LjE0OTcgMTI3LjI0MiA4LjA5NzE4IDEyNy40MTIgOC4wOTcyNEgxMjguNTk4TDEyNi4xNTIgMTQuMzU2N0MxMjYuMDkxIDE0LjUxMTIgMTI1Ljk4NiAxNC42NDM5IDEyNS44NDkgMTQuNzM3NEMxMjUuNzExIDE0LjgzMSAxMjUuNTQ5IDE0Ljg4MSAxMjUuMzgzIDE0Ljg4MDlIMTI0LjMzM0wxMjEuNjY4IDguMDk3MTNIMTIyLjg1NFonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTM1LjA4NSAxNC41NTE0QzEzNC41NjYgMTQuNzYxNiAxMzMuNTEzIDE1LjA0MTYgMTMyLjQxOCAxNS4wNDE2QzEzMC40OTYgMTUuMDQxNiAxMjkuMDI0IDEzLjkzNDUgMTI5LjAyNCAxMS40Mzk2QzEyOS4wMjQgOS4xOTcwMSAxMzAuNDUxIDcuOTk3OTIgMTMyLjE5MSA3Ljk5NzkyQzEzNC4zMzggNy45OTc5MiAxMzUuMjU0IDkuNDM3OCAxMzUuMTU4IDExLjM5NzlDMTM1LjEzOSAxMS44MDI5IDEzNC43ODYgMTIuMDk4MyAxMzQuMzggMTIuMDk4M0gxMzAuNjc5QzEzMC43NjMgMTMuMTkxNiAxMzEuNTYyIDEzLjc2NjIgMTMyLjYxNSAxMy43NjYyQzEzMy4wMjggMTMuNzY2MiAxMzMuNDYyIDEzLjc0NTIgMTMzLjk4MyAxMy42NDgxQzEzNC41MzUgMTMuNTQ1IDEzNS4wODUgMTMuOTM3NSAxMzUuMDg1IDE0LjQ5ODVWMTQuNTUxNFpNMTMzLjY3MyAxMC45NDlDMTMzLjc4NSA5Ljg3NjIxIDEzMy4wNjEgOS4yODc1MiAxMzIuMTkxIDkuMjg3NTJDMTMxLjMyMSA5LjI4NzUyIDEzMC43MzQgOS45Mzk3OSAxMzAuNjc5IDEwLjk0ODlMMTMzLjY3MyAxMC45NDlaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTEzNy4zNDUgOC4xMTEyMkMxMzcuNDk3IDguMTExMTggMTM3LjY0NSA4LjE2MjI5IDEzNy43NjUgOC4yNTYzNUMxMzcuODg0IDguMzUwNDEgMTM3Ljk2OSA4LjQ4MTk3IDEzOC4wMDUgOC42Mjk5M0MxMzguNTY2IDguMjA5MzIgMTM5LjI2OCA3Ljk0MzAzIDEzOS43NTkgNy45NDMwM0MxMzkuODAxIDcuOTQzMDMgMTQwLjA2OCA3Ljk0MzAzIDE0MC40ODkgNy45OTkxM1Y4LjcyNjVDMTQwLjQ4OSA5LjExNzQ4IDE0MC4xNSA5LjQxNDcgMTM5Ljc1OSA5LjQxNDdDMTM5LjMxIDkuNDE0NyAxMzguNjUxIDkuNTgyOSAxMzguMTMxIDkuODc3M1YxNC44OTUxSDEzNi40NjJWOC4xMTExMkwxMzcuMzQ1IDguMTExMjJaTTE1Ni42IDE0LjA1MDhWOC4wOTEwNEgxNTUuNzY5QzE1NS4zMTQgOC4wOTEwNCAxNTQuOTQ0IDguNDU5OTkgMTU0Ljk0NCA4LjkxNTFWMTQuODc0OEgxNTUuNzc1QzE1Ni4yMyAxNC44NzQ4IDE1Ni42IDE0LjUwNTggMTU2LjYgMTQuMDUwOFpNMTU4Ljg1NyAxMi45NDQ3VjkuMzQyNTRIMTU3Ljc0OVY4LjkxOTEyQzE1Ny43NDkgOC40NjQwMSAxNTguMTE4IDguMDk1MDYgMTU4LjU3NCA4LjA5NTA2SDE1OC44NTdWNi41NjczOUwxNjAuNDk5IDYuMTA0NzlWOC4wOTUwNkgxNjEuOTg2VjguNTE4NDhDMTYxLjk4NiA4Ljk3MzU5IDE2MS42MTcgOS4zNDI1NCAxNjEuMTYxIDkuMzQyNTRIMTYwLjQ5OVYxMi43MzQ1QzE2MC40OTkgMTMuMjU2NiAxNjAuNzk1IDEzLjQ0IDE2MS4xNzcgMTMuNTAzQzE2MS42MjYgMTMuNTc3NCAxNjIgMTMuOTAyNCAxNjIgMTQuMzU3NFYxNC45NzdDMTYwLjQ0NiAxNC45NzcgMTU4Ljg1NyAxNC45MDg2IDE1OC44NTcgMTIuOTQ0N1pNOTguMTkyOSAxMC4xMTI0Qzk4LjIwMzMgNi45NDA0NiAxMDAuNTk4IDUuMTY4MDkgMTAyLjg5NSA1LjE2ODA5QzEwNC4xNzEgNS4xNjgwOSAxMDUuMzQyIDUuNDQyODUgMTA2LjMwNCA2LjEyOTUzTDEwNS45MTQgNi42NjMxQzEwNS42NTQgNy4wMjAxMSAxMDUuMTYgNy4xNjE5NCAxMDQuNzQ5IDYuOTk5NDlDMTA0LjE2OSA2Ljc3MDIgMTAzLjYyMiA2LjcyMTggMTAzLjIxNSA2LjcyMThDMTAxLjMzNSA2LjcyMTggOTkuOTE2OSA3LjkyODQ5IDk5LjkwNjggMTAuMTEyM0M5OS45MTY5IDEyLjI5NTkgMTAxLjMzNSAxMy41MjAxIDEwMy4yMTUgMTMuNTIwMUMxMDMuNjIyIDEzLjUyMDEgMTA0LjE2OSAxMy40NzE3IDEwNC43NDkgMTMuMjQyNEMxMDUuMTYgMTMuMDc5OSAxMDUuNjU0IDEzLjIwNDYgMTA1LjkxNCAxMy41NjE1TDEwNi4zMDQgMTQuMDk1MkMxMDUuMzQyIDE0Ljc4MTkgMTA0LjE3MSAxNS4wNTY2IDEwMi44OTUgMTUuMDU2NkMxMDAuNTk4IDE1LjA1NjYgOTguMjAzMyAxMy4yODQyIDk4LjE5MjkgMTAuMTEyNFpNMTQ3LjYxOSA1LjIxNzY4QzE0OC4wNzQgNS4yMTc2OCAxNDguNDQ0IDUuNTg2NjMgMTQ4LjQ0NCA2LjA0MTc0VjkuODE5NjhMMTUxLjgyIDUuNTgxMzFDMTUxLjg5NyA1LjQ3NzMzIDE1MS45OTcgNS4zOTI4MiAxNTIuMTEyIDUuMzM0NkMxNTIuMjI3IDUuMjc2MzggMTUyLjM1NSA1LjI0NjA3IDE1Mi40ODQgNS4yNDYxMUgxNTMuOTg0TDE1MC4xNjYgMTAuMDYxNUwxNTMuOTg0IDE0Ljg3NDlIMTUyLjQ4NEMxNTIuMzU1IDE0Ljg3NDkgMTUyLjIyNyAxNC44NDQ2IDE1Mi4xMTIgMTQuNzg2NEMxNTEuOTk3IDE0LjcyODEgMTUxLjg5NyAxNC42NDM2IDE1MS44MiAxNC41Mzk3TDE0OC40NDQgMTAuMzAyNVYxNC4wNTA4QzE0OC40NDQgMTQuNTA1OSAxNDguMDc0IDE0Ljg3NDkgMTQ3LjYxOSAxNC44NzQ5SDE0Ni43NDZWNS4yMTc2OEgxNDcuNjE5WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00wLjc3MzQzOCA2LjU3NTJIMi42ODA2NkMzLjU2NTQzIDYuNTc1MiA0LjIwNDEgNi43MDQxIDQuNTk2NjggNi45NjE5MUM0Ljk5MjE5IDcuMjE5NzMgNS4xODk5NCA3LjYyNjk1IDUuMTg5OTQgOC4xODM1OUM1LjE4OTk0IDguNTU4NTkgNS4wOTMyNiA4Ljg3MDYxIDQuODk5OSA5LjExOTYzQzQuNzA2NTQgOS4zNjg2NSA0LjQyODIyIDkuNTI1MzkgNC4wNjQ5NCA5LjU4OTg0VjkuNjMzNzlDNC41MTYxMSA5LjcxODc1IDQuODQ3MTcgOS44ODcyMSA1LjA1ODExIDEwLjEzOTJDNS4yNzE5NyAxMC4zODgyIDUuMzc4OTEgMTAuNzI2NiA1LjM3ODkxIDExLjE1NDNDNS4zNzg5MSAxMS43MzE0IDUuMTc2NzYgMTIuMTg0MSA0Ljc3MjQ2IDEyLjUxMjJDNC4zNzEwOSAxMi44Mzc0IDMuODExNTIgMTMgMy4wOTM3NSAxM0gwLjc3MzQzOFY2LjU3NTJaTTEuODIzNzMgOS4yMjk0OUgyLjgzNDQ3QzMuMjczOTMgOS4yMjk0OSAzLjU5NDczIDkuMTYwNjQgMy43OTY4OCA5LjAyMjk1QzMuOTk5MDIgOC44ODIzMiA0LjEwMDEgOC42NDUwMiA0LjEwMDEgOC4zMTEwNEM0LjEwMDEgOC4wMDkyOCAzLjk5MDIzIDcuNzkxMDIgMy43NzA1MSA3LjY1NjI1QzMuNTUzNzEgNy41MjE0OCAzLjIwODAxIDcuNDU0MSAyLjczMzQgNy40NTQxSDEuODIzNzNWOS4yMjk0OVpNMS44MjM3MyAxMC4wODJWMTIuMTE2N0gyLjkzOTk0QzMuMzc5MzkgMTIuMTE2NyAzLjcxMDQ1IDEyLjAzMzIgMy45MzMxMSAxMS44NjYyQzQuMTU4NjkgMTEuNjk2MyA0LjI3MTQ4IDExLjQyOTcgNC4yNzE0OCAxMS4wNjY0QzQuMjcxNDggMTAuNzMyNCA0LjE1NzIzIDEwLjQ4NDkgMy45Mjg3MSAxMC4zMjM3QzMuNzAwMiAxMC4xNjI2IDMuMzUzMDMgMTAuMDgyIDIuODg3MjEgMTAuMDgySDEuODIzNzNaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTEzLjAxMSA2LjU3NTJWMTAuNzMyNEMxMy4wMTEgMTEuMjA3IDEyLjkwODQgMTEuNjIzIDEyLjcwMzQgMTEuOTgwNUMxMi41MDEyIDEyLjMzNSAxMi4yMDY4IDEyLjYwODkgMTEuODIwMSAxMi44MDIyQzExLjQzNjMgMTIuOTkyNyAxMC45NzYzIDEzLjA4NzkgMTAuNDQwMiAxMy4wODc5QzkuNjQzMyAxMy4wODc5IDkuMDIzNjggMTIuODc3IDguNTgxMyAxMi40NTUxQzguMTM4OTIgMTIuMDMzMiA3LjkxNzcyIDExLjQ1MzEgNy45MTc3MiAxMC43MTQ4VjYuNTc1Mkg4Ljk3MjRWMTAuNjQwMUM4Ljk3MjQgMTEuMTcwNCA5LjA5NTQ2IDExLjU2MTUgOS4zNDE1NSAxMS44MTM1QzkuNTg3NjUgMTIuMDY1NCA5Ljk2NTU3IDEyLjE5MTQgMTAuNDc1MyAxMi4xOTE0QzExLjQ2NTYgMTIuMTkxNCAxMS45NjA3IDExLjY3MTQgMTEuOTYwNyAxMC42MzEzVjYuNTc1MkgxMy4wMTFaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTE1LjkxNDYgMTNWNi41NzUySDE2Ljk2NDlWMTNIMTUuOTE0NlonIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNMTkuOTI1NSAxM1Y2LjU3NTJIMjAuOTc1OFYxMi4wOTkxSDIzLjY5NlYxM0gxOS45MjU1WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J00yOC4yODI4IDEzSDI3LjIzMjVWNy40NzYwN0gyNS4zNDI4VjYuNTc1MkgzMC4xNzI0VjcuNDc2MDdIMjguMjgyOFYxM1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNNDEuOTQ3MiAxM0g0MC44MDQ2TDM5LjcxNDggOS4xNjc5NkMzOS42Njc5IDkuMDAwOTcgMzkuNjA5MyA4Ljc2MDc0IDM5LjUzOSA4LjQ0NzI3QzM5LjQ2ODcgOC4xMzA4NiAzOS40MjYyIDcuOTExMTMgMzkuNDExNiA3Ljc4ODA5QzM5LjM4MjMgNy45NzU1OSAzOS4zMzM5IDguMjE4NzUgMzkuMjY2NSA4LjUxNzU4QzM5LjIwMjEgOC44MTY0MSAzOS4xNDc5IDkuMDM5MDUgMzkuMTAzOSA5LjE4NTU0TDM4LjA0MDUgMTNIMzYuODk3OUwzNi4wNjczIDkuNzgzMkwzNS4yMjM2IDYuNTc1MkgzNi4yOTU4TDM3LjIxNDMgMTAuMzE5M0MzNy4zNTc4IDEwLjkxOTkgMzcuNDYwNCAxMS40NTAyIDM3LjUyMTkgMTEuOTEwMkMzNy41NTQxIDExLjY2MTEgMzcuNjAyNSAxMS4zODI4IDM3LjY2NjkgMTEuMDc1MkMzNy43MzE0IDEwLjc2NzYgMzcuNzkgMTAuNTE4NiAzNy44NDI3IDEwLjMyODFMMzguODg4NiA2LjU3NTJIMzkuOTMwMUw0MS4wMDI0IDEwLjM0NTdDNDEuMTA0OSAxMC42OTQzIDQxLjIxMzMgMTEuMjE1OCA0MS4zMjc2IDExLjkxMDJDNDEuMzcxNSAxMS40OTEyIDQxLjQ3NyAxMC45NTggNDEuNjQ0IDEwLjMxMDVMNDIuNTU4IDYuNTc1Mkg0My42MjE1TDQxLjk0NzIgMTNaJyBmaWxsPSclMjMzNzNGNDUnLyUzRSUzQ3BhdGggZD0nTTQ1Ljc5NTcgMTNWNi41NzUySDQ2Ljg0NlYxM0g0NS43OTU3WicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0NwYXRoIGQ9J001Mi4wMjU4IDEzSDUwLjk3NTVWNy40NzYwN0g0OS4wODU5VjYuNTc1Mkg1My45MTU1VjcuNDc2MDdINTIuMDI1OFYxM1onIGZpbGw9JyUyMzM3M0Y0NScvJTNFJTNDcGF0aCBkPSdNNjEuMjMxMiAxM0g2MC4xNzY1VjEwLjEwNEg1Ny4yMTQ2VjEzSDU2LjE2NDNWNi41NzUySDU3LjIxNDZWOS4yMDMxMkg2MC4xNzY1VjYuNTc1Mkg2MS4yMzEyVjEzWicgZmlsbD0nJTIzMzczRjQ1Jy8lM0UlM0Mvc3ZnJTNFXFxcIik7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1wb3dlcmVkLWJ5LWNvbnZlcnRraXQ6aG92ZXIsXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXBvd2VyZWQtYnktY29udmVydGtpdDpmb2N1cyB7XFxuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4wMjUpIHBlcnNwZWN0aXZlKDFweCk7XFxuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxLjAyNSkgcGVyc3BlY3RpdmUoMXB4KTtcXG4gIHRyYW5zZm9ybTogc2NhbGUoMS4wMjUpIHBlcnNwZWN0aXZlKDFweCk7XFxuICBvcGFjaXR5OiAxO1xcbn1cXG5cXG5ALXdlYmtpdC1rZXlmcmFtZXMgZm9ybWtpdC1ib3VuY2VkZWxheS1mb3Jta2l0LWZvcm0tZGF0YS11aWQtZjliYjFmYmFkOC0ge1xcblxcbiAgMCUsXFxuICA4MCUsXFxuICAxMDAlIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG4gIH1cXG5cXG4gIDQwJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICB9XFxufVxcblxcbkBrZXlmcmFtZXMgZm9ybWtpdC1ib3VuY2VkZWxheS1mb3Jta2l0LWZvcm0tZGF0YS11aWQtZjliYjFmYmFkOC0ge1xcblxcbiAgMCUsXFxuICA4MCUsXFxuICAxMDAlIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG4gIH1cXG5cXG4gIDQwJSB7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICB9XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSBibG9ja3F1b3RlIHtcXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcXG4gIG1hcmdpbjogMCAwIDIwcHg7XFxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNlMWUxZTE7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSB7XFxuICBib3gtc2hhZG93OiAwIDJweCAxNXB4IDAgcmdiYSgyMTAsIDIxNCwgMjIwLCAwLjUpO1xcbiAgbWF4LXdpZHRoOiA3MDBweDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSBbZGF0YS1zdHlsZT1cXFwiZnVsbFxcXCJdIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1oZWFkZXIge1xcbiAgbWFyZ2luLXRvcDogMDtcXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1zdWJoZWFkZXIge1xcbiAgbWFyZ2luOiAxNXB4IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1jb2x1bW4ge1xcbiAgcGFkZGluZzogMjBweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LWNvbHVtbjpudGgtY2hpbGQoMikge1xcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlOWVjZWY7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1iYWNrZ3JvdW5kIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XFxuICBvcGFjaXR5OiAwLjU7XFxuICB6LWluZGV4OiAxO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtaGVhZGVyLFxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1zdWJoZWFkZXIsXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LWltYWdlIHtcXG4gIHotaW5kZXg6IDI7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1maWVsZCB7XFxuICBtYXJnaW46IDAgMCAxNXB4IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZSAuZm9ybWtpdC1pbnB1dCxcXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtc3VibWl0IHtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uZm9ybWtpdC1mb3JtLnBpbmUgLmZvcm1raXQtZ3VhcmFudGVlIHtcXG4gIGZvbnQtc2l6ZTogMTNweDtcXG4gIG1hcmdpbjogMCAwIDE1cHggMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LWd1YXJhbnRlZT5wIHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lIC5mb3Jta2l0LXBvd2VyZWQtYnkge1xcbiAgY29sb3I6ICM3ZDdkN2Q7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG4gIG1hcmdpbi1ib3R0b206IDA7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZVttaW4td2lkdGh+PVxcXCI2MDBcXFwiXSBbZGF0YS1zdHlsZT1cXFwiZnVsbFxcXCJdLFxcbi5mb3Jta2l0LWZvcm0ucGluZVttaW4td2lkdGh+PVxcXCI3MDBcXFwiXSBbZGF0YS1zdHlsZT1cXFwiZnVsbFxcXCJdLFxcbi5mb3Jta2l0LWZvcm0ucGluZVttaW4td2lkdGh+PVxcXCI4MDBcXFwiXSBbZGF0YS1zdHlsZT1cXFwiZnVsbFxcXCJdIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDIwMHB4LCAxZnIpKTtcXG59XFxuXFxuLmZvcm1raXQtZm9ybS5waW5lW21pbi13aWR0aH49XFxcIjYwMFxcXCJdIC5mb3Jta2l0LXN1Ym1pdCxcXG4uZm9ybWtpdC1mb3JtLnBpbmVbbWluLXdpZHRofj1cXFwiNzAwXFxcIl0gLmZvcm1raXQtc3VibWl0LFxcbi5mb3Jta2l0LWZvcm0ucGluZVttaW4td2lkdGh+PVxcXCI4MDBcXFwiXSAuZm9ybWtpdC1zdWJtaXQge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZVttaW4td2lkdGh+PVxcXCI2MDBcXFwiXSAuZm9ybWtpdC1jb2x1bW4sXFxuLmZvcm1raXQtZm9ybS5waW5lW21pbi13aWR0aH49XFxcIjcwMFxcXCJdIC5mb3Jta2l0LWNvbHVtbixcXG4uZm9ybWtpdC1mb3JtLnBpbmVbbWluLXdpZHRofj1cXFwiODAwXFxcIl0gLmZvcm1raXQtY29sdW1uIHtcXG4gIHBhZGRpbmc6IDQwcHg7XFxufVxcblxcbi5mb3Jta2l0LWZvcm0ucGluZVttaW4td2lkdGh+PVxcXCI2MDBcXFwiXSAuZm9ybWtpdC1jb2x1bW46bnRoLWNoaWxkKDIpLFxcbi5mb3Jta2l0LWZvcm0ucGluZVttaW4td2lkdGh+PVxcXCI3MDBcXFwiXSAuZm9ybWtpdC1jb2x1bW46bnRoLWNoaWxkKDIpLFxcbi5mb3Jta2l0LWZvcm0ucGluZVttaW4td2lkdGh+PVxcXCI4MDBcXFwiXSAuZm9ybWtpdC1jb2x1bW46bnRoLWNoaWxkKDIpIHtcXG4gIGJvcmRlci10b3A6IG5vbmU7XFxufVxcblwiO1xuaW5qZWN0b3JfYmYxYmE3ZTAoY3NzXzFmYjc1OTlkLHtcInNpbmdsZVRhZ1wiOnRydWV9KTtcblxudmFyIEFMTE9XRURfRk9STUFUUyQ1ID0gWydpbmxpbmUnLCAnbW9kYWwnLCAnc2xpZGUgaW4nXTtcbnZhciBiZ0ltYWdlJDMgPSAnLy9wYWdlcy5jb252ZXJ0a2l0LmNvbS9hc3NldHMvcmFpbmllci9iZy5qcGcnO1xuXG5mdW5jdGlvbiBQaW5lKF9yZWYpIHtcbiAgdmFyIG9wdGlvbnMgPSBfcmVmLm9wdGlvbnMsXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGFjdGlvbiA9IF9yZWYuYWN0aW9uLFxuICAgICAgc3VibWl0VGV4dCA9IF9yZWYuc3VibWl0VGV4dCxcbiAgICAgIGVtYWlsUGxhY2Vob2xkZXIgPSBfcmVmLmVtYWlsUGxhY2Vob2xkZXIsXG4gICAgICBuYW1lUGxhY2Vob2xkZXIgPSBfcmVmLm5hbWVQbGFjZWhvbGRlcixcbiAgICAgIGhpZGVOYW1lID0gX3JlZi5oaWRlTmFtZSxcbiAgICAgIHNob3dMYWJlbHMgPSBfcmVmLnNob3dMYWJlbHMsXG4gICAgICBuYW1lTGFiZWwgPSBfcmVmLm5hbWVMYWJlbCxcbiAgICAgIGVtYWlsTGFiZWwgPSBfcmVmLmVtYWlsTGFiZWwsXG4gICAgICBuZXdUYWIgPSBfcmVmLm5ld1RhYixcbiAgICAgIGZvcm1JZCA9IF9yZWYuZm9ybUlkLFxuICAgICAgZm9ybWF0ID0gX3JlZi5mb3JtYXQsXG4gICAgICBoaWRlV2FybmluZ3MgPSBfcmVmLmhpZGVXYXJuaW5ncztcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCAhaGlkZVdhcm5pbmdzICYmICFBTExPV0VEX0ZPUk1BVFMkNS5pbmNsdWRlcyhmb3JtYXQpID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoV2FybmluZywge1xuICAgIG1lc3NhZ2U6IFwiVGhpcyB0ZW1wbGF0ZSBpcyBub3QgYXZhaWxhYmxlIGZvciB0aGUgY2hvc2VuIGZvcm1hdFwiXG4gIH0pIDogbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIsIHtcbiAgICBhY3Rpb246IGFjdGlvbixcbiAgICBjbGFzc05hbWU6IFwic2V2YS1mb3JtIGZvcm1raXQtZm9ybSBwaW5lIFwiLmNvbmNhdChjbGFzc05hbWUpLFxuICAgIG1ldGhvZDogXCJwb3N0XCIsXG4gICAgdGFyZ2V0OiBuZXdUYWIgPyAnX2JsYW5rJyA6ICdfc2VsZicsXG4gICAgXCJkYXRhLXN2LWZvcm1cIjogZm9ybUlkLFxuICAgIFwiZGF0YS11aWRcIjogb3B0aW9ucy51aWQsXG4gICAgXCJkYXRhLWZvcm1hdFwiOiBmb3JtYXQsXG4gICAgXCJkYXRhLXZlcnNpb25cIjogb3B0aW9ucy52ZXJzaW9uLFxuICAgIFwiZGF0YS1vcHRpb25zXCI6IEpTT04uc3RyaW5naWZ5KG9wdGlvbnMpLFxuICAgIFwibWluLXdpZHRoXCI6IFwiNDAwIDUwMCA2MDAgNzAwIDgwMFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2IoMjU1LCAyNTUsIDI1NSknLFxuICAgICAgYm9yZGVyUmFkaXVzOiAnNnB4J1xuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIFwiZGF0YS1zdHlsZVwiOiBcImZ1bGxcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgXCJkYXRhLWVsZW1lbnRcIjogXCJjb2x1bW5cIixcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1jb2x1bW5cIixcbiAgICBzdHlsZToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiKDI0OSwgMjUwLCAyNTEpJ1xuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWJhY2tncm91bmRcIixcbiAgICBzdHlsZToge1xuICAgICAgb3BhY2l0eTogMC4zXG4gICAgfVxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWhlYWRlclwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiaGVhZGVyXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDc3LCA3NywgNzcpJyxcbiAgICAgIGZvbnRTaXplOiAnMjBweCcsXG4gICAgICBmb250V2VpZ2h0OiA3MDBcbiAgICB9XG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaDFcIiwgbnVsbCwgXCJKb2luIHRoZSBOZXdzbGV0dGVyXCIpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LXN1YmhlYWRlclwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwic3ViaGVhZGVyXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDEwNCwgMTA0LCAxMDQpJyxcbiAgICAgIGZvbnRTaXplOiAnMTVweCdcbiAgICB9XG4gIH0sIFwiU3Vic2NyaWJlIHRvIGdldCBvdXIgbGF0ZXN0IGNvbnRlbnQgYnkgZW1haWwuXCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtaW1hZ2UgZm9ybWtpdC1pbWFnZSByZWxhdGl2ZSBmb2N1czpvdXRsaW5lLW5vbmVcIixcbiAgICByb2xlOiBcImJ1dHRvblwiLFxuICAgIHRhYkluZGV4OiBcIjBcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImltZ1wiLCB7XG4gICAgY2xhc3NOYW1lOiBcImN1cnNvci1wb2ludGVyIGZvY3VzOm91dGxpbmUtYmx1ZSBcIixcbiAgICBzcmM6IGJnSW1hZ2UkMyxcbiAgICBhbHQ6IFwiXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIG1heFdpZHRoOiAnMTAwJSdcbiAgICB9XG4gIH0pKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImNvbHVtblwiLFxuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWNvbHVtblwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWFsZXJ0IGZvcm1raXQtYWxlcnQtZXJyb3JcIixcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImVycm9yc1wiLFxuICAgIFwiZGF0YS1ncm91cFwiOiBcImFsZXJ0XCJcbiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBcImRhdGEtZWxlbWVudFwiOiBcImZpZWxkc1wiLFxuICAgIGNsYXNzTmFtZTogXCJzZXZhLWZpZWxkcyBmb3Jta2l0LWZpZWxkc1wiXG4gIH0sICFoaWRlTmFtZSAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgc2hvd0xhYmVscyA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge1xuICAgIGh0bWxGb3I6IFwiY2stZmlyc3QtbmFtZVwiXG4gIH0sIG5hbWVMYWJlbCkgOiBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtZmllbGRcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1pbnB1dFwiLFxuICAgIFwiYXJpYS1sYWJlbFwiOiBuYW1lTGFiZWwsXG4gICAgbmFtZTogXCJmaWVsZHNbZmlyc3RfbmFtZV1cIixcbiAgICBwbGFjZWhvbGRlcjogbmFtZVBsYWNlaG9sZGVyLFxuICAgIHR5cGU6IFwidGV4dFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBjb2xvcjogJ3JnYigwLCAwLCAwKScsXG4gICAgICBib3JkZXJDb2xvcjogJ3JnYigyMjcsIDIyNywgMjI3KScsXG4gICAgICBib3JkZXJSYWRpdXM6ICc0cHgnLFxuICAgICAgZm9udFdlaWdodDogNDAwXG4gICAgfSxcbiAgICBpZDogXCJjay1maXJzdC1uYW1lXCJcbiAgfSkpKSwgc2hvd0xhYmVscyA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge1xuICAgIGh0bWxGb3I6IFwiY2stZW1haWxcIlxuICB9LCBlbWFpbExhYmVsKSA6IG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiZm9ybWtpdC1maWVsZFwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWlucHV0XCIsXG4gICAgXCJhcmlhLWxhYmVsXCI6IGVtYWlsTGFiZWwsXG4gICAgbmFtZTogXCJlbWFpbF9hZGRyZXNzXCIsXG4gICAgcGxhY2Vob2xkZXI6IGVtYWlsUGxhY2Vob2xkZXIsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgdHlwZTogXCJlbWFpbFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBjb2xvcjogJ3JnYigwLCAwLCAwKScsXG4gICAgICBib3JkZXJDb2xvcjogJ3JnYigyMjcsIDIyNywgMjI3KScsXG4gICAgICBib3JkZXJSYWRpdXM6ICc0cHgnLFxuICAgICAgZm9udFdlaWdodDogNDAwXG4gICAgfSxcbiAgICBpZDogXCJjay1lbWFpbFwiXG4gIH0pKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwge1xuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwic3VibWl0XCIsXG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtc3VibWl0XCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDI1NSwgMjU1LCAyNTUpJyxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYigyMiwgMTE5LCAxOTApJyxcbiAgICAgIGJvcmRlclJhZGl1czogJzI0cHgnLFxuICAgICAgZm9udFdlaWdodDogNzAwXG4gICAgfVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtc3Bpbm5lclwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgc3VibWl0VGV4dCkpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJmb3Jta2l0LWd1YXJhbnRlZVwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwiZ3VhcmFudGVlXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGNvbG9yOiAncmdiKDc3LCA3NywgNzcpJyxcbiAgICAgIGZvbnRTaXplOiAnMTNweCcsXG4gICAgICBmb250V2VpZ2h0OiA0MDBcbiAgICB9XG4gIH0sIFwiV2UgcmVzcGVjdCB5b3VyIHByaXZhY3kuIFVuc3Vic2NyaWJlIGF0IGFueSB0aW1lLlwiKSwgb3B0aW9ucy5zZXR0aW5ncy5wb3dlcmVkX2J5LnNob3cgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge1xuICAgIGhyZWY6IG9wdGlvbnMuc2V0dGluZ3MucG93ZXJlZF9ieS51cmwsXG4gICAgY2xhc3NOYW1lOiBcImZvcm1raXQtcG93ZXJlZC1ieVwiLFxuICAgIFwiZGF0YS1lbGVtZW50XCI6IFwicG93ZXJlZC1ieVwiLFxuICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICByZWw6IFwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gIH0sIFwiUG93ZXJlZCBCeSBDb252ZXJ0S2l0XCIpIDogbnVsbCkpKSk7XG59XG5cbnZhciBvcHRpb25zID0ge1xuICBzZXR0aW5nczoge1xuICAgIGFmdGVyX3N1YnNjcmliZToge1xuICAgICAgYWN0aW9uOiAnbWVzc2FnZScsXG4gICAgICBzdWNjZXNzX21lc3NhZ2U6ICdTdWNjZXNzISBOb3cgY2hlY2sgeW91ciBlbWFpbCB0byBjb25maXJtIHlvdXIgc3Vic2NyaXB0aW9uLicsXG4gICAgICByZWRpcmVjdF91cmw6ICcnXG4gICAgfSxcbiAgICBhbmFseXRpY3M6IHtcbiAgICAgIGdvb2dsZTogbnVsbCxcbiAgICAgIGZhY2Vib29rOiBudWxsLFxuICAgICAgc2VnbWVudDogbnVsbCxcbiAgICAgIHBpbnRlcmVzdDogbnVsbFxuICAgIH0sXG4gICAgbW9kYWw6IHtcbiAgICAgIHRyaWdnZXI6ICd0aW1lcicsXG4gICAgICBzY3JvbGxfcGVyY2VudGFnZTogbnVsbCxcbiAgICAgIHRpbWVyOiA1LFxuICAgICAgZGV2aWNlczogJ2FsbCcsXG4gICAgICBzaG93X29uY2VfZXZlcnk6IDE1XG4gICAgfSxcbiAgICBwb3dlcmVkX2J5OiB7XG4gICAgICBzaG93OiB0cnVlLFxuICAgICAgdXJsOiAnaHR0cHM6Ly9jb252ZXJ0a2l0LmNvbT91dG1fc291cmNlPWR5bmFtaWMmYW1wO3V0bV9tZWRpdW09cmVmZXJyYWwmYW1wO3V0bV9jYW1wYWlnbj1wb3dlcmVkYnkmYW1wO3V0bV9jb250ZW50PWZvcm0nXG4gICAgfSxcbiAgICByZWNhcHRjaGE6IHtcbiAgICAgIGVuYWJsZWQ6IGZhbHNlXG4gICAgfSxcbiAgICByZXR1cm5fdmlzaXRvcjoge1xuICAgICAgYWN0aW9uOiAnc2hvdycsXG4gICAgICBjdXN0b21fY29udGVudDogJydcbiAgICB9LFxuICAgIHNsaWRlX2luOiB7XG4gICAgICBkaXNwbGF5X2luOiAnYm90dG9tX3JpZ2h0JyxcbiAgICAgIHRyaWdnZXI6ICd0aW1lcicsXG4gICAgICBzY3JvbGxfcGVyY2VudGFnZTogbnVsbCxcbiAgICAgIHRpbWVyOiA1LFxuICAgICAgZGV2aWNlczogJ2FsbCcsXG4gICAgICBzaG93X29uY2VfZXZlcnk6IDE1XG4gICAgfSxcbiAgICBzdGlja3lfYmFyOiB7XG4gICAgICBkaXNwbGF5X2luOiAndG9wJyxcbiAgICAgIHRyaWdnZXI6ICd0aW1lcicsXG4gICAgICBzY3JvbGxfcGVyY2VudGFnZTogbnVsbCxcbiAgICAgIHRpbWVyOiA1LFxuICAgICAgZGV2aWNlczogJ2FsbCcsXG4gICAgICBzaG93X29uY2VfZXZlcnk6IDE1XG4gICAgfVxuICB9LFxuICB1aWQ6ICcnLFxuICB2ZXJzaW9uOiAnNSdcbn07XG5cbnZhciByZW5kZXJUZW1wbGF0ZSA9IGZ1bmN0aW9uIHJlbmRlclRlbXBsYXRlKHRlbXBsYXRlKSB7XG4gIHZhciB0ZW1wbGF0ZU5hbWUgPSB0ZW1wbGF0ZS50b0xvd2VyQ2FzZSgpO1xuICB2YXIgYWxsVGVtcGxhdGVzID0ge1xuICAgIG1pbmltYWw6IE1pbmltYWwsXG4gICAgY2xhcmU6IENsYXJlLFxuICAgIG1pbGxzOiBNaWxscyxcbiAgICByYWluaWVyOiBSYWluaWVyLFxuICAgIHBvd2VsbDogUG93ZWxsLFxuICAgIGNoYXJsb3R0ZTogQ2hhcmxvdHRlLFxuICAgIHBpbmU6IFBpbmVcbiAgfTtcblxuICBpZiAoIWFsbFRlbXBsYXRlcy5oYXNPd25Qcm9wZXJ0eSh0ZW1wbGF0ZU5hbWUpKSB7XG4gICAgdmFyIGVycm9yTWVzc2FnZSA9IFwiVGhlIGNob3NlbiB0ZW1wbGF0ZSBcXFwiXCIuY29uY2F0KHRlbXBsYXRlLCBcIlxcXCIgaXMgbm90IHlldCBzdXBwb3J0ZWRcIik7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKGVycm9yTWVzc2FnZSk7XG4gIH1cblxuICByZXR1cm4gYWxsVGVtcGxhdGVzW3RlbXBsYXRlTmFtZV07XG59O1xuXG5mdW5jdGlvbiB1c2VUZW1wbGF0ZSh0ZW1wbGF0ZSkge1xuICByZXR1cm4ge1xuICAgIG9wdGlvbnM6IG9wdGlvbnMsXG4gICAgVGVtcGxhdGU6IHJlbmRlclRlbXBsYXRlKHRlbXBsYXRlKVxuICB9O1xufVxuXG4vLyBkZXJpdmUgZGF0YS11aWQgb2YgdXNlclxuXG5mdW5jdGlvbiB1c2VBcHBGb3JtYXQoZm9ybWF0KSB7XG4gIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgY2FzZSAnc2xpZGVpbic6XG4gICAgICByZXR1cm4gJ3NsaWRlIGluJztcblxuICAgIGNhc2UgJ3N0aWNreSc6XG4gICAgICByZXR1cm4gJ3N0aWNreSBiYXInO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBmb3JtYXQ7XG4gIH1cbn1cblxuZnVuY3Rpb24gRm9ybShfcmVmKSB7XG4gIHZhciB0ZW1wbGF0ZSA9IF9yZWYudGVtcGxhdGUsXG4gICAgICBmb3JtYXQgPSBfcmVmLmZvcm1hdCxcbiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFtcInRlbXBsYXRlXCIsIFwiZm9ybWF0XCJdKTtcblxuICB2YXIgX3VzZVRlbXBsYXRlID0gdXNlVGVtcGxhdGUodGVtcGxhdGUpLFxuICAgICAgb3B0aW9ucyA9IF91c2VUZW1wbGF0ZS5vcHRpb25zLFxuICAgICAgVGVtcGxhdGUgPSBfdXNlVGVtcGxhdGUuVGVtcGxhdGU7XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7XG4gICAgc3JjOiBcImh0dHBzOi8vZi5jb252ZXJ0a2l0LmNvbS9ja2pzL2NrLjUuanNcIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGVtcGxhdGUsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIG9wdGlvbnM6IG9wdGlvbnMsXG4gICAgZm9ybWF0OiB1c2VBcHBGb3JtYXQoZm9ybWF0KVxuICB9KSkpO1xufVxuXG52YXIgQ29udmVydEtpdEZvcm0gPSBmdW5jdGlvbiBDb252ZXJ0S2l0Rm9ybShfcmVmKSB7XG4gIHZhciBmb3JtSWQgPSBfcmVmLmZvcm1JZCxcbiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFtcImZvcm1JZFwiXSk7XG5cbiAgdmFyIGFjdGlvbiA9IFwiaHR0cHM6Ly9hcHAuY29udmVydGtpdC5jb20vZm9ybXMvXCIuY29uY2F0KGZvcm1JZCwgXCIvc3Vic2NyaXB0aW9uc1wiKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEZvcm0sIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIGFjdGlvbjogYWN0aW9uLFxuICAgIGZvcm1JZDogZm9ybUlkXG4gIH0pKTtcbn07XG5cbkNvbnZlcnRLaXRGb3JtLnByb3BUeXBlcyA9IHtcbiAgZm9ybWF0OiBwcm9wVHlwZXMuc3RyaW5nLFxuICB0ZW1wbGF0ZTogcHJvcFR5cGVzLnN0cmluZyxcbiAgZm9ybUlkOiBwcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIHN1Ym1pdFRleHQ6IHByb3BUeXBlcy5zdHJpbmcsXG4gIGVtYWlsUGxhY2Vob2xkZXI6IHByb3BUeXBlcy5zdHJpbmcsXG4gIG5hbWVQbGFjZWhvbGRlcjogcHJvcFR5cGVzLnN0cmluZyxcbiAgbmFtZUxhYmVsOiBwcm9wVHlwZXMuc3RyaW5nLFxuICBlbWFpbExhYmVsOiBwcm9wVHlwZXMuc3RyaW5nLFxuICBzaG93TGFiZWxzOiBwcm9wVHlwZXMuYm9vbCxcbiAgaGlkZU5hbWU6IHByb3BUeXBlcy5ib29sLFxuICBuZXdUYWI6IHByb3BUeXBlcy5ib29sLFxuICBzdGFja2VkOiBwcm9wVHlwZXMuYm9vbCxcbiAgaGlkZVdhcm5pbmdzOiBwcm9wVHlwZXMuYm9vbFxufTtcbkNvbnZlcnRLaXRGb3JtLmRlZmF1bHRQcm9wcyA9IHtcbiAgZm9ybWF0OiAnaW5saW5lJyxcbiAgdGVtcGxhdGU6ICdtaW5pbWFsJyxcbiAgc3VibWl0VGV4dDogJ1N1YnNjcmliZScsXG4gIGVtYWlsUGxhY2Vob2xkZXI6ICdZb3VyIGVtYWlsJyxcbiAgbmFtZVBsYWNlaG9sZGVyOiAnWW91ciBmaXJzdCBuYW1lJyxcbiAgbmFtZUxhYmVsOiAnRmlyc3QgbmFtZScsXG4gIGVtYWlsTGFiZWw6ICdFbWFpbCcsXG4gIHNob3dMYWJlbHM6IGZhbHNlLFxuICBoaWRlTmFtZTogZmFsc2UsXG4gIG5ld1RhYjogZmFsc2UsXG4gIHN0YWNrZWQ6IHRydWUsXG4gIGhpZGVXYXJuaW5nczogZmFsc2Vcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbnZlcnRLaXRGb3JtO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/convertkit-react/bin/convertkit-react.esm.js\n");

/***/ }),

/***/ "./node_modules/convertkit-react/node_modules/react/cjs/react.development.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/convertkit-react/node_modules/react/cjs/react.development.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.14.0\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\nvar checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\nvar ReactVersion = '16.14.0';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  suspense: null\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\nfunction describeComponentFrame (name, source, ownerName) {\n  var sourceInfo = '';\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n\n        if (match) {\n          var pathBeforeSlash = match[1];\n\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nvar Resolved = 1;\nfunction refineResolvedLazyComponent(lazyComponent) {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var thenable = type;\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\n\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n\n          break;\n        }\n    }\n  }\n\n  return null;\n}\n\nvar ReactDebugCurrentFrame = {};\nvar currentlyValidatingElement = null;\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\n{\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n/**\n * Used by act() to track whether you're inside an act() scope.\n */\nvar IsSomeRendererActing = {\n  current: false\n};\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner,\n  IsSomeRendererActing: IsSomeRendererActing,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  _assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    printWarning('warn', format, args);\n  }\n}\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var hasExistingStack = args.length > 0 && typeof args[args.length - 1] === 'string' && args[args.length - 1].indexOf('\\n    in') === 0;\n\n    if (!hasExistingStack) {\n      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n      var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n      if (stack !== '') {\n        format += '%s';\n        args = args.concat([stack]);\n      }\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(message);\n    } catch (x) {}\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {\n    {\n      throw Error( \"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\" );\n    }\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n_assign(pureComponentPrototype, Component.prototype);\n\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (!!(element === null || element === undefined)) {\n    {\n      throw Error( \"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\" );\n    }\n  }\n\n  var propName; // Original props are copied\n\n  var props = _assign({}, element.props); // Reserved names are extracted\n\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\n\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is deprecated and will be removed in ' + 'a future major release. Consider converting children to ' + 'an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n\n      var childrenString = '' + children;\n\n      {\n        {\n          throw Error( \"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \").\" + addendum );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n  func.call(context, child, bookKeeping.count++);\n}\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\n\n\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n      return c;\n    });\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\n\n\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  return traverseAllChildren(children, function () {\n    return null;\n  }, null);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n    return child;\n  });\n  return result;\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    {\n      throw Error( \"React.Children.only expected to receive a single React element child.\" );\n    }\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {\n        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n      }\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction lazy(ctor) {\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _ctor: ctor,\n    // React uses these fields to store the result.\n    _status: -1,\n    _result: null\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes;\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  if (!(dispatcher !== null)) {\n    {\n      throw Error( \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\" );\n    }\n  }\n\n  return dispatcher;\n}\n\nfunction useContext(Context, unstable_observedBits) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    if (unstable_observedBits !== undefined) {\n      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '');\n    } // TODO: add a more generic warning for invalid values.\n\n\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n  }\n\n  setCurrentlyValidatingElement(element);\n\n  {\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var name = getComponentName(type);\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      setCurrentlyValidatingElement(element);\n      checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n      setCurrentlyValidatingElement(null);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true;\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    setCurrentlyValidatingElement(fragment);\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n    }\n\n    setCurrentlyValidatingElement(null);\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\n{\n\n  try {\n    var frozenObject = Object.freeze({});\n    var testMap = new Map([[frozenObject, null]]);\n    var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.\n    // https://github.com/rollup/rollup/issues/1771\n    // TODO: we can remove these if Rollup fixes the bug.\n\n    testMap.set(0, 0);\n    testSet.add(0);\n  } catch (e) {\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useEffect = useEffect;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.version = ReactVersion;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/convertkit-react/node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "./node_modules/convertkit-react/node_modules/react/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/convertkit-react/node_modules/react/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/convertkit-react/node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NvbnZlcnRraXQtcmVhY3Qvbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzPzdmYmMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0QsbUJBQW1CLG1CQUFPLENBQUMsK0dBQTRCO0FBQ3ZEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NvbnZlcnRraXQtcmVhY3Qvbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/convertkit-react/node_modules/react/index.js\n");

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanM/YTE1YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsSUFBSSxJQUFxQztBQUN6Qyw2QkFBNkIsbUJBQU8sQ0FBQyx5RkFBNEI7QUFDakU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0R0FBNEc7QUFDNUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuICB2YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIHZhciBoYXMgPSBGdW5jdGlvbi5jYWxsLmJpbmQoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSk7XG5cbiAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24odGV4dCkge1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyB0ZXh0O1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG59XG5cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxuICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGxvY2F0aW9uIGUuZy4gXCJwcm9wXCIsIFwiY29udGV4dFwiLCBcImNoaWxkIGNvbnRleHRcIlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cbiAqIEBwYXJhbSB7P0Z1bmN0aW9ufSBnZXRTdGFjayBSZXR1cm5zIHRoZSBjb21wb25lbnQgc3RhY2suXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGdldFN0YWNrKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuICAgICAgaWYgKGhhcyh0eXBlU3BlY3MsIHR5cGVTcGVjTmFtZSkpIHtcbiAgICAgICAgdmFyIGVycm9yO1xuICAgICAgICAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAvLyBmYWlsIHRoZSByZW5kZXIgcGhhc2Ugd2hlcmUgaXQgZGlkbid0IGZhaWwgYmVmb3JlLiBTbyB3ZSBsb2cgaXQuXG4gICAgICAgIC8vIEFmdGVyIHRoZXNlIGhhdmUgYmVlbiBjbGVhbmVkIHVwLCB3ZSdsbCBsZXQgdGhlbSB0aHJvdy5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIGlzIGludGVudGlvbmFsbHkgYW4gaW52YXJpYW50IHRoYXQgZ2V0cyBjYXVnaHQuIEl0J3MgdGhlIHNhbWVcbiAgICAgICAgICAvLyBiZWhhdmlvciBhcyB3aXRob3V0IHRoaXMgc3RhdGVtZW50IGV4Y2VwdCB3aXRoIGEgYmV0dGVyIG1lc3NhZ2UuXG4gICAgICAgICAgaWYgKHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKFxuICAgICAgICAgICAgICAoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6ICcgKyBsb2NhdGlvbiArICcgdHlwZSBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7ICcgK1xuICAgICAgICAgICAgICAnaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCcgKyB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gKyAnYC4nXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVycm9yID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXJyb3IgPSBleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgJiYgIShlcnJvciBpbnN0YW5jZW9mIEVycm9yKSkge1xuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgIChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICcgK1xuICAgICAgICAgICAgbG9jYXRpb24gKyAnIGAnICsgdHlwZVNwZWNOYW1lICsgJ2AgaXMgaW52YWxpZDsgdGhlIHR5cGUgY2hlY2tlciAnICtcbiAgICAgICAgICAgICdmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSAnICsgdHlwZW9mIGVycm9yICsgJy4gJyArXG4gICAgICAgICAgICAnWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgJyArXG4gICAgICAgICAgICAnY3JlYXRvciAoYXJyYXlPZiwgaW5zdGFuY2VPZiwgb2JqZWN0T2YsIG9uZU9mLCBvbmVPZlR5cGUsIGFuZCAnICtcbiAgICAgICAgICAgICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJ1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgIShlcnJvci5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcbiAgICAgICAgICAvLyBPbmx5IG1vbml0b3IgdGhpcyBmYWlsdXJlIG9uY2UgYmVjYXVzZSB0aGVyZSB0ZW5kcyB0byBiZSBhIGxvdCBvZiB0aGVcbiAgICAgICAgICAvLyBzYW1lIGVycm9yLlxuICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvci5tZXNzYWdlXSA9IHRydWU7XG5cbiAgICAgICAgICB2YXIgc3RhY2sgPSBnZXRTdGFjayA/IGdldFN0YWNrKCkgOiAnJztcblxuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgICdGYWlsZWQgJyArIGxvY2F0aW9uICsgJyB0eXBlOiAnICsgZXJyb3IubWVzc2FnZSArIChzdGFjayAhPSBudWxsID8gc3RhY2sgOiAnJylcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUmVzZXRzIHdhcm5pbmcgY2FjaGUgd2hlbiB0ZXN0aW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmNoZWNrUHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlID0gZnVuY3Rpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjaGVja1Byb3BUeXBlcztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/prop-types/checkPropTypes.js\n");

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzPzU5YjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/prop-types/lib/ReactPropTypesSecret.js\n");

/***/ }),

/***/ "./pages/test.jsx":
/*!************************!*\
  !*** ./pages/test.jsx ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var convertkit_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! convertkit-react */ \"./node_modules/convertkit-react/bin/convertkit-react.esm.js\");\n\n\nvar _jsxFileName = \"/Users/mike/Google Drive/Projects/Dev/mikeyblog/pages/test.jsx\",\n    _this = undefined;\n\n\nvar FORM_ID = 1875705;\n\nvar Test = function Test() {\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"body\", {\n    children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"h1\", {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(convertkit_react__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      template: \"clare\",\n      formId: FORM_ID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Test;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Test);\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvdGVzdC5qc3g/ZWYyOSJdLCJuYW1lcyI6WyJGT1JNX0lEIiwiVGVzdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFFQSxJQUFNQSxPQUFPLEdBQUcsT0FBaEI7O0FBRUEsSUFBTUMsSUFBSSxHQUFHLFNBQVBBLElBQU87QUFBQSxzQkFDVDtBQUFBLDRCQUNJO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGFBREosZUFFSSxxRUFBQyx3REFBRDtBQUFnQixjQUFRLEVBQUMsT0FBekI7QUFBaUMsWUFBTSxFQUFFRDtBQUF6QztBQUFBO0FBQUE7QUFBQTtBQUFBLGFBRko7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBRFM7QUFBQSxDQUFiOztLQUFNQyxJO0FBT1NBLG1FQUFmIiwiZmlsZSI6Ii4vcGFnZXMvdGVzdC5qc3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29udmVydEtpdEZvcm0gZnJvbSBcImNvbnZlcnRraXQtcmVhY3RcIjtcblxuY29uc3QgRk9STV9JRCA9IDE4NzU3MDU7XG5cbmNvbnN0IFRlc3QgPSAoKSA9PiAoXG4gICAgPGJvZHk+XG4gICAgICAgIDxoMT5oaTwvaDE+XG4gICAgICAgIDxDb252ZXJ0S2l0Rm9ybSB0ZW1wbGF0ZT1cImNsYXJlXCIgZm9ybUlkPXtGT1JNX0lEfSAvPlxuICAgIDwvYm9keT5cbilcblxuZXhwb3J0IGRlZmF1bHQgVGVzdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/test.jsx\n");

/***/ })

})