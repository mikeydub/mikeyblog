{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mike/Google Drive/Projects/Dev/mikeyblog/pages/blog/[slug].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport Head from 'next/head';\nimport Layout, { siteTitle } from '../../components/layout';\nimport Date from '../../components/date';\nimport { NotionRenderer } from \"react-notion\";\nimport { getAllPosts } from '../';\nexport async function getServerSideProps(context) {\n  var _context$params;\n\n  const pageId = (_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.pageId;\n\n  if (!pageId) {\n    return;\n  }\n\n  const data = await fetch(`https://notion-api.splitbee.io/v1/page/${pageId}`).then(res => res.json());\n  return {\n    props: {\n      blockMap: data\n    }\n  };\n}\n\nconst NotionPage = ({\n  blockMap\n}) => {\n  var _blockMap$Object$keys;\n\n  if (!blockMap || Object.keys(blockMap).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No data found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Make sure the pageId is valid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Only public pages are supported in this example.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  const title = (_blockMap$Object$keys = blockMap[Object.keys(blockMap)[0]]) === null || _blockMap$Object$keys === void 0 ? void 0 : _blockMap$Object$keys.value.properties.title[0][0];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        className: \"jsx-1298905063\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotionRenderer, {\n      blockMap: blockMap,\n      fullPage: true,\n      customBlockComponents: {\n        page: ({\n          blockValue,\n          renderComponent\n        }) => /*#__PURE__*/_jsxDEV(Link, {\n          href: `/${blockValue.id}`,\n          children: renderComponent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1298905063\",\n      children: \"div .notion-code{box-sizing:border-box;}body{padding:0;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9taWtlL0dvb2dsZSBEcml2ZS9Qcm9qZWN0cy9EZXYvbWlrZXlibG9nL3BhZ2VzL2Jsb2cvW3NsdWddLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9EeUIsQUFHaUMsQUFHWixVQUNELFNBQ1gsR0FKQSIsImZpbGUiOiIvVXNlcnMvbWlrZS9Hb29nbGUgRHJpdmUvUHJvamVjdHMvRGV2L21pa2V5YmxvZy9wYWdlcy9ibG9nL1tzbHVnXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCdcbmltcG9ydCBMYXlvdXQsIHsgc2l0ZVRpdGxlIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9sYXlvdXQnXG5pbXBvcnQgRGF0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2RhdGUnXG5pbXBvcnQgeyBOb3Rpb25SZW5kZXJlciB9IGZyb20gXCJyZWFjdC1ub3Rpb25cIlxuaW1wb3J0IHsgZ2V0QWxsUG9zdHMgfSBmcm9tICcuLi8nXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJTaWRlUHJvcHMoY29udGV4dCkge1xuICBjb25zdCBwYWdlSWQgPSBjb250ZXh0LnBhcmFtcz8ucGFnZUlkO1xuXG4gIGlmICghcGFnZUlkKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgZGF0YSA9IGF3YWl0IGZldGNoKFxuICAgIGBodHRwczovL25vdGlvbi1hcGkuc3BsaXRiZWUuaW8vdjEvcGFnZS8ke3BhZ2VJZH1gXG4gICkudGhlbihyZXMgPT4gcmVzLmpzb24oKSk7XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9wczoge1xuICAgICAgYmxvY2tNYXA6IGRhdGFcbiAgICB9XG4gIH07XG59XG5cbmNvbnN0IE5vdGlvblBhZ2UgPSAoeyBibG9ja01hcCB9KSA9PiB7XG4gIGlmICghYmxvY2tNYXAgfHwgT2JqZWN0LmtleXMoYmxvY2tNYXApLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDM+Tm8gZGF0YSBmb3VuZC48L2gzPlxuICAgICAgICA8ZGl2Pk1ha2Ugc3VyZSB0aGUgcGFnZUlkIGlzIHZhbGlkLjwvZGl2PlxuICAgICAgICA8ZGl2Pk9ubHkgcHVibGljIHBhZ2VzIGFyZSBzdXBwb3J0ZWQgaW4gdGhpcyBleGFtcGxlLjwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuICBcbiAgY29uc3QgdGl0bGUgPVxuICAgIGJsb2NrTWFwW09iamVjdC5rZXlzKGJsb2NrTWFwKVswXV0/LnZhbHVlLnByb3BlcnRpZXMudGl0bGVbMF1bMF07XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT57dGl0bGV9PC90aXRsZT5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxOb3Rpb25SZW5kZXJlclxuICAgICAgICBibG9ja01hcD17YmxvY2tNYXB9XG4gICAgICAgIGZ1bGxQYWdlXG4gICAgICAgIGN1c3RvbUJsb2NrQ29tcG9uZW50cz17e1xuICAgICAgICAgIHBhZ2U6ICh7IGJsb2NrVmFsdWUsIHJlbmRlckNvbXBvbmVudCB9KSA9PiAoXG4gICAgICAgICAgICA8TGluayBocmVmPXtgLyR7YmxvY2tWYWx1ZS5pZH1gfT57cmVuZGVyQ29tcG9uZW50KCl9PC9MaW5rPlxuICAgICAgICAgIClcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICBkaXYgOmdsb2JhbCgubm90aW9uLWNvZGUpIHtcbiAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICB9XG4gICAgICAgIGJvZHkge1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBOb3Rpb25QYWdlO1xuXG4vLyBleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3RhdGljUHJvcHMoeyBwYXJhbXM6IHsgc2x1ZyB9IH0pIHtcbi8vICAgLy8gR2V0IGFsbCBwb3N0cyBhZ2FpblxuLy8gICBjb25zdCBwb3N0cyA9IGF3YWl0IGdldEFsbFBvc3RzKCk7XG5cbi8vICAgLy8gRmluZCB0aGUgY3VycmVudCBibG9ncG9zdCBieSBzbHVnXG4vLyAgIGNvbnN0IHBvc3QgPSBwb3N0cy5maW5kKCh0KSA9PiB0LnNsdWcgPT09IHNsdWcpO1xuXG4vLyAgIGNvbnN0IGJsb2NrcyA9IGF3YWl0IGZldGNoKGBodHRwczovL25vdGlvbi1hcGkuc3BsaXRiZWUuaW8vdjEvcGFnZS8ke3Bvc3QuaWR9YFxuLy8gICAgICAgICAgICAgICAgICkudGhlbigocmVzKSA9PiByZXMuanNvbigpKTtcbiAgXG4vLyAgIHJldHVybiB7XG4vLyAgICAgcHJvcHM6IHtcbi8vICAgICAgcG9zdCxcbi8vICAgICAgYmxvY2tzLFxuLy8gICAgIH0sXG4vLyAgIH07XG4vLyB9XG5cbi8vIGNvbnN0IFNsdWcgPSAoeyBwb3N0LCBibG9ja3MgfSkgPT4gKFxuLy8gICA8TGF5b3V0IHBhZ2U9J3Bvc3QnPlxuLy8gICAgIDxIZWFkPlxuLy8gICAgICAgPHRpdGxlPnsgc2l0ZVRpdGxlIH08L3RpdGxlPlxuLy8gICAgIDwvSGVhZD5cbi8vICAgPGRpdiBzdHlsZT17eyBtYXhXaWR0aDogNzY4IH19PlxuLy8gICAgIDxkaXYgY2xhc3NOYW1lPSdtYi0xMCc+XG4vLyAgICAgICA8aDEgY2xhc3NOYW1lPSd0ZXh0LTV4bCBmb250LXNlbWlib2xkIG1iLTQnPntwb3N0LnRpdGxlfTwvaDE+XG4vLyAgICAgICA8cCBjbGFzc05hbWU9J3RleHQtc20gdGV4dC1ncmF5LTQwMCc+XG4vLyAgICAgICAgIDxEYXRlIGRhdGVTdHJpbmc9e3Bvc3QuZGF0ZX0gLz5cbi8vICAgICAgIDwvcD5cbi8vICAgICA8L2Rpdj5cbi8vICAgICA8Tm90aW9uUmVuZGVyZXIgYmxvY2tNYXA9e2Jsb2Nrc30gLz5cbi8vICAgPC9kaXY+XG4vLyAgIDwvTGF5b3V0PiBcbi8vICAgKTtcblxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFN0YXRpY1BhdGhzKCkge1xuLy8gICAgIGNvbnN0IHBvc3RzID0gYXdhaXQgZ2V0QWxsUG9zdHMoKTtcbi8vICAgICByZXR1cm4ge1xuLy8gICAgICAgcGF0aHM6IHBvc3RzLm1hcCgocm93KSA9PiBgL2Jsb2cvJHtyb3cuc2x1Z31gKSxcbi8vICAgICAgIGZhbGxiYWNrOiB0cnVlLFxuLy8gICAgIH07XG4vLyAgIH1cblxuLy8gZXhwb3J0IGRlZmF1bHQgU2x1ZzsiXX0= */\\n/*@ sourceURL=/Users/mike/Google Drive/Projects/Dev/mikeyblog/pages/blog/[slug].js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true);\n};\n\nexport default NotionPage; // export async function getStaticProps({ params: { slug } }) {\n//   // Get all posts again\n//   const posts = await getAllPosts();\n//   // Find the current blogpost by slug\n//   const post = posts.find((t) => t.slug === slug);\n//   const blocks = await fetch(`https://notion-api.splitbee.io/v1/page/${post.id}`\n//                 ).then((res) => res.json());\n//   return {\n//     props: {\n//      post,\n//      blocks,\n//     },\n//   };\n// }\n// const Slug = ({ post, blocks }) => (\n//   <Layout page='post'>\n//     <Head>\n//       <title>{ siteTitle }</title>\n//     </Head>\n//   <div style={{ maxWidth: 768 }}>\n//     <div className='mb-10'>\n//       <h1 className='text-5xl font-semibold mb-4'>{post.title}</h1>\n//       <p className='text-sm text-gray-400'>\n//         <Date dateString={post.date} />\n//       </p>\n//     </div>\n//     <NotionRenderer blockMap={blocks} />\n//   </div>\n//   </Layout> \n//   );\n// export async function getStaticPaths() {\n//     const posts = await getAllPosts();\n//     return {\n//       paths: posts.map((row) => `/blog/${row.slug}`),\n//       fallback: true,\n//     };\n//   }\n// export default Slug;","map":{"version":3,"sources":["/Users/mike/Google Drive/Projects/Dev/mikeyblog/pages/blog/[slug].js"],"names":["Head","Layout","siteTitle","Date","NotionRenderer","getAllPosts","getServerSideProps","context","pageId","params","data","fetch","then","res","json","props","blockMap","NotionPage","Object","keys","length","title","value","properties","page","blockValue","renderComponent","id"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,yBAAlC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,WAAT,QAA4B,KAA5B;AAEA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAAA;;AAChD,QAAMC,MAAM,sBAAGD,OAAO,CAACE,MAAX,oDAAG,gBAAgBD,MAA/B;;AAEA,MAAI,CAACA,MAAL,EAAa;AACX;AACD;;AAED,QAAME,IAAI,GAAG,MAAMC,KAAK,CACrB,0CAAyCH,MAAO,EAD3B,CAAL,CAEjBI,IAFiB,CAEZC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFK,CAAnB;AAIA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAEN;AADL;AADF,GAAP;AAKD;;AAED,MAAMO,UAAU,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnC,MAAI,CAACA,QAAD,IAAaE,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,MAAtB,KAAiC,CAAlD,EAAqD;AACnD,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,QAAMC,KAAK,4BACTL,QAAQ,CAACE,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsB,CAAtB,CAAD,CADC,0DACT,sBAAoCM,KAApC,CAA0CC,UAA1C,CAAqDF,KAArD,CAA2D,CAA3D,EAA8D,CAA9D,CADF;AAGA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA,kBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEL,QADZ;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,qBAAqB,EAAE;AACrBQ,QAAAA,IAAI,EAAE,CAAC;AAAEC,UAAAA,UAAF;AAAcC,UAAAA;AAAd,SAAD,kBACJ,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,IAAGD,UAAU,CAACE,EAAG,EAA9B;AAAA,oBAAkCD,eAAe;AAAjD;AAAA;AAAA;AAAA;AAAA;AAFmB;AAHzB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA,kBADF;AAyBD,CAvCD;;AAyCA,eAAeT,UAAf,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import Head from 'next/head'\nimport Layout, { siteTitle } from '../../components/layout'\nimport Date from '../../components/date'\nimport { NotionRenderer } from \"react-notion\"\nimport { getAllPosts } from '../'\n\nexport async function getServerSideProps(context) {\n  const pageId = context.params?.pageId;\n\n  if (!pageId) {\n    return;\n  }\n\n  const data = await fetch(\n    `https://notion-api.splitbee.io/v1/page/${pageId}`\n  ).then(res => res.json());\n\n  return {\n    props: {\n      blockMap: data\n    }\n  };\n}\n\nconst NotionPage = ({ blockMap }) => {\n  if (!blockMap || Object.keys(blockMap).length === 0) {\n    return (\n      <div>\n        <h3>No data found.</h3>\n        <div>Make sure the pageId is valid.</div>\n        <div>Only public pages are supported in this example.</div>\n      </div>\n    );\n  }\n  \n  const title =\n    blockMap[Object.keys(blockMap)[0]]?.value.properties.title[0][0];\n\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n      </Head>\n      <NotionRenderer\n        blockMap={blockMap}\n        fullPage\n        customBlockComponents={{\n          page: ({ blockValue, renderComponent }) => (\n            <Link href={`/${blockValue.id}`}>{renderComponent()}</Link>\n          )\n        }}\n      />\n      <style jsx global>{`\n        div :global(.notion-code) {\n          box-sizing: border-box;\n        }\n        body {\n          padding: 0;\n          margin: 0;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default NotionPage;\n\n// export async function getStaticProps({ params: { slug } }) {\n//   // Get all posts again\n//   const posts = await getAllPosts();\n\n//   // Find the current blogpost by slug\n//   const post = posts.find((t) => t.slug === slug);\n\n//   const blocks = await fetch(`https://notion-api.splitbee.io/v1/page/${post.id}`\n//                 ).then((res) => res.json());\n  \n//   return {\n//     props: {\n//      post,\n//      blocks,\n//     },\n//   };\n// }\n\n// const Slug = ({ post, blocks }) => (\n//   <Layout page='post'>\n//     <Head>\n//       <title>{ siteTitle }</title>\n//     </Head>\n//   <div style={{ maxWidth: 768 }}>\n//     <div className='mb-10'>\n//       <h1 className='text-5xl font-semibold mb-4'>{post.title}</h1>\n//       <p className='text-sm text-gray-400'>\n//         <Date dateString={post.date} />\n//       </p>\n//     </div>\n//     <NotionRenderer blockMap={blocks} />\n//   </div>\n//   </Layout> \n//   );\n\n// export async function getStaticPaths() {\n//     const posts = await getAllPosts();\n//     return {\n//       paths: posts.map((row) => `/blog/${row.slug}`),\n//       fallback: true,\n//     };\n//   }\n\n// export default Slug;"]},"metadata":{},"sourceType":"module"}