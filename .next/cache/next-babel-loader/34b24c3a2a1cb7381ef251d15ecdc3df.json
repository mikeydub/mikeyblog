{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mike/Google Drive/Projects/Dev/mikeyblog/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mike/Google Drive/Projects/Dev/mikeyblog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mike/Google Drive/Projects/Dev/mikeyblog/pages/blog/[slug].js\",\n    _s = $RefreshSig$();\n\nimport Head from 'next/head';\nimport Layout, { siteTitle } from '../../components/layout';\nimport Date from '../../components/date';\nimport { NotionRenderer } from \"react-notion\";\nimport { getAllPosts } from '../';\nimport { useRouter } from 'next/router';\nvar BLOG_URL = process.env.BLOG_URL;\nvar CONTENT_API_KEY = process.env.CONTENT_API_KEY;\nexport var __N_SSG = true;\nexport function getPosts(_x) {\n  return _getPosts.apply(this, arguments);\n}\n\nfunction _getPosts() {\n  _getPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(slug) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(BLOG_URL, \"ghost/api/v3/content/posts/slug/\").concat(slug, \"?key=\").concat(CONTENT_API_KEY, \"&fields=title,slug,reading_time,published_at,html\")).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            res = _context.sent;\n            console.log(res.posts);\n            return _context.abrupt(\"return\", res.posts[0]);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getPosts.apply(this, arguments);\n}\n\nexport default function Post(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h1>hello</h1>\n    //   <div dangerouslySetInnerHTML={{ __html: post.html}}></div>\n    // </div>\n    _jsxDEV(Layout, {\n      page: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: siteTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: 768\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-5xl font-semibold mb-4\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400\",\n            children: /*#__PURE__*/_jsxDEV(Date, {\n              dateString: post.published_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: post.html\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/mike/Google Drive/Projects/Dev/mikeyblog/pages/blog/[slug].js"],"names":["Head","Layout","siteTitle","Date","NotionRenderer","getAllPosts","useRouter","BLOG_URL","process","env","CONTENT_API_KEY","getPosts","slug","fetch","then","res","json","console","log","posts","Post","post","router","isFallback","maxWidth","title","published_at","__html","html"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,yBAAlC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,WAAT,QAA4B,KAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYF,QAA7B;AACA,IAAMG,eAAe,GAAGF,OAAO,CAACC,GAAR,CAAYC,eAApC;;AAEA,gBAAsBC,QAAtB;AAAA;AAAA;;;uEAAO,iBAAwBC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaC,KAAK,WAChBN,QADgB,6CAC2BK,IAD3B,kBACuCF,eADvC,uDAAL,CAEZI,IAFY,CAEP,UAACC,GAAD;AAAA,qBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,aAFO,CADb;;AAAA;AACCD,YAAAA,GADD;AAKLE,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,KAAhB;AALK,6CAMEJ,GAAG,CAACI,KAAJ,CAAU,CAAV,CANF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkCP,eAAe,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAErC,MAAMC,MAAM,GAAGhB,SAAS,EAAxB;;AAEA,MAAIgB,MAAM,CAACC,UAAX,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD;AAAA;AACE;AACA;AACA;AACA;AACA,YAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAA,8BACE,QAAC,IAAD;AAAA,+BACE;AAAA,oBAASrB;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,KAAK,EAAE;AAAEsB,UAAAA,QAAQ,EAAE;AAAZ,SAAZ;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,6BAAd;AAAA,sBAA6CH,IAAI,CAACI;AAAlD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,uBAAb;AAAA,mCACA,QAAC,IAAD;AAAM,cAAA,UAAU,EAAEJ,IAAI,CAACK;AAAvB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAEN,IAAI,CAACO;AAAf;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAoBD;;GA3BuBR,I;UAEPd,S;;;KAFOc,I","sourcesContent":["import Head from 'next/head'\nimport Layout, { siteTitle } from '../../components/layout'\nimport Date from '../../components/date'\nimport { NotionRenderer } from \"react-notion\"\nimport { getAllPosts } from '../'\nimport { useRouter } from 'next/router'\n\nconst BLOG_URL = process.env.BLOG_URL\nconst CONTENT_API_KEY = process.env.CONTENT_API_KEY\n\nexport async function getPosts(slug) {\n  const res = await fetch(\n      `${BLOG_URL}ghost/api/v3/content/posts/slug/${slug}?key=${CONTENT_API_KEY}&fields=title,slug,reading_time,published_at,html`\n      ).then((res) => res.json())\n\n  console.log(res.posts)\n  return res.posts[0]\n}\n\nexport async function getStaticProps({ params: { slug } }) {\n  const post = await getPosts(slug)\n\n  // Find the current blogpost by slug\n  // const post = posts.find((t) => t.slug === slug);\n\n  // const blocks = await fetch(`https://notion-api.splitbee.io/v1/page/${post.id}`\n  //               ).then((res) => res.json());\n  \n  return {\n    props: {\n     post,\n    //  blocks,\n    },\n  }\n}\n\nexport const getStaticPaths = () => {\n  \n  return {\n    paths: [],\n    fallback: true\n  }\n}\n\nexport default function Post({ post }) {\n\n  const router = useRouter()\n\n  if (router.isFallback) {\n    return <h1>loading...</h1>\n  }\n  return (\n    // <div>\n    //   <h1>hello</h1>\n    //   <div dangerouslySetInnerHTML={{ __html: post.html}}></div>\n    // </div>\n    <Layout page='post'>\n      <Head>\n        <title>{ siteTitle }</title>\n      </Head>\n      <div style={{ maxWidth: 768 }}>\n        <div className='mb-10'>\n          <h1 className='text-5xl font-semibold mb-4'>{post.title}</h1>\n          <p className='text-sm text-gray-400'>\n          <Date dateString={post.published_at} />\n          </p>\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: post.html}}></div>\n    </div>\n    </Layout> \n    );\n}"]},"metadata":{},"sourceType":"module"}