{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mike/Google Drive/Projects/Dev/mikeyblog/pages/blog/[slug].js\";\nimport Head from 'next/head';\nimport Layout, { siteTitle } from '../../components/layout';\nimport Date from '../../components/date';\nimport { NotionRenderer } from \"react-notion\";\nimport { getAllPosts } from '../';\nimport { useRouter } from 'next/router';\nconst BLOG_URL = process.env.BLOG_URL;\nconst CONTENT_API_KEY = process.env.CONTENT_API_KEY;\nexport async function getPosts(slug) {\n  const res = await fetch(`${BLOG_URL}ghost/api/v3/content/posts/slug/${slug}?key=${CONTENT_API_KEY}&fields=title,slug,reading_time,published_at,html`).then(res => res.json());\n  console.log(res.posts);\n  return res.posts[0];\n}\nexport async function getStaticProps({\n  params: {\n    slug\n  }\n}) {\n  const post = await getPosts(slug); // Find the current blogpost by slug\n  // const post = posts.find((t) => t.slug === slug);\n  // const blocks = await fetch(`https://notion-api.splitbee.io/v1/page/${post.id}`\n  //               ).then((res) => res.json());\n\n  return {\n    props: {\n      post //  blocks,\n\n    }\n  };\n}\nexport const getStaticPaths = () => {\n  return {\n    paths: [],\n    fallback: true\n  };\n};\nexport default function Post({\n  post\n}) {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    page: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: siteTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 768\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-5xl font-semibold mb-4\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-400\",\n          children: /*#__PURE__*/_jsxDEV(Date, {\n            dateString: post.published_at\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: post.html\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/mike/Google Drive/Projects/Dev/mikeyblog/pages/blog/[slug].js"],"names":["Head","Layout","siteTitle","Date","NotionRenderer","getAllPosts","useRouter","BLOG_URL","process","env","CONTENT_API_KEY","getPosts","slug","res","fetch","then","json","console","log","posts","getStaticProps","params","post","props","getStaticPaths","paths","fallback","Post","router","isFallback","maxWidth","title","published_at","__html","html"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,yBAAlC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,WAAT,QAA4B,KAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYF,QAA7B;AACA,MAAMG,eAAe,GAAGF,OAAO,CAACC,GAAR,CAAYC,eAApC;AAEA,OAAO,eAAeC,QAAf,CAAwBC,IAAxB,EAA8B;AACnC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAClB,GAAEP,QAAS,mCAAkCK,IAAK,QAAOF,eAAgB,mDADvD,CAAL,CAEZK,IAFY,CAENF,GAAD,IAASA,GAAG,CAACG,IAAJ,EAFF,CAAlB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,KAAhB;AACA,SAAON,GAAG,CAACM,KAAJ,CAAU,CAAV,CAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA,MAAM,EAAE;AAAET,IAAAA;AAAF;AAAV,CAA9B,EAAoD;AACzD,QAAMU,IAAI,GAAG,MAAMX,QAAQ,CAACC,IAAD,CAA3B,CADyD,CAGzD;AACA;AAEA;AACA;;AAEA,SAAO;AACLW,IAAAA,KAAK,EAAE;AACND,MAAAA,IADM,CAEP;;AAFO;AADF,GAAP;AAMD;AAED,OAAO,MAAME,cAAc,GAAG,MAAM;AAElC,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CANM;AAQP,eAAe,SAASC,IAAT,CAAc;AAAEL,EAAAA;AAAF,CAAd,EAAwB;AAErC,QAAMM,MAAM,GAAGtB,SAAS,EAAxB;;AAEA,MAAIsB,MAAM,CAACC,UAAX,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAS3B;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,KAAK,EAAE;AAAE4B,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,6BAAd;AAAA,oBAA6CR,IAAI,CAACS;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,UAAU,EAAET,IAAI,CAACU;AAAvB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAEX,IAAI,CAACY;AAAf;AAA9B;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD","sourcesContent":["import Head from 'next/head'\nimport Layout, { siteTitle } from '../../components/layout'\nimport Date from '../../components/date'\nimport { NotionRenderer } from \"react-notion\"\nimport { getAllPosts } from '../'\nimport { useRouter } from 'next/router'\n\nconst BLOG_URL = process.env.BLOG_URL\nconst CONTENT_API_KEY = process.env.CONTENT_API_KEY\n\nexport async function getPosts(slug) {\n  const res = await fetch(\n      `${BLOG_URL}ghost/api/v3/content/posts/slug/${slug}?key=${CONTENT_API_KEY}&fields=title,slug,reading_time,published_at,html`\n      ).then((res) => res.json())\n\n  console.log(res.posts)\n  return res.posts[0]\n}\n\nexport async function getStaticProps({ params: { slug } }) {\n  const post = await getPosts(slug)\n\n  // Find the current blogpost by slug\n  // const post = posts.find((t) => t.slug === slug);\n\n  // const blocks = await fetch(`https://notion-api.splitbee.io/v1/page/${post.id}`\n  //               ).then((res) => res.json());\n  \n  return {\n    props: {\n     post,\n    //  blocks,\n    },\n  }\n}\n\nexport const getStaticPaths = () => {\n  \n  return {\n    paths: [],\n    fallback: true\n  }\n}\n\nexport default function Post({ post }) {\n\n  const router = useRouter()\n\n  if (router.isFallback) {\n    return <h1>loading...</h1>\n  }\n  return (\n    <Layout page='post'>\n      <Head>\n        <title>{ siteTitle }</title>\n      </Head>\n      <div style={{ maxWidth: 768 }}>\n        <div className='mb-10'>\n          <h1 className='text-5xl font-semibold mb-4'>{post.title}</h1>\n          <p className='text-sm text-gray-400'>\n          <Date dateString={post.published_at} />\n          </p>\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: post.html}}></div>\n    </div>\n    </Layout> \n    );\n}"]},"metadata":{},"sourceType":"module"}